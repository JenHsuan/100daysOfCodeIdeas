{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { selectShowPlannerState } from './states/states';\nimport { setLogout } from './actions/articlesAction';\n\nvar BookmarksContent = function BookmarksContent() {\n  _s();\n\n  var disPatch = useDispatch();\n  var showPlanner = useSelector(selectShowPlannerState);\n  useEffect(function () {\n    var refreshToken = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get('api/renew-token/');\n\n              case 3:\n                res = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                disPatch(setLogout());\n                SetLogoutForLocalSorage();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 6]]);\n      }));\n\n      return function refreshToken() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    refreshToken();\n  }, []);\n\n  var SetLogoutForLocalSorage = function SetLogoutForLocalSorage() {\n    localStorage.setItem(\"login\", 'false');\n    localStorage.setItem(\"username\", '');\n    localStorage.setItem(\"email\", '');\n  };\n\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: \"\".concat(showPlanner === true ? 'bookmarkspage-head' : 'bookmarkspage-head bookmarkspage-head-remove-left')\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Your Bookmarks\"), __jsx(\"div\", {\n    className: \"subtitle\"\n  }, \"Add the next free article for skills you want to learn to your plan\")));\n};\n\n_s(BookmarksContent, \"elOYRS+DC2wzZmajRLePCInHsnw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = BookmarksContent;\nexport default BookmarksContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookmarksContent\");","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/BookmarksContent.tsx"],"names":["React","useEffect","Fragment","useDispatch","useSelector","axios","selectShowPlannerState","setLogout","BookmarksContent","disPatch","showPlanner","refreshToken","get","res","console","log","SetLogoutForLocalSorage","localStorage","setItem"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,sBADJ,QAEO,iBAFP;AAGA,SACIC,SADJ,QAEO,0BAFP;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC3B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,WAAW,GAAGN,WAAW,CAACE,sBAAD,CAA/B;AAEAL,EAAAA,SAAS,CAAC,YAAK;AACX,QAAMU,YAAY;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEKN,KAAK,CAACO,GAAN,CAAU,kBAAV,CAFL;;AAAA;AAEPC,gBAAAA,GAFO;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIbC,gBAAAA,OAAO,CAACC,GAAR;AACAN,gBAAAA,QAAQ,CAACF,SAAS,EAAV,CAAR;AACAS,gBAAAA,uBAAuB;;AANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZL,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAUAA,IAAAA,YAAY;AACf,GAZQ,EAYN,EAZM,CAAT;;AAcA,MAAMK,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAClCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,EAAjC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,EAA9B;AACH,GAJD;;AAMA,SACI,MAAC,QAAD,QACI;AAAK,IAAA,SAAS,YAAKR,WAAW,KAAK,IAAhB,GAAuB,oBAAvB,GAA8C,mDAAnD;AAAd,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,sBADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,2EAJJ,CADJ,CADJ;AAYH,CApCD;;GAAMF,gB;UACeL,W,EACGC,W;;;KAFlBI,gB;AAsCN,eAAeA,gBAAf","sourcesContent":["import React, {useEffect, Fragment, useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport {\n    selectShowPlannerState,\n} from './states/states';\nimport {\n    setLogout\n} from './actions/articlesAction';\n\nconst BookmarksContent = () => {\n    const disPatch = useDispatch();\n    const showPlanner = useSelector(selectShowPlannerState);\n\n    useEffect(()=> {\n        const refreshToken = async () => {\n            try {\n                const res = await axios.get('api/renew-token/');\n            } catch(error) {\n                console.log(error)\n                disPatch(setLogout());\n                SetLogoutForLocalSorage();\n            }\n        };\n        \n        refreshToken();\n    }, [])\n\n    const SetLogoutForLocalSorage = () => {\n        localStorage.setItem(\"login\", 'false');\n        localStorage.setItem(\"username\", '');\n        localStorage.setItem(\"email\", '');\n    }\n\n    return (\n        <Fragment>\n            <div className={`${showPlanner === true ? 'bookmarkspage-head' : 'bookmarkspage-head bookmarkspage-head-remove-left'}`}>\n                <div className=\"title\">\n                    Your Bookmarks\n                </div>\n                <div className=\"subtitle\">\n                    Add the next free article for skills you want to learn to your plan\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default BookmarksContent\n"]},"metadata":{},"sourceType":"module"}