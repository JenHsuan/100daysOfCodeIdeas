{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectArticlesState } from './states/states';\nimport { getArticles, setLogout, setBookmarks, setUserId, setUsername, setAccessToken, setProvider, setFinishedArticles, setEmail } from './actions/articlesAction';\nimport { refreshToken } from '../components/account';\n\nvar PageWrapper = function PageWrapper(_ref) {\n  var WrappedComponent = _ref.WrappedComponent;\n  return function () {\n    var disPatch = useDispatch();\n    var articles = useSelector(selectArticlesState);\n    useEffect(function () {\n      //Refresh JWT token or logout\n      refreshToken(SetLogout); //Fetch articles\n\n      if (articles.length === 0) {\n        console.log('fetch articles');\n        disPatch(getArticles());\n      } //Fetch Load bookmarks and finished articles\n\n\n      var bookmarksJson = localStorage.getItem(\"bookmarks\");\n\n      if (bookmarksJson !== null) {\n        var bookmarksList = bookmarksJson.split(',');\n        disPatch(setBookmarks(bookmarksList.filter(function (bookmark) {\n          return bookmark !== '';\n        })));\n      }\n\n      var filterArticlesJson = localStorage.getItem(\"filterArticles\");\n\n      if (filterArticlesJson !== null) {\n        var filterArticlesList = filterArticlesJson.split(',');\n        disPatch(setFinishedArticles(filterArticlesList.filter(function (filterArticle) {\n          return filterArticle !== '';\n        })));\n      }\n    }, []);\n\n    var SetLogout = function SetLogout() {\n      disPatch(setLogout());\n      disPatch(setUsername(''));\n      disPatch(setUserId(-1));\n      disPatch(setEmail(''));\n      disPatch(setFinishedArticles([]));\n      disPatch(setAccessToken(''));\n      disPatch(setProvider(''));\n      disPatch(setBookmarks([]));\n    };\n\n    return __jsx(WrappedComponent, null);\n  };\n};\n\nexport default PageWrapper;","map":null,"metadata":{},"sourceType":"module"}