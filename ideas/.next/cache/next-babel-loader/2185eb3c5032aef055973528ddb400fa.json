{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectArticlesState } from './states/states';\nimport { getArticles, setBookmarks, setFinishedArticles } from './actions/articlesAction';\nimport { refreshToken } from '../components/account';\n\nconst PageWrapper = ({\n  WrappedComponent\n}) => () => {\n  const disPatch = useDispatch();\n  const articles = useSelector(selectArticlesState);\n  useEffect(() => {\n    //Refresh JWT token or logout\n    refreshToken(); //Fetch articles\n\n    if (articles.length === 0) {\n      console.log('fetch articles');\n      disPatch(getArticles());\n    } //Fetch Load bookmarks and finished articles\n\n\n    var bookmarksJson = localStorage.getItem(\"bookmarks\");\n\n    if (bookmarksJson !== null) {\n      var bookmarksList = bookmarksJson.split(',');\n      disPatch(setBookmarks(bookmarksList.filter(bookmark => bookmark !== '')));\n    }\n\n    var filterArticlesJson = localStorage.getItem(\"filterArticles\");\n\n    if (filterArticlesJson !== null) {\n      var filterArticlesList = filterArticlesJson.split(',');\n      disPatch(setFinishedArticles(filterArticlesList.filter(filterArticle => filterArticle !== '')));\n    }\n  }, []);\n  return __jsx(WrappedComponent, null);\n};\n\nexport default PageWrapper;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/PageWrapper.tsx"],"names":["React","useEffect","useDispatch","useSelector","selectArticlesState","getArticles","setBookmarks","setFinishedArticles","refreshToken","PageWrapper","WrappedComponent","disPatch","articles","length","console","log","bookmarksJson","localStorage","getItem","bookmarksList","split","filter","bookmark","filterArticlesJson","filterArticlesList","filterArticle"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SACIC,mBADJ,QAcO,iBAdP;AAgBA,SACIC,WADJ,EAMIC,YANJ,EAWIC,mBAXJ,QAaO,0BAbP;AAcA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAwB,MAAK;AAC7C,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGT,WAAW,CAACC,mBAAD,CAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAK;AACX;AACAO,IAAAA,YAAY,GAFD,CAIX;;AACA,QAAII,QAAQ,CAACC,MAAT,KAAoB,CAAxB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAJ,MAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACH,KARU,CAUX;;;AACA,QAAIW,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;AACA,QAAIF,aAAa,KAAK,IAAtB,EAA4B;AACxB,UAAIG,aAAa,GAAGH,aAAa,CAACI,KAAd,CAAoB,GAApB,CAApB;AACAT,MAAAA,QAAQ,CAACL,YAAY,CAACa,aAAa,CAACE,MAAd,CAAqBC,QAAQ,IAAIA,QAAQ,KAAK,EAA9C,CAAD,CAAb,CAAR;AACH;;AAED,QAAIC,kBAAkB,GAAGN,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAzB;;AACA,QAAIK,kBAAkB,KAAK,IAA3B,EAAiC;AAC7B,UAAIC,kBAAkB,GAAGD,kBAAkB,CAACH,KAAnB,CAAyB,GAAzB,CAAzB;AACAT,MAAAA,QAAQ,CAACJ,mBAAmB,CAACiB,kBAAkB,CAACH,MAAnB,CAA0BI,aAAa,IAAIA,aAAa,KAAK,EAA7D,CAAD,CAApB,CAAR;AACH;AACJ,GAtBQ,EAsBN,EAtBM,CAAT;AA0BA,SACI,MAAC,gBAAD,OADJ;AAGH,CAjCD;;AAmCA,eAAehB,WAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport {\n    selectArticlesState,\n    selectPartialArticlesState,\n    selectFilteredArticlesState,\n    selectIsLoadingState,\n    selectOffsetState,\n    selectPageCountState,\n    selectPerpageState,\n    selectShowPlannerState,\n    selectProviderState,\n    selectUserIdState,\n    selectEmailState,\n    selectAccessTokenState,\n    selectLoginState\n} from './states/states';\n\nimport { \n    getArticles,\n    setPartialArticles,\n    setOffset,\n    setPageCount,\n    setLogout,\n    setBookmarks,\n    setUserId,\n    setUsername,\n    setAccessToken,\n    setProvider,\n    setFinishedArticles,\n    setEmail\n} from './actions/articlesAction';\nimport { refreshToken } from '../components/account'\n\nconst PageWrapper = ({WrappedComponent}) => ()=> {\n    const disPatch = useDispatch();\n    const articles = useSelector(selectArticlesState);\n    \n    useEffect(()=> {\n        //Refresh JWT token or logout\n        refreshToken();\n\n        //Fetch articles\n        if (articles.length === 0) {\n            console.log('fetch articles')\n            disPatch(getArticles());\n        }\n\n        //Fetch Load bookmarks and finished articles\n        var bookmarksJson = localStorage.getItem(\"bookmarks\");\n        if (bookmarksJson !== null) {\n            var bookmarksList = bookmarksJson.split(',');\n            disPatch(setBookmarks(bookmarksList.filter(bookmark => bookmark !== '')))\n        }\n\n        var filterArticlesJson = localStorage.getItem(\"filterArticles\");\n        if (filterArticlesJson !== null) {\n            var filterArticlesList = filterArticlesJson.split(',');\n            disPatch(setFinishedArticles(filterArticlesList.filter(filterArticle => filterArticle !== '')))\n        }\n    }, [])\n\n\n\n    return (\n        <WrappedComponent/>\n    )\n}\n\nexport default PageWrapper\n"]},"metadata":{},"sourceType":"module"}