{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport { selectArticlesState, selectPartialArticlesState, selectFilteredArticlesState, selectIsLoadingState, selectOffsetState, selectPageCountState, selectPerpageState, selectShowPlannerState, selectLoginState } from './states/states';\nimport { setPartialArticles, setOffset, setPageCount } from './actions/articlesAction';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Spinner } from 'react-bootstrap';\nimport Article from './Article';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer';\nimport { useRouter } from 'next/router';\nimport ArticleSearchBar from './ArticleSearchBar';\nimport { useMediaPredicate } from \"react-media-hook\";\nimport PageWrapper from '../components/PageWrapper';\nimport { refreshToken } from '../components/account';\n\nvar ArticleList = function ArticleList() {\n  var disPatch = useDispatch();\n  var router = useRouter();\n  var isLoading = useSelector(selectIsLoadingState);\n  var articles = useSelector(selectArticlesState);\n  var filteredArticles = useSelector(selectFilteredArticlesState);\n  var partialArticles = useSelector(selectPartialArticlesState);\n  var perpage = useSelector(selectPerpageState);\n  var pageCount = useSelector(selectPageCountState);\n  var offset = useSelector(selectOffsetState);\n  var showPlanner = useSelector(selectShowPlannerState);\n  var smallerThan800 = useMediaPredicate(\"(max-width: 800px)\");\n  var isLogin = useSelector(selectLoginState);\n  useEffect(function () {\n    console.log('articles updated');\n    var partialData = articles.slice(offset, offset + perpage);\n    disPatch(setPartialArticles(partialData));\n    var count = Math.ceil(articles.length / perpage);\n    disPatch(setPageCount(count));\n  }, [articles]);\n  useEffect(function () {\n    console.log('filtered articles updated');\n    var count = filteredArticles.length === 0 ? Math.ceil(articles.length / perpage) : Math.ceil(filteredArticles.length / perpage);\n    disPatch(setPageCount(count));\n    setPartialData();\n  }, [filteredArticles]);\n  useEffect(function () {\n    var count = filteredArticles.length === 0 ? Math.ceil(articles.length / perpage) : Math.ceil(filteredArticles.length / perpage);\n    disPatch(setPageCount(count));\n    setPartialData();\n    window.scrollTo(0, 0);\n  }, [offset]);\n\n  var setPartialData = function setPartialData() {\n    var partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perpage) : filteredArticles.slice(offset, offset + perpage);\n    disPatch(setPartialArticles(partialData));\n  };\n\n  var handlePageSlected = function handlePageSlected(e) {\n    //Refresh JWT token or logout\n    refreshToken(function () {});\n    disPatch(setOffset(e.selected * perpage));\n  };\n\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: \"\".concat(showPlanner === true ? 'articles-hide-siderbar-head' : 'articles-hide-siderbar-head articles-hide-siderbar-head-remove-left')\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Learning materials (\".concat(filteredArticles.length === 0 ? articles.length : filteredArticles.length, \")\")), isLogin ? __jsx(\"div\", {\n    className: \"subtitle\"\n  }, \"Click the details button to check the article.\") : __jsx(\"div\", {\n    className: \"subtitle\"\n  }, __jsx(\"a\", {\n    href: \"/signin\"\n  }, \"Login \"), \"to add articles or skills in your learning plan or open them directly.\"), smallerThan800 && __jsx(ArticleSearchBar, null)), __jsx(\"div\", {\n    className: \"\".concat(showPlanner !== true ? 'articles-hide-siderbar' : 'articles-hide-siderbar articles-hide-siderbar-remove-left')\n  }, __jsx(\"div\", {\n    className: \"articles-row row\"\n  }, articles.length === 0 ? __jsx(\"div\", {\n    className: \"articles-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\"))) : partialArticles.map(function (article) {\n    return __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n      key: article.id,\n      timeout: 500,\n      classNames: \"item\"\n    }, __jsx(Article, {\n      key: article.id,\n      article: article\n    })));\n  })), partialArticles.length > 0 && __jsx(\"div\", {\n    className: \"article-pagination\"\n  }, __jsx(ReactPaginate, {\n    previousLabel: \"prev\",\n    nextLabel: \"next\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: handlePageSlected,\n    containerClassName: \"pagination\",\n    subContainerClassName: \"pages pagination\",\n    activeClassName: \"active\"\n  })), partialArticles.length > 0 && __jsx(Footer, null)));\n};\n\nexport default PageWrapper({\n  WrappedComponent: ArticleList\n});","map":null,"metadata":{},"sourceType":"module"}