{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'; //import { GoogleLogin } from 'react-google-login';\n\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css';\nimport axios from 'axios';\nimport { Form, Spinner } from 'react-bootstrap';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoginState, selectShowPlannerState, selectErrorMessageState, selectLoadingState } from './states/states';\nimport { setErrorMessage, setLoading, setBookmarks, setFinishedArticles, setUserId } from './actions/articlesAction';\nimport FormWrapper from '../components/FormWrapper';\n\nvar SignUpForm = function SignUpForm(_ref) {\n  var responseFacebook = _ref.responseFacebook,\n      ResponseGithubOnSuccess = _ref.ResponseGithubOnSuccess,\n      ResponseGithubOnFailure = _ref.ResponseGithubOnFailure,\n      SetLogin = _ref.SetLogin;\n  var disPatch = useDispatch();\n  var isLogin = useSelector(selectLoginState);\n  var showPlanner = useSelector(selectShowPlannerState);\n  var errorMessage = useSelector(selectErrorMessageState);\n  var isLoading = useSelector(selectLoadingState);\n\n  var _useState = useState(''),\n      redirectUri = _useState[0],\n      setRedirectUri = _useState[1];\n\n  useEffect(function () {\n    setRedirectUri(window.location.href);\n  }, []);\n  useEffect(function () {\n    if (isLogin) {\n      Router.push(\"/\");\n    }\n  }, [isLogin]);\n\n  var _useState2 = useState({\n    username: '',\n    email: '',\n    password: ''\n  }),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var username = value.username,\n      email = value.email,\n      password = value.password;\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      setValue(_objectSpread(_objectSpread({}, value), {}, _defineProperty({}, name, e.target.value.trim())));\n    };\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var createUserRes, err, id, token, headers, updateProfileRes, loginRes, bookmarksList, finishedArticlesList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Check if the form is invalid\n              // null or empty \n              // email format\n              e.preventDefault();\n              _context.prev = 1;\n              disPatch(setLoading(true));\n              _context.next = 5;\n              return axios.post('/api/users/', {\n                username: username,\n                password: password\n              });\n\n            case 5:\n              createUserRes = _context.sent;\n\n              if (!(createUserRes[\"data\"][\"error\"] !== undefined)) {\n                _context.next = 11;\n                break;\n              }\n\n              err = createUserRes[\"data\"][\"error\"];\n              disPatch(setErrorMessage(\"\".concat(Object.keys(err)[0], \" : \").concat(Object.values(err)[0])));\n              _context.next = 26;\n              break;\n\n            case 11:\n              id = createUserRes[\"data\"][\"id\"];\n              token = createUserRes[\"data\"][\"token\"];\n              headers = {\n                'Authorization': \"JWT \".concat(token)\n              };\n              _context.next = 16;\n              return axios.post('/api/profile/', {\n                email: email,\n                reader: id\n              });\n\n            case 16:\n              updateProfileRes = _context.sent;\n              err = updateProfileRes[\"data\"][\"error\"];\n\n              if (err !== undefined) {\n                disPatch(setErrorMessage(\"\".concat(Object.keys(err)[0], \" : \").concat(Object.values(err)[0])));\n              }\n\n              if (!(updateProfileRes !== undefined && updateProfileRes[\"data\"][\"email\"] === email)) {\n                _context.next = 26;\n                break;\n              }\n\n              _context.next = 22;\n              return axios.post('/api/token-auth/', {\n                username: username,\n                password: password\n              });\n\n            case 22:\n              loginRes = _context.sent;\n              SetLogin(token, email, username, \"normal\");\n              disPatch(setUserId(id));\n\n              if (updateProfileRes['error'] === undefined) {\n                bookmarksList = updateProfileRes['data']['bookmarks'].split(',');\n                disPatch(setBookmarks(bookmarksList.filter(function (bookmark) {\n                  return bookmark !== '';\n                })));\n                localStorage.setItem(\"bookmarks\", updateProfileRes['data']['bookmarks'].trim());\n                finishedArticlesList = updateProfileRes['data']['finishedArticles'].split(',');\n                disPatch(setFinishedArticles(finishedArticlesList.filter(function (finishedArticle) {\n                  return finishedArticle !== '';\n                })));\n                localStorage.setItem(\"finishedArticles\", updateProfileRes['data']['finishedArticles'].trim());\n              }\n\n            case 26:\n              disPatch(setLoading(false));\n              _context.next = 34;\n              break;\n\n            case 29:\n              _context.prev = 29;\n              _context.t0 = _context[\"catch\"](1);\n              //res.data = error;\n              disPatch(setLoading(false));\n              disPatch(setErrorMessage(_context.t0.message));\n              console.log(_context.t0);\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 29]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: \"\".concat(showPlanner === true ? 'signinform-move-left signinform' : 'signinform')\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"signinform-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\")))) : __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Create Your Free Account\"), __jsx(FacebookLogin, {\n    cssClass: \"fb-btn\",\n    appId: \"240314257268798\",\n    autoLoad: false,\n    fields: \"name,email,picture\",\n    callback: responseFacebook,\n    render: function render(renderProps) {\n      return __jsx(\"button\", {\n        onClick: renderProps.onClick,\n        className: \"fb-btn\"\n      }, \"Facebook\");\n    }\n  }), __jsx(GitHubLogin, {\n    className: \"github-btn\",\n    clientId: \"Iv1.ca8ab67c0ba860ab\",\n    redirectUri: redirectUri,\n    onSuccess: ResponseGithubOnSuccess,\n    onFailure: ResponseGithubOnFailure,\n    buttonText: \"Github\"\n  }), __jsx(\"div\", {\n    className: \"split-line\"\n  }, \"Or signup by email\"), __jsx(\"div\", {\n    className: \"signin-form\"\n  }, __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\"\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Username\",\n    className: \"username\",\n    onChange: handleChange('username')\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\"\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Email\",\n    className: \"email\",\n    onChange: handleChange('email')\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\"\n  }, __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"password\",\n    onChange: handleChange('password')\n  })), __jsx(\"button\", {\n    className: \"btn-submit\"\n  }, \"Get Started\"))), __jsx(\"div\", {\n    className: \"messages\"\n  }, errorMessage))));\n};\n\nexport default FormWrapper({\n  WrappedComponent: SignUpForm\n});","map":null,"metadata":{},"sourceType":"module"}