{"ast":null,"code":"import { useDispatch } from 'react-redux';\nimport { setLogin, setAccessToken, setEmail, setUsername } from './actions/articlesAction';\nvar disPatch = useDispatch();\n\nvar SetLogin = function SetLogin(token, email, username) {\n  if (token !== null && token !== undefined && token.length > 0) {\n    disPatch(setLogin());\n    disPatch(setAccessToken(token)); //local storage\n\n    localStorage.setItem(\"login\", \"true\");\n    localStorage.setItem(\"token\", token);\n\n    if (email !== null && email !== undefined && email.length > 0) {\n      disPatch(setEmail(email)); //local storage\n\n      localStorage.setItem(\"email\", email);\n    }\n\n    if (username !== null && username !== undefined && username.length > 0) {\n      disPatch(setUsername(username)); //local storage\n\n      localStorage.setItem(\"username\", username);\n    }\n  }\n};\n\n_c = SetLogin;\nexport { SetLogin };\n\nvar _c;\n\n$RefreshReg$(_c, \"SetLogin\");","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/Account.ts"],"names":["useDispatch","setLogin","setAccessToken","setEmail","setUsername","disPatch","SetLogin","token","email","username","undefined","length","localStorage","setItem"],"mappings":"AAAA,SAASA,WAAT,QAAyC,aAAzC;AAKA,SACIC,QADJ,EAGIC,cAHJ,EAIIC,QAJJ,EAKIC,WALJ,QAMO,0BANP;AAQA,IAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AAEA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,KAAR,EAAeC,QAAf,EAA4B;AACzC,MAAIF,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAA5B,IAAyCH,KAAK,CAACI,MAAN,GAAc,CAA3D,EAA+D;AAC3DN,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR;AACAI,IAAAA,QAAQ,CAACH,cAAc,CAACK,KAAD,CAAf,CAAR,CAF2D,CAI3D;;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,KAA9B;;AAEA,QAAIC,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKE,SAA5B,IAAyCF,KAAK,CAACG,MAAN,GAAc,CAA3D,EAA+D;AAC3DN,MAAAA,QAAQ,CAACF,QAAQ,CAACK,KAAD,CAAT,CAAR,CAD2D,CAG3D;;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,KAA9B;AACH;;AACD,QAAIC,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAKC,SAAlC,IAA+CD,QAAQ,CAACE,MAAT,GAAiB,CAApE,EAAwE;AACpEN,MAAAA,QAAQ,CAACD,WAAW,CAACK,QAAD,CAAZ,CAAR,CADoE,CAGpE;;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,QAAjC;AACH;AACJ;AACJ,CAtBD;;KAAMH,Q;AAwBN,SAASA,QAAT","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectLoginState\n} from './reducers/articlesReducer';\n\nimport { \n    setLogin,\n    setLogout,\n    setAccessToken,\n    setEmail,\n    setUsername\n} from './actions/articlesAction';\n\nconst disPatch = useDispatch();\n\nconst SetLogin = (token, email, username) => {\n    if (token !== null && token !== undefined && token.length >0 ) {\n        disPatch(setLogin());\n        disPatch(setAccessToken(token));\n\n        //local storage\n        localStorage.setItem(\"login\", \"true\");\n        localStorage.setItem(\"token\", token);\n\n        if (email !== null && email !== undefined && email.length >0 ) {\n            disPatch(setEmail(email));\n\n            //local storage\n            localStorage.setItem(\"email\", email);\n        }\n        if (username !== null && username !== undefined && username.length >0 ) {\n            disPatch(setUsername(username));\n\n            //local storage\n            localStorage.setItem(\"username\", username);\n        }\n    }\n}\n\nexport { SetLogin };\n\n"]},"metadata":{},"sourceType":"module"}