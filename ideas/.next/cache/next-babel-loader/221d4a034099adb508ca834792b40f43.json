{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport var refreshToken = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(SetLogout, Redirect) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get('api/renew-token/');\n\n          case 3:\n            res = _context.sent;\n            _context.next = 12;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            SetLogout();\n            SetLogoutForLocalSorage();\n            Redirect();\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function refreshToken(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var SetLogoutForLocalSorage = function SetLogoutForLocalSorage() {\n  localStorage.removeItem('login');\n  localStorage.removeItem('username');\n  localStorage.removeItem('email');\n  localStorage.removeItem('finishedArticles');\n  localStorage.removeItem('bookmarks');\n  localStorage.removeItem('token');\n  localStorage.removeItem('provider');\n};\n_c = SetLogoutForLocalSorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetLogoutForLocalSorage\");","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/account.js"],"names":["axios","refreshToken","SetLogout","Redirect","get","res","console","log","SetLogoutForLocalSorage","localStorage","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,SAAP,EAAkBC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEFH,KAAK,CAACI,GAAN,CAAU,kBAAV,CAFE;;AAAA;AAEdC,YAAAA,GAFc;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIpBC,YAAAA,OAAO,CAACC,GAAR;AACAL,YAAAA,SAAS;AACTM,YAAAA,uBAAuB;AACvBL,YAAAA,QAAQ;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZF,YAAY;AAAA;AAAA;AAAA,GAAlB;AAWP,OAAO,IAAMO,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACzCC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,kBAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACH,CARM;KAAMF,uB","sourcesContent":["import axios from 'axios';\n\nexport const refreshToken = async (SetLogout, Redirect) => {\n    try {\n        const res = await axios.get('api/renew-token/');\n    } catch(error) {\n        console.log(error)\n        SetLogout();\n        SetLogoutForLocalSorage();\n        Redirect();\n    }\n};\n\nexport const SetLogoutForLocalSorage = () => {\n    localStorage.removeItem('login');\n    localStorage.removeItem('username');\n    localStorage.removeItem('email');\n    localStorage.removeItem('finishedArticles');\n    localStorage.removeItem('bookmarks');\n    localStorage.removeItem('token');\n    localStorage.removeItem('provider');\n}\n"]},"metadata":{},"sourceType":"module"}