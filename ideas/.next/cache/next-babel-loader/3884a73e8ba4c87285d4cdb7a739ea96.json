{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetch from \"isomorphic-fetch\"; //Types\n\nimport { GET_ARTICLES } from '../types'; //Actions\n\nexport var getArticles = function getArticles() {\n  // Invoke API\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res2, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:8000/api/articles');\n\n            case 2:\n              res2 = _context.sent;\n              _context.next = 5;\n              return res2.json();\n\n            case 5:\n              data = _context.sent;\n              //const res = await axios.get('/api/articles');\n              console.log(res2);\n              return _context.abrupt(\"return\", dispatch({\n                type: 'GET_ARTICLES',\n                payload: data\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n/*\nexport const getArticles = (): GetArticlesAction => {\n    return dispatch => {\n\n    }\n    try {\n\n        const res = await axios.get('/api/articles');\n        return {\n            type: GET_ARTICLES, \n            payload: res.data}\n    }\n    catch (err) {}\n}\n*/\n//Selector functions\n\nexport var selectArticlesState = function selectArticlesState(rootState) {\n  return rootState.articlesReducer;\n}; //Initial state\n\nvar initialState = {\n  articles: []\n}; //Reducer\n\nvar articlesReducer = function articlesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ARTICLES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        products: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default articlesReducer;","map":null,"metadata":{},"sourceType":"module"}