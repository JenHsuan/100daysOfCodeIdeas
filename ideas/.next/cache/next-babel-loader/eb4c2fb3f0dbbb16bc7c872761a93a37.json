{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\nimport ArticleModal from '../components/ArticleModal';\nimport '.././css/article.css';\nimport '.././css/card.css';\nimport { selectLoginState } from './states/states';\n\nvar Article = function Article(_ref) {\n  _s();\n\n  var article = _ref.article;\n\n  var _useState = useState(false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var _useState2 = useState(false),\n      isBookmarked = _useState2[0],\n      setBookmark = _useState2[1];\n\n  var isLogin = useSelector(selectLoginState);\n  useEffect(function () {\n    var bookmarksJson = localStorage.getItem(\"bookmarks\");\n\n    if (bookmarksJson !== null) {\n      var bookmarks = JSON.parse(bookmarksJson);\n\n      if (bookmarks.find(function (bookmark) {\n        return bookmark === article.id;\n      }) !== undefined) {\n        setBookmark(true);\n      }\n    }\n  }, []);\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    setShow(true);\n  };\n\n  var onBookmarkClick = function onBookmarkClick() {\n    console.log('onBookmarkClick');\n\n    if (isBookmarked) {\n      var bookmarksJson = localStorage.getItem(\"bookmarks\");\n\n      if (bookmarksJson !== null) {\n        var bookmarks = JSON.parse(bookmarksJson);\n        var newBookmarks = bookmarks.filter(function (bookmark) {\n          return bookmark !== article.id;\n        });\n        localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n      }\n\n      setBookmark(false);\n    } else {\n      var bookmarksJson = localStorage.getItem(\"bookmarks\");\n      console.log(bookmarksJson);\n\n      if (bookmarksJson === null) {\n        localStorage.setItem(\"bookmarks\", \"[\".concat(article.id, \"]\"));\n      } else {\n        var bookmarks = JSON.parse(bookmarksJson);\n        bookmarks.push(article.id);\n        localStorage.setItem(\"bookmarks\", JSON.stringify(bookmarks));\n      }\n\n      setBookmark(true);\n    }\n  };\n\n  useEffect(function () {}, []);\n  return __jsx(\"div\", {\n    className: \"articles-row\"\n  }, __jsx(Card, {\n    className: \"article-card\",\n    border: \"light\"\n  }, isLogin && __jsx(\"div\", {\n    className: \"article-bookmark\"\n  }, __jsx(\"span\", {\n    className: \"btn-o\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: function onClick() {\n      onBookmarkClick();\n      return false;\n    }\n  }, isBookmarked ? __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-yellow.png\",\n    alt: \"Add this article to the bookmark\",\n    title: \"Add this article to the bookmark\"\n  }) : __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-white.png\",\n    alt: \"Add this article to the bookmark\",\n    title: \"Add this article to the bookmark\"\n  })))), __jsx(Card.Body, {\n    className: \"article-card-body\"\n  }, __jsx(\"img\", {\n    className: \"article-card-img\",\n    src: \"\".concat(article.image),\n    alt: article.title,\n    title: article.title\n  }), __jsx(\"div\", {\n    className: \"title\"\n  }, article.title), __jsx(\"div\", {\n    className: \"date\"\n  }, article.name), __jsx(\"div\", {\n    className: \"date\"\n  }, __jsx(\"span\", {\n    className: \"date\"\n  }, article.time), __jsx(\"span\", null, \" . \"), __jsx(\"span\", {\n    className: \"readtime\"\n  }, article.readtime)), __jsx(\"button\", {\n    className: \"article-btn\",\n    onClick: handleShow\n  }, \"Add to plan\"))), __jsx(ArticleModal, {\n    show: show,\n    handleClose: handleClose,\n    article: article\n  }));\n};\n\n_s(Article, \"yqrvCspre0qUAbbau6Ur1pL7nJA=\", false, function () {\n  return [useSelector];\n});\n\n_c = Article;\nArticle.propTypes = {\n  article: PropTypes.object.isRequired\n};\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/Article.tsx"],"names":["React","useEffect","useState","useSelector","PropTypes","Card","ArticleModal","selectLoginState","Article","article","show","setShow","isBookmarked","setBookmark","isLogin","bookmarksJson","localStorage","getItem","bookmarks","JSON","parse","find","bookmark","id","undefined","handleClose","handleShow","onBookmarkClick","console","log","newBookmarks","filter","setItem","stringify","push","image","title","name","time","readtime","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { Card} from 'react-bootstrap';\nimport ArticleModal from '../components/ArticleModal';\nimport '.././css/article.css'\nimport '.././css/card.css'\nimport {\n    selectLoginState\n} from './states/states';\n\nconst Article = ({article}) => {\n    const [show, setShow] = useState(false);\n    const [isBookmarked, setBookmark] = useState(false);\n    const isLogin = useSelector(selectLoginState);\n\n    useEffect(()=> {\n        var bookmarksJson = localStorage.getItem(\"bookmarks\");\n        if (bookmarksJson !== null) {\n            var bookmarks = JSON.parse(bookmarksJson);\n            if (bookmarks.find(bookmark => bookmark === article.id) !== undefined ) {\n\n                setBookmark(true);\n            }\n        }\n    }, [])\n\n    const handleClose = () => {\n        setShow(false);\n    }\n\n    const handleShow = () => {\n        setShow(true);\n    }\n\n    const onBookmarkClick = () => {\n        console.log('onBookmarkClick');\n        if (isBookmarked) {\n            var bookmarksJson = localStorage.getItem(\"bookmarks\");\n            if (bookmarksJson !== null) {\n                var bookmarks = JSON.parse(bookmarksJson);\n                var newBookmarks = bookmarks.filter(bookmark => bookmark !== article.id);\n                localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n            }\n            setBookmark(false);\n        } else {\n            var bookmarksJson = localStorage.getItem(\"bookmarks\");\n            console.log(bookmarksJson)\n            if (bookmarksJson === null) {\n                localStorage.setItem(\"bookmarks\", `[${article.id}]`);\n            } else {\n                var bookmarks = JSON.parse(bookmarksJson);\n                bookmarks.push(article.id);\n                localStorage.setItem(\"bookmarks\", JSON.stringify(bookmarks));\n            }\n            setBookmark(true);\n        }\n    }\n\n    useEffect(()=> {\n    }, [])\n\n    return (\n        <div className=\"articles-row\">\n            <Card className=\"article-card\" border=\"light\">\n                {isLogin && (\n                <div className=\"article-bookmark\">\n                    <span className=\"btn-o\">\n                        <a href='#' onClick={()=>{onBookmarkClick(); return false;}}>\n                            {isBookmarked \n                            ? <img src=\"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-yellow.png\" alt=\"Add this article to the bookmark\" title=\"Add this article to the bookmark\"/>\n                            : <img src=\"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-white.png\" alt=\"Add this article to the bookmark\" title=\"Add this article to the bookmark\"/>\n                            }\n                        </a>\n                    </span>\n                </div>\n                )}\n                <Card.Body className=\"article-card-body\">\n                    <img className=\"article-card-img\" src={`${article.image}`} alt={article.title} title={article.title}/>\n                    <div className=\"title\">{article.title}</div>\n                    <div className=\"date\">{article.name}</div>\n                    <div className=\"date\">\n                        <span className=\"date\">{article.time}</span>\n                        <span> . </span>\n                        <span className=\"readtime\">{article.readtime}</span>\n                    </div>\n                    <button className=\"article-btn\" onClick = {handleShow}>Add to plan</button>\n                </Card.Body>\n            </Card>\n            <ArticleModal show = {show} handleClose = {handleClose} article = {article} />\n        </div>\n    \n    )\n}\n\nArticle.propTypes = {\n    article: PropTypes.object.isRequired\n}\n\nexport default Article\n"]},"metadata":{},"sourceType":"module"}