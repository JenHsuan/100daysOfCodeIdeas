{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectArticlesState, selectFilteredArticlesState } from './reducers/articlesReducer';\nimport { getArticles } from './actions/articlesAction';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Article from './Article';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst ArticleList = () => {\n  const disPatch = useDispatch();\n  const articles = useSelector(selectArticlesState);\n  const filteredArticles = useSelector(selectFilteredArticlesState);\n  useEffect(() => {\n    disPatch(getArticles());\n  }, []);\n  useEffect(() => {//console.log(articles)\n  }, [articles]);\n  useEffect(() => {\n    console.log(filteredArticles);\n  }, [filteredArticles]);\n  return __jsx(\"div\", {\n    className: \"container\",\n    id: \"menu-container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, filteredArticles.length !== 0 ? filteredArticles.map(filteredArticle => __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n    key: filteredArticle.id,\n    timeout: 800,\n    classNames: \"item\"\n  }, __jsx(Article, {\n    article: filteredArticle\n  })))) : articles.map(article => __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n    key: article.id,\n    timeout: 800,\n    classNames: \"item\"\n  }, __jsx(Article, {\n    article: article\n  }))))));\n};\n\nArticleList.getInitialProps = async () => {\n  let news;\n\n  try {\n    const disPatch = useDispatch();\n  } catch (err) {\n    news = [];\n  }\n\n  return {\n    news\n  };\n};\n\nexport default ArticleList;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/ArticleList.tsx"],"names":["React","useEffect","useDispatch","useSelector","selectArticlesState","selectFilteredArticlesState","getArticles","CSSTransition","TransitionGroup","Article","ArticleList","disPatch","articles","filteredArticles","console","log","length","map","filteredArticle","id","article","getInitialProps","news","err"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,mBADJ,EAEIC,2BAFJ,QAGW,4BAHX;AAIA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SACIC,aADJ,EAEIC,eAFJ,QAGS,wBAHT;AAIA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,sCAAP;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGT,WAAW,CAACC,mBAAD,CAA5B;AACA,QAAMS,gBAAgB,GAAGV,WAAW,CAACE,2BAAD,CAApC;AACAJ,EAAAA,SAAS,CAAC,MAAK;AACXU,IAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAL,EAAAA,SAAS,CAAC,MAAK,CACX;AACH,GAFQ,EAEN,CAACW,QAAD,CAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAK;AACXa,IAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AACH,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,EAAE,EAAC;AAA9B,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACCA,gBAAgB,CAACG,MAAjB,KAA4B,CAA5B,GAAgCH,gBAAgB,CAACI,GAAjB,CAAqBC,eAAe,IAC7D,MAAC,eAAD,QACI,MAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,eAAe,CAACC,EAApC;AAAwC,IAAA,OAAO,EAAE,GAAjD;AAAsD,IAAA,UAAU,EAAC;AAAjE,KACI,MAAC,OAAD;AAAU,IAAA,OAAO,EAAID;AAArB,IADJ,CADJ,CADyB,CAAhC,GAMEN,QAAQ,CAACK,GAAT,CAAaG,OAAO,IACnB,MAAC,eAAD,QACI,MAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACD,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,UAAU,EAAC;AAAzD,KACI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAIC;AAApB,IADJ,CADJ,CADD,CAPH,CADJ,CADJ;AAmBH,CAnCD;;AAqCAV,WAAW,CAACW,eAAZ,GAA8B,YAAY;AACtC,MAAIC,IAAJ;;AACA,MAAI;AACA,UAAMX,QAAQ,GAAGT,WAAW,EAA5B;AACH,GAFD,CAEE,OAAOqB,GAAP,EAAY;AACZD,IAAAA,IAAI,GAAG,EAAP;AACD;;AAED,SAAO;AACHA,IAAAA;AADG,GAAP;AAGD,CAXH;;AAYA,eAAeZ,WAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectArticlesState,\n    selectFilteredArticlesState\n    } from './reducers/articlesReducer';\nimport { getArticles } from './actions/articlesAction';\nimport {\n    CSSTransition,\n    TransitionGroup,\n  } from 'react-transition-group';\nimport Article from './Article'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst ArticleList = () => {\n    const disPatch = useDispatch();\n    const articles = useSelector(selectArticlesState);\n    const filteredArticles = useSelector(selectFilteredArticlesState);\n    useEffect(()=> {\n        disPatch(getArticles());\n    }, [])\n\n    useEffect(()=> {\n        //console.log(articles)\n    }, [articles])\n\n    useEffect(()=> {\n        console.log(filteredArticles)\n    }, [filteredArticles])\n\n    return (\n        <div className=\"container\" id=\"menu-container\">\n            <div className=\"row\">\n            {filteredArticles.length !== 0 ? filteredArticles.map(filteredArticle=>(\n                    <TransitionGroup>\n                        <CSSTransition key={filteredArticle.id} timeout={800} classNames=\"item\">\n                            <Article  article = {filteredArticle}/>\n                        </CSSTransition>\n                    </TransitionGroup>)\n            ): articles.map(article=>(\n                <TransitionGroup>\n                    <CSSTransition key={article.id} timeout={800} classNames=\"item\">\n                        <Article article = {article}/>\n                    </CSSTransition>\n                </TransitionGroup>))\n            }\n            </div>\n        </div>\n    )\n}\n\nArticleList.getInitialProps = async () => {\n    let news;\n    try {\n        const disPatch = useDispatch();    \n    } catch (err) {\n      news = [];\n    }\n  \n    return {\n        news\n    }\n  }\nexport default ArticleList;\n"]},"metadata":{},"sourceType":"module"}