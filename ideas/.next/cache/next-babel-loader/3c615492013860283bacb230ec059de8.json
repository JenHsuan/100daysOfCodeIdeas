{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\nimport ArticleModal from '../components/ArticleModal';\nimport '.././css/article.css';\nimport '.././css/card.css';\nimport { selectLoginState, selectBookmarksState, selectProviderState, selectUserIdState, selectEmailState, selectFinishedArticlessState } from './states/states';\nimport { setBookmarks, setFinishedArticles } from './actions/articlesAction';\nimport Router, { useRouter } from 'next/router';\nimport axios from 'axios';\n\nconst Article = ({\n  article\n}) => {\n  const router = useRouter();\n  const disPatch = useDispatch();\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: isBookmarked,\n    1: setBookmark\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setChecked\n  } = useState(false);\n  const isLogin = useSelector(selectLoginState);\n  const bookmarks = useSelector(selectBookmarksState);\n  const userId = useSelector(selectUserIdState);\n  const provider = useSelector(selectProviderState);\n  const email = useSelector(selectEmailState);\n  const finishedArticles = useSelector(selectFinishedArticlessState);\n  useEffect(() => {\n    if (bookmarks.find(bookmark => bookmark == article.id) !== undefined) {\n      console.log('bookmark');\n      setBookmark(true);\n    }\n  }, [bookmarks]);\n  useEffect(() => {\n    if (finishedArticles.find(finishedArticle => finishedArticle == article.id) !== undefined) {\n      console.log('finishedArticle');\n      setChecked(true);\n    }\n  }, [finishedArticles]);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const onCheckedClick = async () => {\n    let finishedArticlesString = localStorage.getItem(\"finishedArticles\");\n    let finishedArticlesList;\n    let localfinishedArticles;\n\n    if (isChecked) {\n      if (finishedArticlesString !== null) {\n        finishedArticlesList = finishedArticlesString.split(',');\n        finishedArticlesList = finishedArticlesList.filter(finishedArticle => Number(finishedArticle) !== article.id);\n      }\n    } else {\n      console.log(finishedArticlesString);\n\n      if (finishedArticlesString === '') {\n        console.log(999);\n        localfinishedArticles = `${article.id}`;\n        finishedArticlesList = [article.id];\n      } else {\n        finishedArticlesList = finishedArticlesString.split(',');\n        finishedArticlesList.indexOf(article.id) === -1 ? finishedArticlesList.push(article.id) : console.log(\"This item already exists\");\n      }\n    }\n\n    let newfinishedArticlesString = finishedArticlesList.join(); //set bookmarks to local state\n\n    setChecked(true); //set bookmarks to localStorage\n\n    localStorage.setItem(\"finishedArticles\", newfinishedArticlesString); //set bookmarks to global state\n\n    disPatch(setFinishedArticles(finishedArticlesList)); //update server\n\n    if (provider === 'normal') {\n      try {\n        const res = await axios.put(`api/profile/?finishedArticles=${newfinishedArticlesString}&reader_id=${userId}`);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        const res = await axios.put(`api/profilesocial/?finishedArticles=${newfinishedArticlesString}&email=${email}&provider=${provider}`);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const onBookmarkClick = async () => {\n    let bookmarksString = localStorage.getItem(\"bookmarks\");\n    let localBookmarks;\n    let bookmarksList;\n\n    if (isBookmarked) {\n      if (bookmarksString !== null) {\n        bookmarksList = bookmarksString.split(',');\n        bookmarksList = bookmarksList.filter(bookmark => bookmark !== article.id);\n      }\n    } else {\n      console.log(bookmarksString);\n\n      if (bookmarksString === '') {\n        console.log(999);\n        localBookmarks = `${article.id}`;\n        bookmarksList = [article.id];\n      } else {\n        bookmarksList = bookmarksString.split(',');\n        bookmarksList.indexOf(article.id) === -1 ? bookmarksList.push(article.id) : console.log(\"This item already exists\");\n      }\n    }\n\n    let newbookmarksString = bookmarksList.join(); //set bookmarks to local state\n\n    setBookmark(true); //set bookmarks to localStorage\n\n    localStorage.setItem(\"bookmarks\", newbookmarksString); //set bookmarks to global state\n\n    disPatch(setBookmarks(bookmarksList)); //update server\n\n    if (provider === 'normal') {\n      try {\n        const res = await axios.put(`api/profile/?bookmarks=${newbookmarksString}&reader_id=${userId}`);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        const res = await axios.put(`api/profilesocial/?bookmarks=${newbookmarksString}&email=${email}&provider=${provider}`);\n      } catch (error) {\n        console.log(error);\n      }\n    } //redirect\n\n\n    if (router.pathname !== 'bookmarks') {\n      Router.push(`/bookmarks`);\n    }\n  };\n\n  useEffect(() => {}, []);\n  return __jsx(\"div\", {\n    className: \"articles-row\"\n  }, __jsx(Card, {\n    className: \"article-card\",\n    border: \"light\"\n  }, isLogin && router.pathname !== '/bookmarks' && __jsx(\"div\", {\n    className: \"article-bookmark\"\n  }, __jsx(\"span\", {\n    className: \"btn-o\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => {\n      onBookmarkClick();\n      return false;\n    }\n  }, isBookmarked ? __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-yellow.png\",\n    alt: \"Add this article to the bookmark\",\n    title: \"Add this article to the bookmark\"\n  }) : __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-white.png\",\n    alt: \"Add this article to the bookmark\",\n    title: \"Add this article to the bookmark\"\n  })))), router.pathname === '/bookmarks' && __jsx(\"div\", {\n    className: \"article-checked\"\n  }, __jsx(\"span\", {\n    className: \"btn-o\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => {\n      onCheckedClick();\n      return false;\n    }\n  }, isChecked ? __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/check.png\",\n    alt: \"Marked as unfinished\",\n    title: \"Marked as unfinished\"\n  }) : __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/uncheck.png\",\n    alt: \"Marked as finished\",\n    title: \"Marked as finished\"\n  })))), __jsx(Card.Body, {\n    className: \"article-card-body\"\n  }, __jsx(\"img\", {\n    className: \"article-card-img\",\n    src: `${article.image}`,\n    alt: article.title,\n    title: article.title\n  }), __jsx(\"div\", {\n    className: \"title\"\n  }, article.title), __jsx(\"div\", {\n    className: \"date\"\n  }, article.name), __jsx(\"div\", {\n    className: \"date\"\n  }, __jsx(\"span\", {\n    className: \"date\"\n  }, article.time), __jsx(\"span\", null, \" . \"), __jsx(\"span\", {\n    className: \"readtime\"\n  }, article.readtime)), __jsx(\"button\", {\n    className: \"article-btn\",\n    onClick: handleShow\n  }, \"Details\"))), __jsx(ArticleModal, {\n    show: show,\n    handleClose: handleClose,\n    article: article\n  }));\n};\n\nArticle.propTypes = {\n  article: PropTypes.object.isRequired\n};\nexport default Article;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/Article.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","Card","ArticleModal","selectLoginState","selectBookmarksState","selectProviderState","selectUserIdState","selectEmailState","selectFinishedArticlessState","setBookmarks","setFinishedArticles","Router","useRouter","axios","Article","article","router","disPatch","show","setShow","isBookmarked","setBookmark","isChecked","setChecked","isLogin","bookmarks","userId","provider","email","finishedArticles","find","bookmark","id","undefined","console","log","finishedArticle","handleClose","handleShow","onCheckedClick","finishedArticlesString","localStorage","getItem","finishedArticlesList","localfinishedArticles","split","filter","Number","indexOf","push","newfinishedArticlesString","join","setItem","res","put","error","onBookmarkClick","bookmarksString","localBookmarks","bookmarksList","newbookmarksString","pathname","image","title","name","time","readtime","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { Card} from 'react-bootstrap';\nimport ArticleModal from '../components/ArticleModal';\nimport '.././css/article.css'\nimport '.././css/card.css'\nimport {\n    selectLoginState,\n    selectBookmarksState,\n    selectProviderState,\n    selectUserIdState,\n    selectEmailState,\n    selectFinishedArticlessState\n} from './states/states';\n\nimport { \n    setBookmarks,\n    removeBookmark,\n    setFinishedArticles,\n    removeFinishedArticle\n} from './actions/articlesAction';\nimport Router, { useRouter } from 'next/router'\nimport axios from 'axios';\n\nconst Article = ({article}) => {\n    const router = useRouter();\n    const disPatch = useDispatch();\n    const [show, setShow] = useState(false);\n    const [isBookmarked, setBookmark] = useState(false);\n    const [isChecked, setChecked] = useState(false);\n    const isLogin = useSelector(selectLoginState);\n    const bookmarks = useSelector(selectBookmarksState);\n    const userId = useSelector(selectUserIdState);\n    const provider = useSelector(selectProviderState);\n    const email = useSelector(selectEmailState);\n    const finishedArticles = useSelector(selectFinishedArticlessState);\n\n    useEffect(()=> {\n        if (bookmarks.find(bookmark => bookmark == article.id) !== undefined ) {\n            console.log('bookmark')\n            setBookmark(true);\n        }\n    }, [bookmarks])\n\n    useEffect(()=> {\n        if (finishedArticles.find(finishedArticle => finishedArticle == article.id) !== undefined ) {\n            console.log('finishedArticle')\n            setChecked(true);\n        }\n    }, [finishedArticles])\n\n    const handleClose = () => {\n        setShow(false);\n    }\n\n    const handleShow = () => {\n        setShow(true);\n    }\n\n    const onCheckedClick = async() => {\n        let finishedArticlesString = localStorage.getItem(\"finishedArticles\");\n        let finishedArticlesList;\n        let localfinishedArticles;\n        if (isChecked) {\n            if (finishedArticlesString !== null) {\n                finishedArticlesList = finishedArticlesString.split(',');\n                finishedArticlesList = finishedArticlesList.filter(finishedArticle => Number(finishedArticle) !== article.id);\n            }\n        } else {\n            console.log(finishedArticlesString)\n            if (finishedArticlesString === '') {\n                console.log(999)\n                localfinishedArticles = `${article.id}`;\n                finishedArticlesList = [article.id];\n            } else {\n                finishedArticlesList = finishedArticlesString.split(',');\n                finishedArticlesList.indexOf(article.id) === -1 ? finishedArticlesList.push(article.id) : console.log(\"This item already exists\");\n            }\n        }\n\n        let newfinishedArticlesString = finishedArticlesList.join();\n        //set bookmarks to local state\n        setChecked(true);\n        //set bookmarks to localStorage\n        localStorage.setItem(\"finishedArticles\", newfinishedArticlesString);\n        //set bookmarks to global state\n        disPatch(setFinishedArticles(finishedArticlesList));\n        //update server\n        if (provider === 'normal') {\n            try {\n                const res = await axios.put(`api/profile/?finishedArticles=${newfinishedArticlesString}&reader_id=${userId}`);\n            } catch(error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                const res = await axios.put(`api/profilesocial/?finishedArticles=${newfinishedArticlesString}&email=${email}&provider=${provider}`);\n            } catch(error) {\n                console.log(error)\n            }\n        }\n    }\n\n    const onBookmarkClick = async () => {\n        let bookmarksString = localStorage.getItem(\"bookmarks\");\n        let localBookmarks;\n        let bookmarksList;\n        if (isBookmarked) {\n            if (bookmarksString !== null) {\n                bookmarksList = bookmarksString.split(',');\n                bookmarksList = bookmarksList.filter(bookmark => bookmark !== article.id);\n            }\n        } else {\n            console.log(bookmarksString)\n            if (bookmarksString === '') {\n                console.log(999)\n                localBookmarks = `${article.id}`;\n                bookmarksList = [article.id];\n            } else {\n                bookmarksList = bookmarksString.split(',');\n                bookmarksList.indexOf(article.id) === -1 ? bookmarksList.push(article.id) : console.log(\"This item already exists\");\n            }\n        }\n\n        let newbookmarksString = bookmarksList.join();\n        //set bookmarks to local state\n        setBookmark(true);\n        //set bookmarks to localStorage\n        localStorage.setItem(\"bookmarks\", newbookmarksString);\n        //set bookmarks to global state\n        disPatch(setBookmarks(bookmarksList));\n        //update server\n        if (provider === 'normal') {\n            try {\n                const res = await axios.put(`api/profile/?bookmarks=${newbookmarksString}&reader_id=${userId}`);\n            } catch(error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                const res = await axios.put(`api/profilesocial/?bookmarks=${newbookmarksString}&email=${email}&provider=${provider}`);\n            } catch(error) {\n                console.log(error)\n            }\n        }\n        //redirect\n        if (router.pathname !== 'bookmarks') {\n            Router.push(`/bookmarks`)\n        }\n    }\n\n    useEffect(()=> {\n    }, [])\n\n    return (\n        <div className=\"articles-row\">\n            <Card className=\"article-card\" border=\"light\">\n                {isLogin && router.pathname !== '/bookmarks' && (\n                <div className=\"article-bookmark\">\n                    <span className=\"btn-o\">\n                        <a href='#' onClick={()=>{onBookmarkClick(); return false;}}>\n                            {isBookmarked \n                            ? <img src=\"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-yellow.png\" alt=\"Add this article to the bookmark\" title=\"Add this article to the bookmark\"/>\n                            : <img src=\"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-white.png\" alt=\"Add this article to the bookmark\" title=\"Add this article to the bookmark\"/>\n                            }\n                        </a>\n                    </span>\n                </div>\n                )}\n                {router.pathname === '/bookmarks' && (\n                <div className=\"article-checked\">\n                    <span className=\"btn-o\">\n                        <a href='#' onClick={()=>{onCheckedClick(); return false;}}>\n                            {isChecked\n                            ? <img src=\"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/check.png\" alt=\"Marked as unfinished\" title=\"Marked as unfinished\"/>\n                            : <img src=\"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/uncheck.png\" alt=\"Marked as finished\" title=\"Marked as finished\"/>\n                        }\n                        </a>\n                    </span>\n                </div>\n                )}\n                <Card.Body className=\"article-card-body\">\n                    <img className=\"article-card-img\" src={`${article.image}`} alt={article.title} title={article.title}/>\n                    <div className=\"title\">{article.title}</div>\n                    <div className=\"date\">{article.name}</div>\n                    <div className=\"date\">\n                        <span className=\"date\">{article.time}</span>\n                        <span> . </span>\n                        <span className=\"readtime\">{article.readtime}</span>\n                    </div>\n                    <button className=\"article-btn\" onClick = {handleShow}>Details</button>\n                </Card.Body>\n            </Card>\n            <ArticleModal show = {show} handleClose = {handleClose} article = {article} />\n        </div>\n    \n    )\n}\n\nArticle.propTypes = {\n    article: PropTypes.object.isRequired\n}\n\nexport default Article\n"]},"metadata":{},"sourceType":"module"}