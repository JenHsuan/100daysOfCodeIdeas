{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card } from 'react-bootstrap';\nimport ArticleModal from '../components/ArticleModal';\nimport '.././css/article.css';\nimport '.././css/card.css';\nimport { selectLoginState, selectBookmarksState, selectProviderState, selectUserIdState, selectEmailState, selectFinishedArticlessState } from './states/states';\nimport { setBookmarks, setFinishedArticles } from './actions/articlesAction';\nimport Router, { useRouter } from 'next/router';\nimport axios from 'axios';\n\nvar Article = function Article(_ref) {\n  var article = _ref.article;\n  var router = useRouter();\n  var disPatch = useDispatch();\n\n  var _useState = useState(false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var _useState2 = useState(false),\n      isBookmarked = _useState2[0],\n      setBookmark = _useState2[1];\n\n  var _useState3 = useState(false),\n      isChecked = _useState3[0],\n      setChecked = _useState3[1];\n\n  var isLogin = useSelector(selectLoginState);\n  var bookmarks = useSelector(selectBookmarksState);\n  var userId = useSelector(selectUserIdState);\n  var provider = useSelector(selectProviderState);\n  var email = useSelector(selectEmailState);\n  var finishedArticles = useSelector(selectFinishedArticlessState);\n  useEffect(function () {\n    if (bookmarks.find(function (bookmark) {\n      return bookmark == article.id;\n    }) !== undefined) {\n      console.log('bookmark');\n      setBookmark(true);\n    }\n  }, [bookmarks]);\n  useEffect(function () {\n    if (finishedArticles.find(function (finishedArticle) {\n      return finishedArticle == article.id;\n    }) !== undefined) {\n      console.log('finishedArticle');\n      setChecked(true);\n    }\n  }, [finishedArticles]);\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    setShow(true);\n  };\n\n  var onCheckedClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var finishedArticlesString, finishedArticlesList, localfinishedArticles, newfinishedArticlesString, res, _res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              finishedArticlesString = localStorage.getItem(\"finishedArticles\");\n\n              if (isChecked) {\n                if (finishedArticlesString !== null) {\n                  finishedArticlesList = finishedArticlesString.split(',');\n                  finishedArticlesList = finishedArticlesList.filter(function (finishedArticle) {\n                    return Number(finishedArticle) !== article.id;\n                  });\n                } //set bookmarks to local state\n\n\n                setChecked(false);\n              } else {\n                console.log(finishedArticlesString);\n\n                if (finishedArticlesString === '') {\n                  console.log(999);\n                  localfinishedArticles = \"\".concat(article.id);\n                  finishedArticlesList = [article.id];\n                } else {\n                  finishedArticlesList = finishedArticlesString.split(',');\n                  finishedArticlesList.indexOf(article.id) === -1 ? finishedArticlesList.push(article.id) : console.log(\"This item already exists\");\n                } //set bookmarks to local state\n\n\n                setChecked(true);\n              }\n\n              newfinishedArticlesString = finishedArticlesList.join(); //set bookmarks to localStorage\n\n              localStorage.setItem(\"finishedArticles\", newfinishedArticlesString); //set bookmarks to global state\n\n              disPatch(setFinishedArticles(finishedArticlesList)); //update server\n\n              if (!(provider === 'normal')) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.prev = 6;\n              _context.next = 9;\n              return axios.put(\"api/profile/?finishedArticles=\".concat(newfinishedArticlesString, \"&reader_id=\").concat(userId));\n\n            case 9:\n              res = _context.sent;\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](6);\n              console.log(_context.t0);\n\n            case 15:\n              _context.next = 26;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.next = 20;\n              return axios.put(\"api/profilesocial/?finishedArticles=\".concat(newfinishedArticlesString, \"&email=\").concat(email, \"&provider=\").concat(provider));\n\n            case 20:\n              _res = _context.sent;\n              _context.next = 26;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t1 = _context[\"catch\"](17);\n              console.log(_context.t1);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 12], [17, 23]]);\n    }));\n\n    return function onCheckedClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var setBookmarksState = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(bookmarksList) {\n      var newbookmarksString, res, _res2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newbookmarksString = bookmarksList.join(); //set bookmarks to localStorage\n\n              localStorage.setItem(\"bookmarks\", newbookmarksString); //set bookmarks to global state\n\n              disPatch(setBookmarks(bookmarksList)); //update server\n\n              if (!(provider === 'normal')) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.prev = 4;\n              _context2.next = 7;\n              return axios.put(\"api/profile/?bookmarks=\".concat(newbookmarksString, \"&reader_id=\").concat(userId));\n\n            case 7:\n              res = _context2.sent;\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.log(_context2.t0);\n\n            case 13:\n              _context2.next = 24;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.next = 18;\n              return axios.put(\"api/profilesocial/?bookmarks=\".concat(newbookmarksString, \"&email=\").concat(email, \"&provider=\").concat(provider));\n\n            case 18:\n              _res2 = _context2.sent;\n              _context2.next = 24;\n              break;\n\n            case 21:\n              _context2.prev = 21;\n              _context2.t1 = _context2[\"catch\"](15);\n              console.log(_context2.t1);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 10], [15, 21]]);\n    }));\n\n    return function setBookmarksState(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onBookmarkClick = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var bookmarksString, localBookmarks, bookmarksList;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              bookmarksString = localStorage.getItem(\"bookmarks\");\n\n              if (!isBookmarked) {\n                _context3.next = 8;\n                break;\n              }\n\n              if (bookmarksString !== null) {\n                bookmarksList = bookmarksString.split(',');\n                bookmarksList = bookmarksList.filter(function (bookmark) {\n                  return Number(bookmark) !== article.id;\n                });\n              } //set bookmarks to local state\n\n\n              setBookmark(false);\n              _context3.next = 6;\n              return setBookmarksState(bookmarksList);\n\n            case 6:\n              _context3.next = 14;\n              break;\n\n            case 8:\n              console.log(bookmarksString);\n\n              if (bookmarksString === '') {\n                console.log(999);\n                localBookmarks = \"\".concat(article.id);\n                bookmarksList = [article.id];\n              } else {\n                bookmarksList = bookmarksString.split(',');\n                bookmarksList.indexOf(article.id) === -1 ? bookmarksList.push(article.id) : console.log(\"This item already exists\");\n              } //set bookmarks to local state\n\n\n              setBookmark(true);\n              _context3.next = 13;\n              return setBookmarksState(bookmarksList);\n\n            case 13:\n              //redirect\n              if (router.pathname !== 'bookmarks') {\n                Router.push(\"/bookmarks\");\n              }\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onBookmarkClick() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {}, []);\n  return __jsx(\"div\", {\n    className: \"articles-row\"\n  }, __jsx(Card, {\n    className: \"article-card\",\n    border: \"light\"\n  }, isLogin && router.pathname !== '/bookmarks' && __jsx(\"div\", {\n    className: \"article-bookmark\"\n  }, __jsx(\"span\", {\n    className: \"btn-o\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: function onClick() {\n      onBookmarkClick();\n      return false;\n    }\n  }, isBookmarked ? __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-yellow.png\",\n    alt: \"Add this article to the bookmark\",\n    title: \"Add this article to the bookmark\"\n  }) : __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/bookmark-white.png\",\n    alt: \"Add this article to the bookmark\",\n    title: \"Add this article to the bookmark\"\n  })))), router.pathname === '/bookmarks' && __jsx(\"div\", {\n    className: \"article-checked\"\n  }, __jsx(\"span\", {\n    className: \"btn-o\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: function onClick() {\n      onCheckedClick();\n      return false;\n    }\n  }, isChecked ? __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/check.png\",\n    alt: \"Marked as unfinished\",\n    title: \"Marked as unfinished\"\n  }) : __jsx(\"img\", {\n    src: \"https://raw.githubusercontent.com/JenHsuan/ALayman/master/views/images/uncheck.png\",\n    alt: \"Marked as finished\",\n    title: \"Marked as finished\"\n  })))), __jsx(Card.Body, {\n    className: \"article-card-body\"\n  }, __jsx(\"img\", {\n    className: \"article-card-img\",\n    src: \"\".concat(article.image),\n    alt: article.title,\n    title: article.title\n  }), __jsx(\"div\", {\n    className: \"title\"\n  }, article.title), __jsx(\"div\", {\n    className: \"date\"\n  }, article.name), __jsx(\"div\", {\n    className: \"date\"\n  }, __jsx(\"span\", {\n    className: \"date\"\n  }, article.time), __jsx(\"span\", null, \" . \"), __jsx(\"span\", {\n    className: \"readtime\"\n  }, article.readtime)), __jsx(\"button\", {\n    className: \"article-btn\",\n    onClick: handleShow\n  }, \"Details\"))), __jsx(ArticleModal, {\n    show: show,\n    handleClose: handleClose,\n    article: article\n  }));\n};\n\nexport default Article;","map":null,"metadata":{},"sourceType":"module"}