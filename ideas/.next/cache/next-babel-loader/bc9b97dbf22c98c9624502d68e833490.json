{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, Fragment, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport { selectArticlesState, selectPartialArticlesState, selectFilteredArticlesState, selectIsLoadingState } from './reducers/articlesReducer';\nimport { getArticles, setPartialArticles } from './actions/articlesAction';\nimport { Spinner } from 'react-bootstrap';\nimport Article from './Article';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer';\n\nvar ArticleList = function ArticleList() {\n  var _useState = useState(10),\n      perPage = _useState[0],\n      setPerPage = _useState[1];\n\n  var _useState2 = useState(0),\n      pageCount = _useState2[0],\n      setPageCount = _useState2[1];\n\n  var _useState3 = useState(0),\n      offset = _useState3[0],\n      setOffset = _useState3[1];\n\n  var disPatch = useDispatch();\n  var articles = useSelector(selectArticlesState);\n  var filteredArticles = useSelector(selectFilteredArticlesState);\n  var partialArticles = useSelector(selectPartialArticlesState);\n  var isLoading = useSelector(selectIsLoadingState);\n  useEffect(function () {\n    disPatch(getArticles());\n  }, []);\n  useEffect(function () {\n    //console.log(articles)\n    var partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perPage).map(function (article) {\n      __jsx(Article, {\n        article: article\n      });\n    }) : filteredArticles.slice(offset, offset + perPage).map(function (article) {\n      __jsx(Article, {\n        article: article\n      });\n    });\n    console.log(articles.slice(offset, offset + perPage).map(function (article) {\n      return __jsx(Article, {\n        article: article\n      });\n    })); //disPatch(setPartialArticles(partialData));\n  }, [articles]);\n  useEffect(function () {\n    console.log(filteredArticles);\n  }, [filteredArticles]);\n\n  var setPartialData = function setPartialData() {\n    var partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perPage) : filteredArticles.slice(offset, offset + perPage);\n    setPageCount(filteredArticles.length === 0 ? Math.ceil(articles.length / perPage) : Math.ceil(filteredArticles.length / perPage));\n    disPatch(setPartialArticles(partialData));\n  };\n\n  var handlePageSlected = function handlePageSlected(e) {\n    setOffset(e.selected * perPage);\n    setPartialData();\n  };\n\n  return __jsx(\"div\", {\n    className: \"articles-hide-siderbar\"\n  }, __jsx(\"div\", {\n    className: \"articles-row row\"\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"articles-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\"))) : __jsx(Fragment, null, partialArticles)), isLoading === false && __jsx(ReactPaginate, {\n    previousLabel: \"prev\",\n    nextLabel: \"next\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: handlePageSlected,\n    containerClassName: \"pagination\",\n    subContainerClassName: \"pages pagination\",\n    activeClassName: \"active\"\n  }), isLoading === false && __jsx(Footer, null));\n};\n\nArticleList.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var news, disPatch;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            disPatch = useDispatch();\n          } catch (err) {\n            news = [];\n          }\n\n          return _context.abrupt(\"return\", {\n            news: news\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default ArticleList;","map":null,"metadata":{},"sourceType":"module"}