{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredArticlesState } from './states/states';\nimport { getFilteredArticles, clearFilter } from './actions/articlesAction';\n\nvar ArticleSearchBar = function ArticleSearchBar() {\n  _s();\n\n  var text = createRef();\n  var disPatch = useDispatch();\n  var filteredArticles = useSelector(selectFilteredArticlesState);\n  /*\n  useEffect(() => {\n      if (filteredArticles.length === 0) {\n          text.current.value = '';\n      }\n  });\n  */\n\n  var onChange = function onChange(e) {\n    console.log(e.target.value);\n\n    if (text.current.value !== '') {\n      disPatch(getFilteredArticles(e.target.value));\n    } else {\n      disPatch(clearFilter());\n    }\n  };\n\n  return __jsx(\"input\", {\n    className: \"article-searchbar\",\n    ref: text,\n    type: \"text\",\n    placeholder: \"ex, ReactJS, next.js, Golang...\",\n    onChange: onChange\n  });\n};\n\n_s(ArticleSearchBar, \"kaEzoiqmve2qN9msj4qKpft5XDo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ArticleSearchBar;\nexport default ArticleSearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleSearchBar\");","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/ArticleSearchBar.tsx"],"names":["React","createRef","useDispatch","useSelector","selectFilteredArticlesState","getFilteredArticles","clearFilter","ArticleSearchBar","text","disPatch","filteredArticles","onChange","e","console","log","target","value","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,2BAAT,QAA2C,iBAA3C;AACA,SACIC,mBADJ,EAEIC,WAFJ,QAEuB,0BAFvB;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC3B,MAAMC,IAAI,GAAGP,SAAS,EAAtB;AACA,MAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAMQ,gBAAgB,GAAGP,WAAW,CAACC,2BAAD,CAApC;AAEA;;;;;;;;AAQA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC,EAAI;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;;AACA,QAAIR,IAAI,CAACS,OAAL,CAAaD,KAAb,KAAuB,EAA3B,EAA+B;AAC3BP,MAAAA,QAAQ,CAACJ,mBAAmB,CAACO,CAAC,CAACG,MAAF,CAASC,KAAV,CAApB,CAAR;AACH,KAFD,MAEO;AACHP,MAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACH;AACJ,GAPD;;AASA,SACI;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAqC,IAAA,GAAG,EAAEE,IAA1C;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,WAAW,EAAC,iCAAxE;AAA0G,IAAA,QAAQ,EAAEG;AAApH,IADJ;AAGH,CAzBD;;GAAMJ,gB;UAEeL,W,EACQC,W;;;KAHvBI,gB;AA2BN,eAAeA,gBAAf","sourcesContent":["import React, {useEffect, createRef} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredArticlesState} from './states/states';\nimport {\n    getFilteredArticles,\n    clearFilter } from './actions/articlesAction';\n\nconst ArticleSearchBar = () => {\n    const text = createRef<HTMLInputElement>()\n    const disPatch = useDispatch();\n    const filteredArticles = useSelector(selectFilteredArticlesState);\n    \n    /*\n    useEffect(() => {\n        if (filteredArticles.length === 0) {\n            text.current.value = '';\n        }\n    });\n    */\n\n    const onChange = e => {\n        console.log(e.target.value)\n        if (text.current.value !== '') {\n            disPatch(getFilteredArticles(e.target.value));\n        } else {\n            disPatch(clearFilter());\n        }\n    }\n\n    return (    \n        <input className=\"article-searchbar\" ref={text} type=\"text\" placeholder=\"ex, ReactJS, next.js, Golang...\" onChange={onChange}/>\n    )\n}\n\nexport default ArticleSearchBar\n"]},"metadata":{},"sourceType":"module"}