{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'; //import { GoogleLogin } from 'react-google-login';\n\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css';\nimport axios from 'axios';\nimport { Form, Spinner } from 'react-bootstrap';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoginState, selectShowPlannerState, selectErrorMessageState, selectLoadingState } from './states/states';\nimport { setErrorMessage, setLoading } from './actions/articlesAction';\nimport FormWrapper from '../components/FormWrapper';\nimport PropTypes from 'prop-types';\n\nconst SignUpForm = ({\n  responseFacebook,\n  ResponseGithubOnSuccess,\n  ResponseGithubOnFailure,\n  SetLogin\n}) => {\n  const disPatch = useDispatch();\n  const isLogin = useSelector(selectLoginState);\n  const showPlanner = useSelector(selectShowPlannerState);\n  const errorMessage = useSelector(selectErrorMessageState);\n  const isLoading = useSelector(selectLoadingState);\n  useEffect(() => {\n    if (isLogin) {\n      Router.push(`/`);\n    }\n  }, [isLogin]);\n  const {\n    0: value,\n    1: setValue\n  } = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const {\n    username,\n    email,\n    password\n  } = value;\n\n  const handleChange = name => e => {\n    setValue(_objectSpread(_objectSpread({}, value), {}, {\n      [name]: e.target.value.trim()\n    }));\n  };\n\n  const handleSubmit = async e => {\n    // Check if the form is invalid\n    // null or empty \n    // email format\n    e.preventDefault();\n\n    try {\n      disPatch(setLoading(true));\n      const createUserRes = await axios.post('/api/users/', {\n        username: username,\n        password: password\n      });\n\n      if (createUserRes[\"data\"][\"error\"] !== undefined) {\n        var err = createUserRes[\"data\"][\"error\"];\n        disPatch(setErrorMessage(`${Object.keys(err)[0]} : ${Object.values(err)[0]}`));\n      } else {\n        const id = createUserRes[\"data\"][\"id\"];\n        const token = createUserRes[\"data\"][\"token\"];\n        const headers = {\n          'Authorization': `JWT ${token}`\n        };\n        const updateProfileRes = await axios.post('/api/profile/', {\n          email: email,\n          reader: id\n        });\n        var err = updateProfileRes[\"data\"][\"error\"];\n\n        if (err !== undefined) {\n          disPatch(setErrorMessage(`${Object.keys(err)[0]} : ${Object.values(err)[0]}`));\n        }\n\n        if (updateProfileRes !== undefined && updateProfileRes[\"data\"][\"email\"] === email) {\n          const loginRes = await axios.post('/api/token-auth/', {\n            username: username,\n            password: password\n          });\n          SetLogin(token, email, username, \"normal\");\n        }\n      }\n\n      disPatch(setLoading(false));\n    } catch (error) {\n      //res.data = error;\n      disPatch(setLoading(false));\n      disPatch(setErrorMessage(error.message));\n      console.log(error);\n    }\n  };\n\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: `${showPlanner === true ? 'signinform-move-left signinform' : 'signinform'}`\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"signinform-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\")))) : __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Create Your Free Account\"), __jsx(FacebookLogin, {\n    cssClass: \"fb-btn\",\n    appId: \"240314257268798\",\n    autoLoad: false,\n    fields: \"name,email,picture\",\n    callback: responseFacebook,\n    render: renderProps => __jsx(\"button\", {\n      onClick: renderProps.onClick,\n      className: \"fb-btn\"\n    }, \"Facebook\")\n  }), __jsx(GitHubLogin, {\n    className: \"github-btn\",\n    clientId: \"51b1a8ee5b7cad1e6a85\",\n    redirectUri: \"http://localhost:3000/signin\",\n    onSuccess: ResponseGithubOnSuccess,\n    onFailure: ResponseGithubOnFailure,\n    buttonText: \"Github\"\n  }), __jsx(\"div\", {\n    className: \"split-line\"\n  }, \"Or signup by email\"), __jsx(\"div\", {\n    className: \"signin-form\"\n  }, __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\"\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Username\",\n    className: \"username\",\n    onChange: handleChange('username')\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\"\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Email\",\n    className: \"email\",\n    onChange: handleChange('email')\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\"\n  }, __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"password\",\n    onChange: handleChange('password')\n  })), __jsx(\"button\", {\n    className: \"btn-submit\"\n  }, \"Get Started\"))), __jsx(\"div\", {\n    className: \"messages\"\n  }, errorMessage))));\n};\n\nSignUpForm.propTypes = {\n  responseFacebook: PropTypes.func.isRequired,\n  ResponseGithubOnSuccess: PropTypes.func.isRequired,\n  ResponseGithubOnFailure: PropTypes.func.isRequired,\n  SetLogin: PropTypes.func.isRequired\n};\nexport default FormWrapper(SignUpForm);","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/SignUpForm.tsx"],"names":["React","Fragment","useEffect","useState","FacebookLogin","GitHubLogin","axios","Form","Spinner","Router","useDispatch","useSelector","selectLoginState","selectShowPlannerState","selectErrorMessageState","selectLoadingState","setErrorMessage","setLoading","FormWrapper","PropTypes","SignUpForm","responseFacebook","ResponseGithubOnSuccess","ResponseGithubOnFailure","SetLogin","disPatch","isLogin","showPlanner","errorMessage","isLoading","push","value","setValue","username","email","password","handleChange","name","e","target","trim","handleSubmit","preventDefault","createUserRes","post","undefined","err","Object","keys","values","id","token","headers","updateProfileRes","reader","loginRes","error","message","console","log","renderProps","onClick","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react'\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n//import { GoogleLogin } from 'react-google-login';\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css'\nimport axios from 'axios';\nimport {Form, Spinner} from 'react-bootstrap';\nimport Router from 'next/router'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectLoginState,\n    selectShowPlannerState,\n    selectErrorMessageState,\n    selectLoadingState\n} from './states/states';\n\nimport { \n    setErrorMessage,\n    setLoading\n} from './actions/articlesAction';\nimport FormWrapper from '../components/FormWrapper'\nimport PropTypes from 'prop-types'\n\nconst SignUpForm = ({responseFacebook,\n    ResponseGithubOnSuccess,\n    ResponseGithubOnFailure,\n    SetLogin}) => {\n    const disPatch = useDispatch();\n    const isLogin = useSelector(selectLoginState);\n    const showPlanner = useSelector(selectShowPlannerState);\n    const errorMessage = useSelector(selectErrorMessageState);\n    const isLoading = useSelector(selectLoadingState);\n\n    useEffect(()=> {\n        if (isLogin) {\n            Router.push(`/`)\n        }\n    }, [isLogin])\n\n    const [value, setValue] = useState({\n        username:'',\n        email:'',\n        password:''\n    })\n\n    const {username, email, password} = value;\n\n    const handleChange = name => e => {\n      setValue({...value, [name]: e.target.value.trim()})\n    }\n    \n    const handleSubmit = async e => {\n        // Check if the form is invalid\n        // null or empty \n        // email format\n        e.preventDefault();\n        try {\n            disPatch(setLoading(true));\n            const createUserRes = await axios.post('/api/users/', {\n                username: username,\n                password: password\n            });\n            if (createUserRes[\"data\"][\"error\"] !== undefined) {\n                var err = createUserRes[\"data\"][\"error\"]\n                disPatch(setErrorMessage(`${Object.keys(err)[0]} : ${Object.values(err)[0]}`))\n            } else  {\n                const id = createUserRes[\"data\"][\"id\"];\n                const token = createUserRes[\"data\"][\"token\"];\n                const headers = {\n                    'Authorization': `JWT ${token}`\n                }\n                const updateProfileRes = await axios.post('/api/profile/', {\n                    email: email,\n                    reader: id\n                });\n                \n                var err = updateProfileRes[\"data\"][\"error\"]\n                if (err !== undefined) {\n                    disPatch(setErrorMessage(`${Object.keys(err)[0]} : ${Object.values(err)[0]}`))\n                }\n                if (updateProfileRes !== undefined && updateProfileRes[\"data\"][\"email\"] === email) {\n                    const loginRes = await axios.post('/api/token-auth/', {\n                        username: username,\n                        password: password\n                    });\n                    SetLogin(token, email, username, \"normal\");\n                }\n            }\n            disPatch(setLoading(false));\n            \n        } catch (error) {\n            //res.data = error;\n            disPatch(setLoading(false));\n            disPatch(setErrorMessage(error.message))\n            console.log(error);\n        }\n    }\n\n    return (\n        <Fragment>\n        <div className={`${showPlanner === true ? 'signinform-move-left signinform' : 'signinform'}`} >\n            {isLoading === true ? (\n                <div className=\"signinform-grid-box\">\n                <div className=\"signinform-spinner\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n            </div>\n            ):(\n                <div className=\"signinform-grid-box\">\n                    <div className=\"title\">Create Your Free Account</div>\n                <FacebookLogin\n                    cssClass=\"fb-btn\"\n                    appId=\"240314257268798\"\n                    autoLoad={false}\n                    fields=\"name,email,picture\"\n                    callback={responseFacebook}\n                    render={renderProps => (\n                        <button onClick={renderProps.onClick} className=\"fb-btn\">Facebook</button>\n                      )}/>\n                <GitHubLogin \n                    className=\"github-btn\"\n                    clientId=\"51b1a8ee5b7cad1e6a85\"\n                    redirectUri=\"http://localhost:3000/signin\" \n                    onSuccess={ResponseGithubOnSuccess}\n                    onFailure={ResponseGithubOnFailure}\n                    buttonText=\"Github\"/>\n                    <div className=\"split-line\">\n                        Or signup by email\n                    </div>\n                    <div className=\"signin-form\">\n                        <Form onSubmit = {handleSubmit}>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Control type=\"text\" placeholder=\"Enter Username\" className=\"username\" onChange={handleChange('username')} />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"text\" placeholder=\"Enter Email\" className=\"email\" onChange={handleChange('email')}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"password\" placeholder=\"Password\" className=\"password\" onChange={handleChange('password')}/>\n                            </Form.Group>\n                    <button className=\"btn-submit\">\n                    Get Started\n                    </button>\n                        </Form>\n                    </div>\n            <div className=\"messages\">{errorMessage}</div>\n                </div>\n            )}\n            </div>\n        </Fragment>    \n    )\n}\n\nSignUpForm.propTypes = {\n    responseFacebook: PropTypes.func.isRequired,\n    ResponseGithubOnSuccess: PropTypes.func.isRequired,\n    ResponseGithubOnFailure: PropTypes.func.isRequired,\n    SetLogin: PropTypes.func.isRequired\n}\n\nexport default FormWrapper(SignUpForm)\n"]},"metadata":{},"sourceType":"module"}