{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'; //import { GoogleLogin } from 'react-google-login';\n\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css';\nimport axios from 'axios';\nimport { Form, Spinner } from 'react-bootstrap';\nimport { selectShowPlannerState, selectErrorMessageState, selectLoadingState, selectUserIdState, selectLoginState } from './states/states';\nimport FormWrapper from '../components/FormWrapper';\nimport PropTypes from 'prop-types';\nimport { setErrorMessage, setLoading, setUserId, setBookmarks } from './actions/articlesAction';\n\nvar SignInForm = function SignInForm(_ref) {\n  _s();\n\n  var responseFacebook = _ref.responseFacebook,\n      ResponseGithubOnSuccess = _ref.ResponseGithubOnSuccess,\n      ResponseGithubOnFailure = _ref.ResponseGithubOnFailure,\n      SetLogin = _ref.SetLogin;\n  var disPatch = useDispatch();\n  var showPlanner = useSelector(selectShowPlannerState);\n  var errorMessage = useSelector(selectErrorMessageState);\n  var isLoading = useSelector(selectLoadingState);\n  var userId = useSelector(selectUserIdState);\n  var login = useSelector(selectLoginState);\n\n  var _useState = useState({\n    username: '',\n    password: ''\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var username = value.username,\n      password = value.password;\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      setValue(_objectSpread(_objectSpread({}, value), {}, _defineProperty({}, name, e.target.value.trim())));\n    };\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, token, email, id;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(username);\n              console.log(password);\n              _context.prev = 3;\n              disPatch(setLoading(true));\n              _context.next = 7;\n              return axios.post('/api/token-auth/', {\n                username: username,\n                password: password\n              });\n\n            case 7:\n              res = _context.sent;\n              console.log(res);\n              console.log(res[\"data\"][\"user\"][\"profile\"]);\n              token = res[\"data\"][\"token\"];\n              email = res[\"data\"][\"user\"][\"profile\"][\"email\"];\n              id = res[\"data\"][\"user\"][\"id\"];\n              SetLogin(token, email, username, \"normal\");\n              disPatch(setUserId(id));\n              disPatch(setLoading(false));\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](3);\n              disPatch(setLoading(false));\n              disPatch(setErrorMessage(_context.t0.message));\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 18]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var fetchProfile = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.get(\"api/profile/?reader=\".concat(userId));\n\n              case 3:\n                res = _context2.sent;\n\n                if (res['error'] === undefined) {\n                  console.log(res);\n                  disPatch(setBookmarks(res['data']['bookmarks'].split(',')));\n                  console.log(123);\n                  localStorage.setItem(\"bookmarks\", res['data']['bookmarks']);\n                }\n\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function fetchProfile() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    if (login) {\n      fetchProfile();\n    }\n  }, [userId, login]);\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: \"\".concat(showPlanner === true ? 'signinform-move-left signinform' : 'signinform')\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"signinform-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\")))) : __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Welcome back!\"), __jsx(FacebookLogin, {\n    cssClass: \"fb-btn\",\n    appId: \"240314257268798\",\n    autoLoad: false,\n    fields: \"name,email,picture\",\n    callback: responseFacebook,\n    render: function render(renderProps) {\n      return __jsx(\"button\", {\n        onClick: renderProps.onClick,\n        className: \"fb-btn\"\n      }, \"Facebook\");\n    }\n  }), __jsx(GitHubLogin, {\n    className: \"github-btn\",\n    clientId: \"51b1a8ee5b7cad1e6a85\",\n    redirectUri: \"http://localhost:3000/signin\",\n    onSuccess: ResponseGithubOnSuccess,\n    onFailure: ResponseGithubOnFailure,\n    buttonText: \"Github\"\n  }), __jsx(\"div\", {\n    className: \"split-line\"\n  }, \"Or signin by username\"), __jsx(\"div\", {\n    className: \"signin-form\"\n  }, __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\"\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Username\",\n    className: \"username\",\n    onChange: handleChange('username')\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\"\n  }, __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"password\",\n    onChange: handleChange('password')\n  })), __jsx(\"button\", {\n    className: \"btn-submit\"\n  }, \"Sign in\"))), __jsx(\"div\", {\n    className: \"messages\"\n  }, errorMessage))));\n};\n\n_s(SignInForm, \"KbKgjzIiXmTk8zs4AYpeJPjo9yg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = SignInForm;\nSignInForm.propTypes = {\n  responseFacebook: PropTypes.func.isRequired,\n  ResponseGithubOnSuccess: PropTypes.func.isRequired,\n  ResponseGithubOnFailure: PropTypes.func.isRequired,\n  SetLogin: PropTypes.func.isRequired\n};\nexport default _c2 = FormWrapper(SignInForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignInForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/SignInForm.tsx"],"names":["React","Fragment","useState","useEffect","useDispatch","useSelector","FacebookLogin","GitHubLogin","axios","Form","Spinner","selectShowPlannerState","selectErrorMessageState","selectLoadingState","selectUserIdState","selectLoginState","FormWrapper","PropTypes","setErrorMessage","setLoading","setUserId","setBookmarks","SignInForm","responseFacebook","ResponseGithubOnSuccess","ResponseGithubOnFailure","SetLogin","disPatch","showPlanner","errorMessage","isLoading","userId","login","username","password","value","setValue","handleChange","name","e","target","trim","handleSubmit","preventDefault","console","log","post","res","token","email","id","message","fetchProfile","get","undefined","split","localStorage","setItem","renderProps","onClick","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n//import { GoogleLogin } from 'react-google-login';\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css'\nimport axios from 'axios';\nimport {Form, Spinner} from 'react-bootstrap';\nimport {\n    selectShowPlannerState,\n    selectErrorMessageState,\n    selectLoadingState,\n    selectUserIdState,\n    selectLoginState\n} from './states/states';\n\nimport FormWrapper from '../components/FormWrapper'\nimport PropTypes from 'prop-types'\nimport { \n    setErrorMessage,\n    setLoading,\n    setUserId,\n    setBookmarks,\n    setFinishedArticles\n} from './actions/articlesAction';\n\nconst SignInForm = ({responseFacebook,\n    ResponseGithubOnSuccess,\n    ResponseGithubOnFailure,\n    SetLogin}) => {\n    \n    const disPatch = useDispatch();\n    const showPlanner = useSelector(selectShowPlannerState);\n    const errorMessage = useSelector(selectErrorMessageState);\n    const isLoading = useSelector(selectLoadingState);\n    const userId = useSelector(selectUserIdState);\n    const login = useSelector(selectLoginState);\n    \n    const [value, setValue] = useState({\n        username:'',\n        password:''\n    })\n\n    const {username, password} = value;\n\n    const handleChange = name => e => {\n      setValue({...value, [name]: e.target.value.trim()})\n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        console.log(username)\n        console.log(password)\n        try {\n            disPatch(setLoading(true));\n            const res = await axios.post('/api/token-auth/', {\n                username: username,\n                password: password\n            });\n            console.log(res)\n            console.log(res[\"data\"][\"user\"][\"profile\"])\n            const token = res[\"data\"][\"token\"];\n            const email = res[\"data\"][\"user\"][\"profile\"][\"email\"];\n            const id = res[\"data\"][\"user\"][\"id\"];\n            SetLogin(token, email, username, \"normal\");\n            disPatch(setUserId(id))\n            disPatch(setLoading(false));\n        } catch (error) {\n            disPatch(setLoading(false));\n            disPatch(setErrorMessage(error.message))\n        }\n    }\n\n    useEffect(()=> {\n        const fetchProfile = async () => {\n            try {\n                const res = await axios.get(`api/profile/?reader=${userId}`);\n                if (res['error'] === undefined) {\n                    console.log(res)\n                    disPatch(setBookmarks(res['data']['bookmarks'].split(',')))\n                    console.log(123)\n                    localStorage.setItem(\"bookmarks\", res['data']['bookmarks']);\n                }\n            } catch(error) {\n                console.log(error)\n            }\n        };\n        \n        if (login) {\n            fetchProfile();\n        }\n    }, [userId, login])\n\n    return (\n        <Fragment>\n        <div className={`${showPlanner === true ? 'signinform-move-left signinform' : 'signinform'}`} >\n                {isLoading === true ? (\n                    <div className=\"signinform-grid-box\">\n                        <div className=\"signinform-spinner\">\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                        </div>\n                    </div>\n                ):(\n                    <div className=\"signinform-grid-box\">\n                        <div className=\"title\">Welcome back!</div>\n                        <FacebookLogin\n                            cssClass=\"fb-btn\"\n                            appId=\"240314257268798\"\n                            autoLoad={false}\n                            fields=\"name,email,picture\"\n                            callback={responseFacebook}\n                            render={renderProps => (\n                                <button onClick={renderProps.onClick} className=\"fb-btn\">Facebook</button>\n                            )}/>\n                        <GitHubLogin \n                            className=\"github-btn\"\n                            clientId=\"51b1a8ee5b7cad1e6a85\"\n                            redirectUri=\"http://localhost:3000/signin\" \n                            onSuccess={ResponseGithubOnSuccess}\n                            onFailure={ResponseGithubOnFailure}\n                            buttonText=\"Github\"/>\n                        <div className=\"split-line\">Or signin by username</div>\n                        <div className=\"signin-form\">\n                        <Form onSubmit = {handleSubmit}>\n                            <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control type=\"text\" placeholder=\"Enter Username\" className=\"username\" onChange={handleChange('username')} />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Control type=\"password\" placeholder=\"Password\" className=\"password\" onChange={handleChange('password')}/>\n                        </Form.Group>\n                        <button className=\"btn-submit\">\n                            Sign in\n                        </button>\n                    </Form>\n                </div>\n                <div className=\"messages\">{errorMessage}</div>\n            </div>\n                )}\n        </div>\n        </Fragment>    \n    )\n}\n\nSignInForm.propTypes = {\n    responseFacebook: PropTypes.func.isRequired,\n    ResponseGithubOnSuccess: PropTypes.func.isRequired,\n    ResponseGithubOnFailure: PropTypes.func.isRequired,\n    SetLogin: PropTypes.func.isRequired\n}\nexport default FormWrapper(SignInForm)\n"]},"metadata":{},"sourceType":"module"}