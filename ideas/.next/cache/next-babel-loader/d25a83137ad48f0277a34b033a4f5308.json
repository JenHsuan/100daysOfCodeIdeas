{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { initGA, logPageView } from \"./googleAnalytics\";\nexport var GaLayout = /*#__PURE__*/function (_Component) {\n  _inherits(GaLayout, _Component);\n\n  var _super = _createSuper(GaLayout);\n\n  function GaLayout() {\n    _classCallCheck(this, GaLayout);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GaLayout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!window.GA_INITIALIZED) {\n        initGA();\n        window.GA_INITIALIZED = true;\n      }\n\n      logPageView();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, this.props.children);\n    }\n  }]);\n\n  return GaLayout;\n}(Component);\nexport default GaLayout;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/GaLayout.tsx"],"names":["React","Component","initGA","logPageView","GaLayout","window","GA_INITIALIZED","props","children"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,mBAApC;AAGA,WAAaC,QAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCACyB;AACjB,UAAI,CAAEC,MAAD,CAAgBC,cAArB,EAAqC;AACnCJ,QAAAA,MAAM;AACLG,QAAAA,MAAD,CAAgBC,cAAhB,GAAiC,IAAjC;AACD;;AACDH,MAAAA,WAAW;AACZ;AAPP;AAAA;AAAA,6BAQa;AACL,aACI,mBACK,KAAKI,KAAL,CAAWC,QADhB,CADJ;AAKH;AAdL;;AAAA;AAAA,EAA8BP,SAA9B;AAiBA,eAAeG,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport { initGA, logPageView } from \"./googleAnalytics\"\n\n\nexport class GaLayout extends Component {\n    componentDidMount () {\n        if (!(window as any).GA_INITIALIZED) {\n          initGA();\n          (window as any).GA_INITIALIZED = true\n        }\n        logPageView()\n      }\n    render() {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default GaLayout;\n"]},"metadata":{},"sourceType":"module"}