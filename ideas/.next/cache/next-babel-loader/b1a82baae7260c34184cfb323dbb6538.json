{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useState } from 'react';\nimport '.././css/signinform.css';\nimport { useSelector } from 'react-redux';\nimport { selectShowPlannerState } from './states/states';\nimport PropTypes from 'prop-types';\nimport FormWrapper from '../components/FormWrapper';\n\nconst SignInForm = props => {\n  console.log(props);\n  const showPlanner = useSelector(selectShowPlannerState);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: value,\n    1: setValue\n  } = useState({\n    username: '',\n    password: '',\n    messages: ''\n  });\n  const {\n    username,\n    password,\n    messages\n  } = value;\n\n  const handleChange = name => e => {\n    setValue(_objectSpread(_objectSpread({}, value), {}, {\n      [name]: e.target.value.trim()\n    }));\n  };\n\n  return __jsx(Fragment, null);\n};\n\nSignInForm.propTypes = {\n  passAccessToken: PropTypes.func.isRequired,\n  responseFacebook: PropTypes.func.isRequired,\n  ResponseGithubOnSuccess: PropTypes.func.isRequired,\n  ResponseGithubOnFailure: PropTypes.func.isRequired,\n  SetLogin: PropTypes.func.isRequired\n};\nexport default FormWrapper(SignInForm);","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/SignInForm.tsx"],"names":["React","Fragment","useState","useSelector","selectShowPlannerState","PropTypes","FormWrapper","SignInForm","props","console","log","showPlanner","isLoading","setLoading","value","setValue","username","password","messages","handleChange","name","e","target","trim","propTypes","passAccessToken","func","isRequired","responseFacebook","ResponseGithubOnSuccess","ResponseGithubOnFailure","SetLogin"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AAIA,OAAO,yBAAP;AAIA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACIC,sBADJ,QAEO,iBAFP;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,WAAW,GAAGR,WAAW,CAACC,sBAAD,CAA/B;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC;AAC/Bc,IAAAA,QAAQ,EAAC,EADsB;AAE/BC,IAAAA,QAAQ,EAAC,EAFsB;AAG/BC,IAAAA,QAAQ,EAAC;AAHsB,GAAD,CAAlC;AAMA,QAAM;AAACF,IAAAA,QAAD;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAiCJ,KAAvC;;AAEA,QAAMK,YAAY,GAAGC,IAAI,IAAIC,CAAC,IAAI;AAChCN,IAAAA,QAAQ,iCAAKD,KAAL;AAAY,OAACM,IAAD,GAAQC,CAAC,CAACC,MAAF,CAASR,KAAT,CAAeS,IAAf;AAApB,OAAR;AACD,GAFD;;AAMA,SACI,MAAC,QAAD,OADJ;AAIH,CAvBD;;AA0BAhB,UAAU,CAACiB,SAAX,GAAuB;AACnBC,EAAAA,eAAe,EAAEpB,SAAS,CAACqB,IAAV,CAAeC,UADb;AAEnBC,EAAAA,gBAAgB,EAAEvB,SAAS,CAACqB,IAAV,CAAeC,UAFd;AAGXE,EAAAA,uBAAuB,EAAExB,SAAS,CAACqB,IAAV,CAAeC,UAH7B;AAIXG,EAAAA,uBAAuB,EAAEzB,SAAS,CAACqB,IAAV,CAAeC,UAJ7B;AAKXI,EAAAA,QAAQ,EAAE1B,SAAS,CAACqB,IAAV,CAAeC;AALd,CAAvB;AASA,eAAerB,WAAW,CAACC,UAAD,CAA1B","sourcesContent":["import React, {Fragment, useState} from 'react'\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n//import { GoogleLogin } from 'react-google-login';\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css'\nimport axios from 'axios';\nimport {Form, Spinner} from 'react-bootstrap';\n\nimport { useSelector } from 'react-redux';\nimport {\n    selectShowPlannerState\n} from './states/states';\n\nimport PropTypes from 'prop-types'\nimport FormWrapper from '../components/FormWrapper'\n\nconst SignInForm = (props) => {\n    console.log(props)\n    const showPlanner = useSelector(selectShowPlannerState);\n    const [isLoading, setLoading] = useState(false);\n    \n    const [value, setValue] = useState({\n        username:'',\n        password:'',\n        messages:''\n    })\n\n    const {username, password, messages} = value;\n\n    const handleChange = name => e => {\n      setValue({...value, [name]: e.target.value.trim()})\n    }\n\n    \n    \n    return (\n        <Fragment>\n        </Fragment>    \n    )\n}\n\n\nSignInForm.propTypes = {\n    passAccessToken: PropTypes.func.isRequired,\n    responseFacebook: PropTypes.func.isRequired,\n            ResponseGithubOnSuccess: PropTypes.func.isRequired,\n            ResponseGithubOnFailure: PropTypes.func.isRequired,\n            SetLogin: PropTypes.func.isRequired\n}\n\n\nexport default FormWrapper(SignInForm)\n"]},"metadata":{},"sourceType":"module"}