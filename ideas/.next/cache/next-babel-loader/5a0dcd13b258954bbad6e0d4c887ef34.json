{"ast":null,"code":"import axios from 'axios'; //Types\n\nimport { GET_ARTICLES, GET_FILTERED_ARTICLES, SET_PARTIAL_ARTICLES, CLEAR_FILTER, SET_CATEGORY, CLEAR_CATEGORY, RESET_LOADING, SET_PLANNER, SET_PAPE_COUNT, SET_OFFSET, SET_LOADING, SET_LOGIN, SET_LOGOUT, SET_ACCESS_TOKEN, SET_EMAIL, SET_USERNAME, SET_ERRORMESSAGE, REMOVE_BOOKMARK, SET_BOOKMARKS, SET_MARKASFINISHED, SET_UNMARKASFINISHED } from '../types'; //Actions\n\nexport const getArticles = () => async dispatch => {\n  var res = {\n    data: []\n  };\n\n  try {\n    res = await axios.get('/api/articles');\n    await dispatch({\n      type: GET_ARTICLES,\n      payload: res.data\n    });\n  } catch (error) {\n    //res.data = error;\n    console.log(error);\n  }\n};\nexport const getFilteredArticles = text => dispatch => {\n  dispatch({\n    type: GET_FILTERED_ARTICLES,\n    payload: text\n  });\n};\nexport const setPartialArticles = articles => dispatch => {\n  dispatch({\n    type: SET_PARTIAL_ARTICLES,\n    payload: articles\n  });\n};\nexport const setLoading = isLoading => dispatch => {\n  dispatch({\n    type: SET_LOADING,\n    payload: isLoading\n  });\n};\nexport const setOffset = offset => dispatch => {\n  dispatch({\n    type: SET_OFFSET,\n    payload: offset\n  });\n};\nexport const setPageCount = pageCount => dispatch => {\n  dispatch({\n    type: SET_PAPE_COUNT,\n    payload: pageCount\n  });\n};\nexport const clearFilter = () => dispatch => {\n  dispatch({\n    type: CLEAR_FILTER\n  });\n};\nexport const setLogin = () => dispatch => {\n  dispatch({\n    type: SET_LOGIN\n  });\n};\nexport const setLogout = () => dispatch => {\n  dispatch({\n    type: SET_LOGOUT\n  });\n};\nexport const setAccessToken = token => dispatch => {\n  dispatch({\n    type: SET_ACCESS_TOKEN,\n    payload: token\n  });\n};\nexport const setCategory = category => dispatch => {\n  dispatch({\n    type: SET_CATEGORY,\n    payload: category\n  });\n};\nexport const clearCategory = () => dispatch => {\n  dispatch({\n    type: CLEAR_CATEGORY\n  });\n};\nexport const resetLoading = () => dispatch => {\n  dispatch({\n    type: RESET_LOADING\n  });\n};\nexport const setPlanner = showPlanner => dispatch => {\n  dispatch({\n    type: SET_PLANNER,\n    payload: showPlanner\n  });\n};\nexport const setEmail = email => dispatch => {\n  dispatch({\n    type: SET_EMAIL,\n    payload: email\n  });\n};\nexport const setUsername = username => dispatch => {\n  dispatch({\n    type: SET_USERNAME,\n    payload: username\n  });\n};\nexport const setErrorMessage = message => dispatch => {\n  dispatch({\n    type: SET_ERRORMESSAGE,\n    payload: message\n  });\n};\nexport const removeBookmark = id => dispatch => {\n  dispatch({\n    type: REMOVE_BOOKMARK,\n    payload: id\n  });\n};\nexport const setBookmarks = bookmarks => dispatch => {\n  dispatch({\n    type: SET_BOOKMARKS,\n    payload: bookmarks\n  });\n};\nexport const setFinishedArticles = finishedArticles => dispatch => {\n  dispatch({\n    type: SET_MARKASFINISHED,\n    payload: finishedArticles\n  });\n};\nexport const removeFinishedArticle = finishedArticle => dispatch => {\n  dispatch({\n    type: SET_UNMARKASFINISHED,\n    payload: finishedArticle\n  });\n};","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/actions/articlesAction.ts"],"names":["axios","GET_ARTICLES","GET_FILTERED_ARTICLES","SET_PARTIAL_ARTICLES","CLEAR_FILTER","SET_CATEGORY","CLEAR_CATEGORY","RESET_LOADING","SET_PLANNER","SET_PAPE_COUNT","SET_OFFSET","SET_LOADING","SET_LOGIN","SET_LOGOUT","SET_ACCESS_TOKEN","SET_EMAIL","SET_USERNAME","SET_ERRORMESSAGE","REMOVE_BOOKMARK","SET_BOOKMARKS","SET_MARKASFINISHED","SET_UNMARKASFINISHED","getArticles","dispatch","res","data","get","type","payload","error","console","log","getFilteredArticles","text","setPartialArticles","articles","setLoading","isLoading","setOffset","offset","setPageCount","pageCount","clearFilter","setLogin","setLogout","setAccessToken","token","setCategory","category","clearCategory","resetLoading","setPlanner","showPlanner","setEmail","email","setUsername","username","setErrorMessage","message","removeBookmark","id","setBookmarks","bookmarks","setFinishedArticles","finishedArticles","removeFinishedArticle","finishedArticle"],"mappings":"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","sourcesContent":["import axios from 'axios';\n//Types\nimport { \n    GET_ARTICLES,\n    GET_FILTERED_ARTICLES,\n    SET_PARTIAL_ARTICLES,\n    CLEAR_FILTER,\n    SET_CATEGORY,\n    CLEAR_CATEGORY,\n    RESET_LOADING,\n    SET_PLANNER,\n    SET_PERPAGE,\n    SET_PAPE_COUNT,\n    SET_OFFSET,\n    SET_LOADING,\n    SET_LOGIN,\n    SET_LOGOUT,\n    SET_ACCESS_TOKEN,\n    SET_EMAIL,\n    SET_USERNAME,\n    SET_ERRORMESSAGE,\n    REMOVE_BOOKMARK,\n    SET_BOOKMARKS,\n    SET_MARKASFINISHED,\n    SET_UNMARKASFINISHED,\n    ArticleType \n} from '../types'\n\n//Actions\nexport interface GetArticlesAction {\n    readonly type: typeof GET_ARTICLES\n    readonly payload: Array<ArticleType>\n}\n\nexport interface GetFilteredArticlesAction {\n    readonly type: typeof GET_FILTERED_ARTICLES\n    readonly payload: string\n}\n\nexport interface SetPartialArticlesAction {\n    readonly type: typeof SET_PARTIAL_ARTICLES\n    readonly payload: string\n}\n\nexport interface SetPerpageAction {\n    readonly type: typeof SET_PERPAGE\n    readonly payload: number\n}\n\nexport interface SetPageCountAction {\n    readonly type: typeof SET_PAPE_COUNT\n    readonly payload: number\n}\n\nexport interface SetOffsetAction {\n    readonly type: typeof SET_OFFSET\n    readonly payload: number\n}\n\nexport interface SetLoadingAction {\n    readonly type: typeof SET_LOADING\n    readonly payload: boolean\n}\n\nexport interface ClearFilterAction {\n    readonly type: typeof CLEAR_FILTER\n}\n\nexport interface SetLoginAction {\n    readonly type: typeof SET_LOGIN\n}\n\nexport interface SetLogoutAction {\n    readonly type: typeof SET_LOGOUT\n}\n\nexport interface SetAccessTokenAction {\n    readonly type: typeof SET_ACCESS_TOKEN\n    readonly payload: string\n}\n\nexport interface SetCategoryAction {\n    readonly type: typeof SET_CATEGORY\n    readonly payload: string\n}\n\nexport interface ClearCategoryAction {\n    readonly type: typeof CLEAR_CATEGORY\n}\n\nexport interface ResetLoadingAction {\n    readonly type: typeof RESET_LOADING\n}\n\nexport interface SetPlannerAction {\n    readonly type: typeof SET_PLANNER\n    readonly payload: boolean\n}\n\nexport interface SetEmailAction {\n    readonly type: typeof SET_EMAIL\n    readonly payload: string\n}\n\nexport interface SetUsernameAction {\n    readonly type: typeof SET_USERNAME\n    readonly payload: string\n}\n\nexport interface SetErrorMessageAction {\n    readonly type: typeof SET_ERRORMESSAGE\n    readonly payload: string\n}\n\nexport interface RemoveBookmarkAction {\n    readonly type: typeof REMOVE_BOOKMARK\n    readonly payload: number\n}\n\nexport interface SetBookmarksAction {\n    readonly type: typeof SET_BOOKMARKS\n    readonly payload: Array<number>\n}\n\nexport interface SetFinishedArticlesAction {\n    readonly type: typeof SET_MARKASFINISHED\n    readonly payload: Array<number>\n}\n\nexport interface RemoveFinishedArticlesAction {\n    readonly type: typeof SET_MARKASFINISHED\n    readonly payload: Array<number>\n}\n\nexport const getArticles = () => async dispatch => {\n    var res = {data:[]};\n    try {\n        res = await axios.get('/api/articles');\n        await dispatch({\n                type: GET_ARTICLES, \n                payload: res.data})\n    } catch (error) {\n        //res.data = error;\n        console.log(error);\n    \n    }\n}\n\nexport const getFilteredArticles = text => dispatch => {\n    dispatch({\n        type: GET_FILTERED_ARTICLES, \n        payload: text})\n}\n\nexport const setPartialArticles = articles => dispatch => {\n    dispatch({\n        type: SET_PARTIAL_ARTICLES, \n        payload: articles})\n}\n\nexport const setLoading = isLoading => dispatch => {\n    dispatch({\n        type: SET_LOADING, \n        payload: isLoading})\n}\n\nexport const setOffset = offset => dispatch => {\n    dispatch({\n        type: SET_OFFSET, \n        payload: offset})\n}\n\nexport const setPageCount = pageCount => dispatch => {\n    dispatch({\n        type: SET_PAPE_COUNT, \n        payload: pageCount})\n}\n\nexport const clearFilter = () => dispatch => {\n    dispatch({type: CLEAR_FILTER})\n}\n\nexport const setLogin = () => dispatch => {\n    dispatch({type: SET_LOGIN})\n}\n\nexport const setLogout = () => dispatch => {\n    dispatch({type: SET_LOGOUT})\n}\n\nexport const setAccessToken = token => dispatch => {\n    dispatch({\n        type: SET_ACCESS_TOKEN, \n        payload: token})\n}\n\nexport const setCategory = category => dispatch => {\n    dispatch({\n        type: SET_CATEGORY, \n        payload: category})\n}\n\nexport const clearCategory = () => dispatch => {\n    dispatch({type: CLEAR_CATEGORY})\n}\n\nexport const resetLoading = () => dispatch => {\n    dispatch({type: RESET_LOADING})\n}\n\nexport const setPlanner = showPlanner => dispatch => {\n    dispatch({\n        type: SET_PLANNER, \n        payload: showPlanner})\n}\n\nexport const setEmail = email => dispatch => {\n    dispatch({\n        type: SET_EMAIL, \n        payload: email})\n}\n\nexport const setUsername = username => dispatch => {\n    dispatch({\n        type: SET_USERNAME, \n        payload: username})\n}\n\nexport const setErrorMessage = message => dispatch => {\n    dispatch({\n        type: SET_ERRORMESSAGE, \n        payload: message})\n}\n\nexport const removeBookmark = id => dispatch => {\n    dispatch({\n        type: REMOVE_BOOKMARK, \n        payload: id})\n}\n\nexport const setBookmarks = bookmarks => dispatch => {\n    dispatch({\n        type: SET_BOOKMARKS, \n        payload: bookmarks})\n}\n\nexport const setFinishedArticles = finishedArticles => dispatch => {\n    dispatch({\n        type: SET_MARKASFINISHED, \n        payload: finishedArticles})\n}\n\nexport const removeFinishedArticle = finishedArticle => dispatch => {\n    dispatch({\n        type: SET_UNMARKASFINISHED, \n        payload: finishedArticle})\n}\n\n"]},"metadata":{},"sourceType":"module"}