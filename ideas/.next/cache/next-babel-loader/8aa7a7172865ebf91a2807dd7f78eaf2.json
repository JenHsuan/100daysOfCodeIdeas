{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectArticlesState } from './states/states';\nimport { getArticles, setLogout, setBookmarks, setUserId, setUsername, setAccessToken, setProvider, setFinishedArticles, setEmail } from './actions/articlesAction';\nimport { refreshToken } from '../components/account';\n\nvar PageWrapper = function PageWrapper(_ref) {\n  var _s = $RefreshSig$();\n\n  var WrappedComponent = _ref.WrappedComponent;\n  return _s(function () {\n    _s();\n\n    var disPatch = useDispatch();\n    var articles = useSelector(selectArticlesState);\n    useEffect(function () {\n      //Refresh JWT token or logout\n      refreshToken(SetLogout); //Fetch articles\n\n      if (articles.length === 0) {\n        console.log('fetch articles');\n        disPatch(getArticles());\n      } //Fetch Load bookmarks and finished articles\n\n\n      var bookmarksJson = localStorage.getItem(\"bookmarks\");\n\n      if (bookmarksJson !== null) {\n        var bookmarksList = bookmarksJson.split(',');\n        disPatch(setBookmarks(bookmarksList.filter(function (bookmark) {\n          return bookmark !== '';\n        })));\n      }\n\n      var filterArticlesJson = localStorage.getItem(\"filterArticles\");\n\n      if (filterArticlesJson !== null) {\n        var filterArticlesList = filterArticlesJson.split(',');\n        disPatch(setFinishedArticles(filterArticlesList.filter(function (filterArticle) {\n          return filterArticle !== '';\n        })));\n      }\n    }, []);\n\n    var SetLogout = function SetLogout() {\n      disPatch(setLogout());\n      disPatch(setUsername(''));\n      disPatch(setUserId(-1));\n      disPatch(setEmail(''));\n      disPatch(setFinishedArticles([]));\n      disPatch(setAccessToken(''));\n      disPatch(setProvider(''));\n      disPatch(setBookmarks([]));\n    };\n\n    return __jsx(WrappedComponent, null);\n  }, \"xmndWxdsuWS4QfbXAr0oM19yLII=\", false, function () {\n    return [useDispatch, useSelector];\n  });\n};\n\nexport default PageWrapper;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/PageWrapper.tsx"],"names":["React","useEffect","useDispatch","useSelector","selectArticlesState","getArticles","setLogout","setBookmarks","setUserId","setUsername","setAccessToken","setProvider","setFinishedArticles","setEmail","refreshToken","PageWrapper","WrappedComponent","disPatch","articles","SetLogout","length","console","log","bookmarksJson","localStorage","getItem","bookmarksList","split","filter","bookmark","filterArticlesJson","filterArticlesList","filterArticle"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SACIC,mBADJ,QAcO,iBAdP;AAgBA,SACIC,WADJ,EAKIC,SALJ,EAMIC,YANJ,EAOIC,SAPJ,EAQIC,WARJ,EASIC,cATJ,EAUIC,WAVJ,EAWIC,mBAXJ,EAYIC,QAZJ,QAaO,0BAbP;AAcA,SAASC,YAAT,QAA6B,uBAA7B;;AAGA,IAAMC,WAAiC,GAAG,SAApCA,WAAoC;AAAA;;AAAA,MAAEC,gBAAF,QAAEA,gBAAF;AAAA,YAAwB,YAAK;AAAA;;AACnE,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,QAAQ,GAAGf,WAAW,CAACC,mBAAD,CAA5B;AAEAH,IAAAA,SAAS,CAAC,YAAK;AACX;AACAa,MAAAA,YAAY,CAACK,SAAD,CAAZ,CAFW,CAIX;;AACA,UAAID,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAL,QAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACH,OARU,CAUX;;;AACA,UAAIkB,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;AACA,UAAIF,aAAa,KAAK,IAAtB,EAA4B;AACxB,YAAIG,aAAa,GAAGH,aAAa,CAACI,KAAd,CAAoB,GAApB,CAApB;AACAV,QAAAA,QAAQ,CAACV,YAAY,CAACmB,aAAa,CAACE,MAAd,CAAqB,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,KAAK,EAAjB;AAAA,SAA7B,CAAD,CAAb,CAAR;AACH;;AAED,UAAIC,kBAAkB,GAAGN,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAzB;;AACA,UAAIK,kBAAkB,KAAK,IAA3B,EAAiC;AAC7B,YAAIC,kBAAkB,GAAGD,kBAAkB,CAACH,KAAnB,CAAyB,GAAzB,CAAzB;AACAV,QAAAA,QAAQ,CAACL,mBAAmB,CAACmB,kBAAkB,CAACH,MAAnB,CAA0B,UAAAI,aAAa;AAAA,iBAAIA,aAAa,KAAK,EAAtB;AAAA,SAAvC,CAAD,CAApB,CAAR;AACH;AACJ,KAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,QAAMb,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBF,MAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACAW,MAAAA,QAAQ,CAACR,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAQ,MAAAA,QAAQ,CAACT,SAAS,CAAC,CAAC,CAAF,CAAV,CAAR;AACAS,MAAAA,QAAQ,CAACJ,QAAQ,CAAC,EAAD,CAAT,CAAR;AACAI,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,EAAD,CAApB,CAAR;AACAK,MAAAA,QAAQ,CAACP,cAAc,CAAC,EAAD,CAAf,CAAR;AACAO,MAAAA,QAAQ,CAACN,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAM,MAAAA,QAAQ,CAACV,YAAY,CAAC,EAAD,CAAb,CAAR;AACH,KATD;;AAWA,WACI,MAAC,gBAAD,OADJ;AAGH,GA1CyC;AAAA,YACrBL,WADqB,EAErBC,WAFqB;AAAA;AAAA,CAA1C;;AA4CA,eAAeY,WAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport {\n    selectArticlesState,\n    selectPartialArticlesState,\n    selectFilteredArticlesState,\n    selectIsLoadingState,\n    selectOffsetState,\n    selectPageCountState,\n    selectPerpageState,\n    selectShowPlannerState,\n    selectProviderState,\n    selectUserIdState,\n    selectEmailState,\n    selectAccessTokenState,\n    selectLoginState\n} from './states/states';\n\nimport { \n    getArticles,\n    setPartialArticles,\n    setOffset,\n    setPageCount,\n    setLogout,\n    setBookmarks,\n    setUserId,\n    setUsername,\n    setAccessToken,\n    setProvider,\n    setFinishedArticles,\n    setEmail\n} from './actions/articlesAction';\nimport { refreshToken } from '../components/account'\nimport { PageWrapperInterface } from '../components/types'\n\nconst PageWrapper: PageWrapperInterface = ({WrappedComponent}) => ()=> {\n    const disPatch = useDispatch();\n    const articles = useSelector(selectArticlesState);\n    \n    useEffect(()=> {\n        //Refresh JWT token or logout\n        refreshToken(SetLogout);\n\n        //Fetch articles\n        if (articles.length === 0) {\n            console.log('fetch articles')\n            disPatch(getArticles());\n        }\n\n        //Fetch Load bookmarks and finished articles\n        var bookmarksJson = localStorage.getItem(\"bookmarks\");\n        if (bookmarksJson !== null) {\n            var bookmarksList = bookmarksJson.split(',');\n            disPatch(setBookmarks(bookmarksList.filter(bookmark => bookmark !== '')))\n        }\n\n        var filterArticlesJson = localStorage.getItem(\"filterArticles\");\n        if (filterArticlesJson !== null) {\n            var filterArticlesList = filterArticlesJson.split(',');\n            disPatch(setFinishedArticles(filterArticlesList.filter(filterArticle => filterArticle !== '')))\n        }\n    }, [])\n\n    const SetLogout = () => {\n        disPatch(setLogout());\n        disPatch(setUsername(''));\n        disPatch(setUserId(-1));\n        disPatch(setEmail(''));\n        disPatch(setFinishedArticles([]));\n        disPatch(setAccessToken(''));\n        disPatch(setProvider(''));\n        disPatch(setBookmarks([]));\n    }\n\n    return (\n        <WrappedComponent/>\n    )\n}\n\nexport default PageWrapper\n"]},"metadata":{},"sourceType":"module"}