{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoginState, selectArticlesState } from './states/states';\nimport axios from 'axios';\nimport { setLogin, setLogout, setLoading, setAccessToken, setEmail, setUsername, setErrorMessage, getArticles, setPlanner } from './actions/articlesAction';\nimport { useMediaPredicate } from \"react-media-hook\";\n\nconst FormWrapper = WrappedComponent => () => {\n  const disPatch = useDispatch();\n  const isLogin = useSelector(selectLoginState);\n  const articles = useSelector(selectArticlesState);\n  const smallerThan600 = useMediaPredicate(\"(max-width: 600px)\"); //const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (articles.length === 0) {\n      console.log('fetch articles');\n      disPatch(getArticles());\n    }\n\n    if (smallerThan600) {\n      disPatch(setPlanner(false));\n    }\n  }, []);\n  useEffect(() => {\n    if (isLogin) {\n      Router.push(`/`);\n    }\n  }, [isLogin]);\n\n  const passAccessToken = async (provider, access_token) => {\n    console.log(access_token);\n    console.log(provider);\n    const res = await axios.post('/api/social-auth', {\n      provider: provider,\n      access_token: access_token\n    });\n    return res;\n  };\n\n  const responseFacebook = async (response, setMessage) => {\n    try {\n      disPatch(setLoading(true));\n      console.log(response[\"accessToken\"]);\n      console.log(response);\n      const responseFromDjango = await passAccessToken('facebook', response[\"accessToken\"]);\n      console.log(responseFromDjango);\n      const token = responseFromDjango[\"data\"][\"token\"];\n      const username = responseFromDjango[\"data\"][\"username\"];\n      const email = response[\"email\"];\n      SetLogin(token, email, username);\n      disPatch(setLoading(false));\n    } catch (error) {\n      //res.data = error;\n      //setMessage(error.message)\n      //setValue({...value, ['messages']: error.message})\n      disPatch(setLoading(false));\n      disPatch(setErrorMessage(error.message));\n      console.log(error);\n      disPatch(setLogout());\n    }\n  };\n\n  const SetLogin = (token, email, username) => {\n    if (email !== null && email !== undefined && email.length > 0) {\n      disPatch(setEmail(email)); //local storage\n\n      localStorage.setItem(\"email\", email);\n    }\n\n    if (username !== null && username !== undefined && username.length > 0) {\n      disPatch(setUsername(username)); //local storage\n\n      localStorage.setItem(\"username\", username);\n    }\n\n    disPatch(setLogin());\n    disPatch(setAccessToken(token)); //local storage\n\n    localStorage.setItem(\"login\", \"true\");\n  };\n\n  const ResponseGithubOnSuccess = async (response, setMessage) => {\n    try {\n      disPatch(setLoading(true));\n      const responseFromGithub = await axios.post('/api/get-github-access-token', {\n        code: response['code']\n      });\n      console.log(response);\n      const responseFromDjango = await passAccessToken('github', responseFromGithub['data']);\n      console.log(responseFromDjango);\n      const token = responseFromDjango[\"data\"][\"token\"];\n      const email = responseFromDjango[\"data\"][\"email\"];\n      const username = responseFromDjango[\"data\"][\"username\"];\n      SetLogin(token, email, username);\n      disPatch(setLoading(false));\n    } catch (error) {\n      //res.data = error;\n      //setValue({...value, ['messages']: error.message})\n      disPatch(setLoading(false));\n      disPatch(setErrorMessage(error.message));\n      console.log(error);\n      disPatch(setLogout());\n    }\n  };\n\n  const ResponseGithubOnFailure = response => console.error(response);\n\n  return __jsx(WrappedComponent, {\n    passAccessToken: passAccessToken,\n    responseFacebook: responseFacebook,\n    ResponseGithubOnSuccess: ResponseGithubOnSuccess,\n    ResponseGithubOnFailure: ResponseGithubOnFailure,\n    SetLogin: SetLogin\n  });\n};\n\nexport default FormWrapper;","map":null,"metadata":{},"sourceType":"module"}