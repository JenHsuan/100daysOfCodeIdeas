{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, Fragment, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { selectShowPlannerState, selectArticlesState } from './states/states';\nimport { setLogout, getArticles, setBookmarks, setUsername, setAccessToken, setEmail, setProvider, setFinishedArticles, setUserId } from './actions/articlesAction';\nimport { selectBookmarksState, selectFinishedArticlessState } from './states/states';\nimport Router from 'next/router';\nimport { VictoryPie } from 'victory';\n\nconst AchievementsContent = () => {\n  const disPatch = useDispatch();\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const showPlanner = useSelector(selectShowPlannerState);\n  const articles = useSelector(selectArticlesState);\n  const bookmarks = useSelector(selectBookmarksState);\n  const finishedArticles = useSelector(selectFinishedArticlessState);\n  useEffect(() => {\n    //Fetch articles\n    if (articles.length === 0) {\n      console.log('fetch articles');\n      disPatch(getArticles());\n    } //Refresh JWT token or logout\n\n\n    const refreshToken = async () => {\n      try {\n        const res = await axios.get('api/renew-token/');\n      } catch (error) {\n        console.log(error);\n        SetLogout();\n        SetLogoutForLocalSorage();\n        Router.push(`/signin`);\n      }\n    };\n\n    refreshToken();\n    var bookmarksJson = localStorage.getItem(\"bookmarks\");\n\n    if (bookmarksJson !== null) {\n      var bookmarks = bookmarksJson.split(',');\n      console.log(bookmarks);\n      disPatch(setBookmarks(bookmarks));\n    }\n\n    var finishedAriclesJson = localStorage.getItem(\"finishedArticles\");\n\n    if (finishedAriclesJson !== null) {\n      var finishedAricles = finishedAriclesJson.split(',');\n      console.log(finishedAricles);\n      disPatch(setFinishedArticles(finishedAricles));\n    }\n  }, []);\n  useEffect(() => {\n    //Fetch articles\n    var dataList = [];\n\n    if (articles.length !== 0) {\n      dataList.push({\n        y: articles.length\n      });\n    }\n\n    if (finishedArticles.length !== 0) {\n      dataList.push({\n        y: finishedArticles.length\n      });\n    }\n\n    if (bookmarks.length !== 0) {\n      dataList.push({\n        y: bookmarks.length\n      });\n    }\n\n    setData(dataList);\n  }, [articles, bookmarks, finishedArticles]);\n\n  const SetLogoutForLocalSorage = () => {\n    localStorage.removeItem('login');\n    localStorage.removeItem('username');\n    localStorage.removeItem('email');\n    localStorage.removeItem('finishedArticles');\n    localStorage.removeItem('bookmarks');\n    localStorage.removeItem('token');\n    localStorage.removeItem('provider');\n  };\n\n  const SetLogout = () => {\n    disPatch(setLogout());\n    disPatch(setUsername(''));\n    disPatch(setUserId(-1));\n    disPatch(setEmail(''));\n    disPatch(setFinishedArticles([]));\n    disPatch(setAccessToken(''));\n    disPatch(setProvider(''));\n    disPatch(setBookmarks([]));\n  };\n\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: `${showPlanner === true ? 'achievementspage-head' : 'achievementspage-head achievementspage-head-remove-left'}`\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Your Achievements\"), __jsx(\"div\", {\n    className: \"subtitle\"\n  }, \"Keep going\")), __jsx(\"div\", {\n    className: `${showPlanner !== true ? 'achievementspage-hide-siderbar' : 'achievementspage-hide-siderbar articles-hide-siderbar-remove-left'}`\n  }, __jsx(\"div\", {\n    className: \"achievementspage-content-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"achievementspage-hide-siderbar-labels\"\n  }), __jsx(\"div\", {\n    className: \"achievementspage-piechart\"\n  }, __jsx(VictoryPie, {\n    colorScale: [\"black\", \"blue\", \"green\"],\n    data: data,\n    innerRadius: 20,\n    labelRadius: 30\n  })))));\n};\n\nexport default AchievementsContent;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/AchievementsContent.tsx"],"names":["React","useEffect","Fragment","useState","useDispatch","useSelector","axios","selectShowPlannerState","selectArticlesState","setLogout","getArticles","setBookmarks","setUsername","setAccessToken","setEmail","setProvider","setFinishedArticles","setUserId","selectBookmarksState","selectFinishedArticlessState","Router","VictoryPie","AchievementsContent","disPatch","data","setData","showPlanner","articles","bookmarks","finishedArticles","length","console","log","refreshToken","res","get","error","SetLogout","SetLogoutForLocalSorage","push","bookmarksJson","localStorage","getItem","split","finishedAriclesJson","finishedAricles","dataList","y","removeItem"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment, useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport {\n    selectShowPlannerState,\n    selectArticlesState\n} from './states/states';\n\nimport {\n    setLogout,\n    getArticles,\n    setBookmarks,\n    setUsername,\n    setAccessToken,\n    setEmail,\n    setProvider,\n    setFinishedArticles,\n    setUserId\n} from './actions/articlesAction';\n\nimport {\n    selectBookmarksState,\n    selectFinishedArticlessState\n} from './states/states';\n\nimport Article from './Article'\nimport {Spinner} from 'react-bootstrap';\nimport Footer from '../components/Footer';\nimport Router, { useRouter } from 'next/router'\nimport { VictoryPie } from 'victory';\n\nconst AchievementsContent = () => {\n    const disPatch = useDispatch();\n    const [data, setData] = useState([])\n    const showPlanner = useSelector(selectShowPlannerState);\n    const articles = useSelector(selectArticlesState);\n    const bookmarks = useSelector(selectBookmarksState);\n    const finishedArticles = useSelector(selectFinishedArticlessState);\n    \n    useEffect(()=> {\n        //Fetch articles\n        if (articles.length === 0) {\n            console.log('fetch articles')\n            disPatch(getArticles());\n        }\n\n        //Refresh JWT token or logout\n        const refreshToken = async () => {\n            try {\n                const res = await axios.get('api/renew-token/');\n            } catch(error) {\n                console.log(error)\n                SetLogout();\n                SetLogoutForLocalSorage();\n                Router.push(`/signin`)\n            }\n        };\n        \n        refreshToken();\n\n        var bookmarksJson = localStorage.getItem(\"bookmarks\");\n        if (bookmarksJson !== null) {\n            var bookmarks = bookmarksJson.split(',');\n            console.log(bookmarks)\n            disPatch(setBookmarks(bookmarks))\n        }\n\n        var finishedAriclesJson = localStorage.getItem(\"finishedArticles\");\n        if (finishedAriclesJson !== null) {\n            var finishedAricles = finishedAriclesJson.split(',');\n            console.log(finishedAricles)\n            disPatch(setFinishedArticles(finishedAricles))\n        }\n    }, [])\n\n    useEffect(()=> {\n        //Fetch articles\n        var dataList = []\n        if (articles.length !== 0) {\n            dataList.push({ y: articles.length })\n        }\n        if (finishedArticles.length !== 0) {\n            dataList.push({ y: finishedArticles.length })\n        }\n        if (bookmarks.length !== 0) {\n            dataList.push({  y: bookmarks.length })\n        }\n        setData(dataList)\n\n    }, [articles, bookmarks, finishedArticles])\n\n    const SetLogoutForLocalSorage = () => {\n        localStorage.removeItem('login');\n        localStorage.removeItem('username');\n        localStorage.removeItem('email');\n        localStorage.removeItem('finishedArticles');\n        localStorage.removeItem('bookmarks');\n        localStorage.removeItem('token');\n        localStorage.removeItem('provider');\n    }\n\n    const SetLogout = () => {\n        disPatch(setLogout());\n        disPatch(setUsername(''));\n        disPatch(setUserId(-1));\n        disPatch(setEmail(''));\n        disPatch(setFinishedArticles([]));\n        disPatch(setAccessToken(''));\n        disPatch(setProvider(''));\n        disPatch(setBookmarks([]));\n    }\n\n    return (\n        <Fragment>\n            <div className={`${showPlanner === true ? 'achievementspage-head' : 'achievementspage-head achievementspage-head-remove-left'}`}>\n                <div className=\"title\">\n                    Your Achievements\n                </div>\n                <div className=\"subtitle\">\n                    Keep going\n                </div>\n            </div>\n            <div className={`${showPlanner !== true ? 'achievementspage-hide-siderbar' : 'achievementspage-hide-siderbar articles-hide-siderbar-remove-left'}`}>\n                <div className=\"achievementspage-content-grid-box\">\n                    <div className=\"achievementspage-hide-siderbar-labels\"></div>\n                    <div className=\"achievementspage-piechart\">\n                    <VictoryPie\n                        colorScale={[\"black\", \"blue\", \"green\" ]}\n                        data={data}\n                        innerRadius={20}\n                        labelRadius={30}\n                    />\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default AchievementsContent\n"]},"metadata":{},"sourceType":"module"}