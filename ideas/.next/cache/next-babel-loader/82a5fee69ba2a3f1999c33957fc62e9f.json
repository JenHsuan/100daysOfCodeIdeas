{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'; //import { GoogleLogin } from 'react-google-login';\n\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css';\nimport axios from 'axios';\nimport { Form, Spinner } from 'react-bootstrap';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoginState, selectShowPlannerState, selectErrorMessageState, selectLoadingState } from './states/states';\nimport { setErrorMessage } from './actions/articlesAction';\nimport FormWrapper from '../components/FormWrapper';\n\nvar SignUpForm = function SignUpForm(_ref) {\n  _s();\n\n  var passAccessToken = _ref.passAccessToken,\n      responseFacebook = _ref.responseFacebook,\n      ResponseGithubOnSuccess = _ref.ResponseGithubOnSuccess,\n      ResponseGithubOnFailure = _ref.ResponseGithubOnFailure,\n      SetLogin = _ref.SetLogin;\n  var disPatch = useDispatch();\n  var isLogin = useSelector(selectLoginState);\n  var showPlanner = useSelector(selectShowPlannerState);\n  var errorMessage = useSelector(selectErrorMessageState);\n  var isLoading = useSelector(selectLoadingState);\n  useEffect(function () {\n    if (isLogin) {\n      Router.push(\"/\");\n    }\n  }, [isLogin]);\n\n  var _useState = useState({\n    username: '',\n    email: '',\n    password: ''\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var username = value.username,\n      email = value.email,\n      password = value.password;\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      setValue(_objectSpread(_objectSpread({}, value), {}, _defineProperty({}, name, e.target.value.trim())));\n    };\n  };\n\n  var createUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username, password) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post('/api/users', {\n                username: username,\n                password: password\n              });\n\n            case 2:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createUser(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var createUserRes, err, id, token, headers, updateProfileRes, loginRes;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // Check if the form is invalid\n              // null or empty \n              // email format\n              e.preventDefault();\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post('/api/users/', {\n                username: username,\n                password: password\n              });\n\n            case 4:\n              createUserRes = _context2.sent;\n\n              if (!(createUserRes[\"data\"][\"error\"] !== undefined)) {\n                _context2.next = 10;\n                break;\n              }\n\n              err = createUserRes[\"data\"][\"error\"];\n              disPatch(setErrorMessage(\"\".concat(Object.keys(err)[0], \" : \").concat(Object.values(err)[0])));\n              _context2.next = 24;\n              break;\n\n            case 10:\n              id = createUserRes[\"data\"][\"id\"];\n              token = createUserRes[\"data\"][\"token\"];\n              headers = {\n                'Authorization': \"JWT \".concat(token)\n              };\n              _context2.next = 15;\n              return axios.post('/api/profile/', {\n                email: email,\n                reader: id\n              });\n\n            case 15:\n              updateProfileRes = _context2.sent;\n              console.log(updateProfileRes);\n              err = updateProfileRes[\"data\"][\"error\"];\n\n              if (err !== undefined) {\n                disPatch(setErrorMessage(\"\".concat(Object.keys(err)[0], \" : \").concat(Object.values(err)[0])));\n              }\n\n              if (!(updateProfileRes !== undefined && updateProfileRes[\"data\"][\"email\"] === email)) {\n                _context2.next = 24;\n                break;\n              }\n\n              _context2.next = 22;\n              return axios.post('/api/token-auth/', {\n                username: username,\n                password: password\n              });\n\n            case 22:\n              loginRes = _context2.sent;\n              SetLogin(token, email, username);\n\n            case 24:\n              _context2.next = 30;\n              break;\n\n            case 26:\n              _context2.prev = 26;\n              _context2.t0 = _context2[\"catch\"](1);\n              //res.data = error;\n              disPatch(setErrorMessage(_context2.t0.message));\n              console.log(_context2.t0);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 26]]);\n    }));\n\n    return function handleSubmit(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: \"\".concat(showPlanner === true ? 'signinform-move-left signinform' : 'signinform')\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"signinform-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\")))) : __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Create Your Free Account\"), __jsx(FacebookLogin, {\n    cssClass: \"fb-btn\",\n    appId: \"240314257268798\",\n    autoLoad: false,\n    fields: \"name,email,picture\",\n    callback: responseFacebook,\n    render: function render(renderProps) {\n      return __jsx(\"button\", {\n        onClick: renderProps.onClick,\n        className: \"fb-btn\"\n      }, \"Facebook\");\n    }\n  }), __jsx(GitHubLogin, {\n    className: \"github-btn\",\n    clientId: \"51b1a8ee5b7cad1e6a85\",\n    redirectUri: \"http://localhost:3000/signin\",\n    onSuccess: ResponseGithubOnSuccess,\n    onFailure: ResponseGithubOnFailure,\n    buttonText: \"Github\"\n  }), __jsx(\"div\", {\n    className: \"split-line\"\n  }, \"Or signup by email\"), __jsx(\"div\", {\n    className: \"signin-form\"\n  }, __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\"\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Username\",\n    className: \"username\",\n    onChange: handleChange('username')\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\"\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Email\",\n    className: \"email\",\n    onChange: handleChange('email')\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\"\n  }, __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"password\",\n    onChange: handleChange('password')\n  })), __jsx(\"button\", {\n    className: \"btn-submit\"\n  }, \"Get Started\"))), __jsx(\"div\", {\n    className: \"messages\"\n  }, errorMessage))));\n};\n\n_s(SignUpForm, \"0X39r0d8P9+OGJ9X6mTRbNBPeDI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = SignUpForm;\nexport default _c2 = FormWrapper(SignUpForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUpForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/SignUpForm.tsx"],"names":["React","Fragment","useEffect","useState","FacebookLogin","GitHubLogin","axios","Form","Spinner","Router","useDispatch","useSelector","selectLoginState","selectShowPlannerState","selectErrorMessageState","selectLoadingState","setErrorMessage","FormWrapper","SignUpForm","passAccessToken","responseFacebook","ResponseGithubOnSuccess","ResponseGithubOnFailure","SetLogin","disPatch","isLogin","showPlanner","errorMessage","isLoading","push","username","email","password","value","setValue","handleChange","name","e","target","trim","createUser","post","res","handleSubmit","preventDefault","createUserRes","undefined","err","Object","keys","values","id","token","headers","reader","updateProfileRes","console","log","loginRes","message","renderProps","onClick"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react'\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n//import { GoogleLogin } from 'react-google-login';\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css'\nimport axios from 'axios';\nimport {Form, Spinner} from 'react-bootstrap';\nimport Router from 'next/router'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectLoginState,\n    selectShowPlannerState,\n    selectErrorMessageState,\n    selectLoadingState\n} from './states/states';\n\nimport { \n    setErrorMessage\n} from './actions/articlesAction';\nimport FormWrapper from '../components/FormWrapper'\n\nconst SignUpForm = ({passAccessToken,\n    responseFacebook,\n    ResponseGithubOnSuccess,\n    ResponseGithubOnFailure,\n    SetLogin}) => {\n    const disPatch = useDispatch();\n    const isLogin = useSelector(selectLoginState);\n    const showPlanner = useSelector(selectShowPlannerState);\n    const errorMessage = useSelector(selectErrorMessageState);\n    const isLoading = useSelector(selectLoadingState);\n\n    useEffect(()=> {\n        if (isLogin) {\n            Router.push(`/`)\n        }\n    }, [isLogin])\n\n    const [value, setValue] = useState({\n        username:'',\n        email:'',\n        password:''\n    })\n\n    const {username, email, password} = value;\n\n    const handleChange = name => e => {\n      setValue({...value, [name]: e.target.value.trim()})\n    }\n\n    const createUser = async (username, password) => {\n        const res = await axios.post('/api/users', {\n            username: username,\n            password: password\n        });\n        return res;\n    }\n\n    const handleSubmit = async e => {\n        // Check if the form is invalid\n        // null or empty \n        // email format\n        e.preventDefault();\n        try {\n            const createUserRes = await axios.post('/api/users/', {\n                username: username,\n                password: password\n            });\n            if (createUserRes[\"data\"][\"error\"] !== undefined) {\n                var err = createUserRes[\"data\"][\"error\"]\n                disPatch(setErrorMessage(`${Object.keys(err)[0]} : ${Object.values(err)[0]}`))\n            } else  {\n                const id = createUserRes[\"data\"][\"id\"];\n                const token = createUserRes[\"data\"][\"token\"];\n                const headers = {\n                    'Authorization': `JWT ${token}`\n                }\n                const updateProfileRes = await axios.post('/api/profile/', {\n                    email: email,\n                    reader: id\n                });\n                \n                console.log(updateProfileRes)\n                var err = updateProfileRes[\"data\"][\"error\"]\n                if (err !== undefined) {\n                    disPatch(setErrorMessage(`${Object.keys(err)[0]} : ${Object.values(err)[0]}`))\n                }\n                if (updateProfileRes !== undefined && updateProfileRes[\"data\"][\"email\"] === email) {\n                    const loginRes = await axios.post('/api/token-auth/', {\n                        username: username,\n                        password: password\n                    });\n                    SetLogin(token, email, username);\n                }\n            }\n            \n        } catch (error) {\n            //res.data = error;\n            disPatch(setErrorMessage(error.message))\n            console.log(error);\n        }\n    }\n\n    return (\n        <Fragment>\n        <div className={`${showPlanner === true ? 'signinform-move-left signinform' : 'signinform'}`} >\n            {isLoading === true ? (\n                <div className=\"signinform-grid-box\">\n                <div className=\"signinform-spinner\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n            </div>\n            ):(\n                <div className=\"signinform-grid-box\">\n                    <div className=\"title\">Create Your Free Account</div>\n                <FacebookLogin\n                    cssClass=\"fb-btn\"\n                    appId=\"240314257268798\"\n                    autoLoad={false}\n                    fields=\"name,email,picture\"\n                    callback={responseFacebook}\n                    render={renderProps => (\n                        <button onClick={renderProps.onClick} className=\"fb-btn\">Facebook</button>\n                      )}/>\n                <GitHubLogin \n                    className=\"github-btn\"\n                    clientId=\"51b1a8ee5b7cad1e6a85\"\n                    redirectUri=\"http://localhost:3000/signin\" \n                    onSuccess={ResponseGithubOnSuccess}\n                    onFailure={ResponseGithubOnFailure}\n                    buttonText=\"Github\"/>\n                    <div className=\"split-line\">\n                        Or signup by email\n                    </div>\n                    <div className=\"signin-form\">\n                        <Form onSubmit = {handleSubmit}>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Control type=\"text\" placeholder=\"Enter Username\" className=\"username\" onChange={handleChange('username')} />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"text\" placeholder=\"Enter Email\" className=\"email\" onChange={handleChange('email')}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"password\" placeholder=\"Password\" className=\"password\" onChange={handleChange('password')}/>\n                            </Form.Group>\n                    <button className=\"btn-submit\">\n                    Get Started\n                    </button>\n                        </Form>\n                    </div>\n            <div className=\"messages\">{errorMessage}</div>\n                </div>\n            )}\n            </div>\n        </Fragment>    \n    )\n}\n\nexport default FormWrapper(SignUpForm)\n"]},"metadata":{},"sourceType":"module"}