{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\n//Types\nimport { GET_ARTICLES } from '../types'; //Actions\n\nexport const getArticles = () => {\n  // Invoke API\n  return async dispatch => {\n    const res = await axios.get('http://127.0.0.1:8000/api/articles');\n    console.log(res);\n    return dispatch({\n      type: 'GET_ARTICLES',\n      payload: res.data\n    });\n  };\n};\n/*\nexport const getArticles = (): GetArticlesAction => {\n    return dispatch => {\n\n    }\n    try {\n\n        const res = await axios.get('/api/articles');\n        return {\n            type: GET_ARTICLES, \n            payload: res.data}\n    }\n    catch (err) {}\n}\n*/\n//Selector functions\n\nexport const selectArticlesState = rootState => rootState.articlesReducer; //Initial state\n\nconst initialState = {\n  articles: []\n}; //Reducer\n\nconst articlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ARTICLES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        products: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default articlesReducer;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/reducers/articlesReducer.ts"],"names":["axios","GET_ARTICLES","getArticles","dispatch","res","get","console","log","type","payload","data","selectArticlesState","rootState","articlesReducer","initialState","articles","state","action","products"],"mappings":";;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAGA;AACA,SAASC,YAAT,QAA0C,UAA1C,C,CAEA;;AAWA,OAAO,MAAMC,WAAW,GAAG,MAAuE;AAC9F;AACA,SAAO,MAAOC,QAAP,IAAuF;AAC1F,UAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,oCAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,WAAOD,QAAQ,CAAC;AACZK,MAAAA,IAAI,EAAE,cADM;AAEZC,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFD,KAAD,CAAf;AAGH,GAND;AAOH,CATM;AAWP;;;;;;;;;;;;;;;AAgBA;;AACA,OAAO,MAAMC,mBAAmB,GAAIC,SAAD,IAA0BA,SAAS,CAACC,eAAhE,C,CAEP;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB,C,CAIA;;AAKA,MAAMF,eAAe,GAAG,CAACG,KAAoB,GAAGF,YAAxB,EAAsCG,MAAtC,KAAoE;AACxF,UAAOA,MAAM,CAACT,IAAd;AACI,SAAKP,YAAL;AACI,6CACOe,KADP;AAEIE,QAAAA,QAAQ,EAAED,MAAM,CAACR;AAFrB;;AAIJ;AACI,aAAOO,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeH,eAAf","sourcesContent":["import { Action } from 'redux';\nimport { RootState} from '../store/store'\nimport axios from 'axios';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux';\n//Types\nimport { GET_ARTICLES, ArticleType } from '../types'\n\n//Actions\n\ninterface GetArticlesAction {\n    readonly type: typeof GET_ARTICLES\n    readonly payload: Array<object>\n}\n\nexport interface FetchTasksAction extends Action<'GET_ARTICLES'> {\n    payload: ArticleType[];\n}\n\nexport const getArticles = ():ThunkAction<Promise<FetchTasksAction>, {}, {}, FetchTasksAction> => {\n    // Invoke API\n    return async (dispatch: ThunkDispatch<{}, {}, FetchTasksAction>): Promise<FetchTasksAction>=> {\n        const res = await axios.get('http://127.0.0.1:8000/api/articles');\n        console.log(res);\n        return dispatch({\n            type: 'GET_ARTICLES', \n            payload: res.data})\n    }\n}\n\n/*\nexport const getArticles = (): GetArticlesAction => {\n    return dispatch => {\n\n    }\n    try {\n\n        const res = await axios.get('/api/articles');\n        return {\n            type: GET_ARTICLES, \n            payload: res.data}\n    }\n    catch (err) {}\n}\n*/\n\n//Selector functions\nexport const selectArticlesState = (rootState: RootState) => rootState.articlesReducer;\n\n//Initial state\nconst initialState = {\n    articles: [],\n}\n\n//Reducer\ninterface ArticlesState {\n    articles: Array<object>;\n}\n\nconst articlesReducer = (state: ArticlesState = initialState, action: GetArticlesAction) => {\n    switch(action.type) {\n        case GET_ARTICLES:\n            return {\n                ...state,\n                products: action.payload\n            }\n        default:\n            return state; \n    }\n};\n\nexport default articlesReducer;"]},"metadata":{},"sourceType":"module"}