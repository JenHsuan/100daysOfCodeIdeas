{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'; //import { GoogleLogin } from 'react-google-login';\n\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css';\nimport axios from 'axios';\nimport { Form, Spinner } from 'react-bootstrap';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoginState, selectShowPlannerState, selectArticlesState } from './states/states';\nimport { setLogin, setLogout, setAccessToken, setEmail, setUsername, getArticles } from './actions/articlesAction';\n\nconst SignInForm = () => {\n  const disPatch = useDispatch();\n  const isLogin = useSelector(selectLoginState);\n  const showPlanner = useSelector(selectShowPlannerState);\n  const articles = useSelector(selectArticlesState);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    if (articles.length === 0) {\n      console.log('fetch articles');\n      disPatch(getArticles());\n    }\n  }, []);\n  useEffect(() => {\n    if (isLogin) {\n      Router.push(`/`);\n    }\n  }, [isLogin]);\n  const {\n    0: value,\n    1: setValue\n  } = useState({\n    username: '',\n    password: '',\n    messages: ''\n  });\n  const {\n    username,\n    password,\n    messages\n  } = value;\n\n  const handleChange = name => e => {\n    setValue(_objectSpread(_objectSpread({}, value), {}, {\n      [name]: e.target.value.trim()\n    }));\n  };\n\n  const passAccessToken = async (provider, access_token) => {\n    console.log(access_token);\n    console.log(provider);\n    const res = await axios.post('/api/social-auth', {\n      provider: provider,\n      access_token: access_token\n    });\n    return res;\n  };\n\n  const responseFacebook = async response => {\n    try {\n      setLoading(true);\n      console.log(response[\"accessToken\"]);\n      console.log(response);\n      const responseFromDjango = await passAccessToken('facebook', response[\"accessToken\"]);\n      console.log(responseFromDjango);\n      const token = responseFromDjango[\"data\"][\"token\"];\n      const username = responseFromDjango[\"data\"][\"username\"];\n      const email = response[\"email\"];\n      SetLogin(token, email, username);\n      setLoading(false);\n    } catch (error) {\n      //res.data = error;\n      setValue(_objectSpread(_objectSpread({}, value), {}, {\n        ['messages']: error.message\n      }));\n      console.log(error);\n      disPatch(setLogout());\n    }\n  };\n\n  const responseGoogle = response => {\n    console.log(response);\n  };\n\n  const SetLogin = (token, email, username) => {\n    if (email !== null && email !== undefined && email.length > 0) {\n      disPatch(setEmail(email)); //local storage\n\n      localStorage.setItem(\"email\", email);\n    }\n\n    if (username !== null && username !== undefined && username.length > 0) {\n      disPatch(setUsername(username)); //local storage\n\n      localStorage.setItem(\"username\", username);\n    }\n\n    disPatch(setLogin());\n    disPatch(setAccessToken(token)); //local storage\n\n    localStorage.setItem(\"login\", \"true\");\n  };\n\n  const ResponseGithubOnSuccess = async response => {\n    try {\n      setLoading(true);\n      const responseFromGithub = await axios.post('/api/get-github-access-token', {\n        code: response['code']\n      });\n      console.log(response);\n      const responseFromDjango = await passAccessToken('github', responseFromGithub['data']);\n      console.log(responseFromDjango);\n      const token = responseFromDjango[\"data\"][\"token\"];\n      const email = responseFromDjango[\"data\"][\"email\"];\n      const username = responseFromDjango[\"data\"][\"username\"];\n      SetLogin(token, email, username);\n      setLoading(false);\n    } catch (error) {\n      //res.data = error;\n      setValue(_objectSpread(_objectSpread({}, value), {}, {\n        ['messages']: error.message\n      }));\n      console.log(error);\n      disPatch(setLogout());\n    }\n  };\n\n  const ResponseGithubOnFailure = response => console.error(response);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(username);\n    console.log(password);\n\n    try {\n      setLoading(true);\n      const res = await axios.post('/api/token-auth/', {\n        username: username,\n        password: password\n      });\n      console.log(res[\"data\"][\"user\"][\"profile\"]);\n      const token = res[\"data\"][\"token\"];\n      const email = res[\"data\"][\"user\"][\"profile\"][\"email\"];\n      SetLogin(token, email, username);\n      setLoading(false);\n    } catch (error) {\n      //res.data = error;\n      setValue(_objectSpread(_objectSpread({}, value), {}, {\n        ['messages']: error.message\n      })); //handleChange('messages')(error.text)\n      //console.log(value);\n      //disPatch(setLogout());\n    }\n  };\n\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: `${showPlanner === true ? 'signinform-move-left signinform' : 'signinform'}`\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"signinform-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\")))) : __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Welcome back!\"), __jsx(FacebookLogin, {\n    cssClass: \"fb-btn\",\n    appId: \"240314257268798\",\n    autoLoad: false,\n    fields: \"name,email,picture\",\n    callback: responseFacebook,\n    render: renderProps => __jsx(\"button\", {\n      onClick: renderProps.onClick,\n      className: \"fb-btn\"\n    }, \"Facebook\")\n  }), __jsx(GitHubLogin, {\n    className: \"github-btn\",\n    clientId: \"51b1a8ee5b7cad1e6a85\",\n    redirectUri: \"http://localhost:3000/signin\",\n    onSuccess: ResponseGithubOnSuccess,\n    onFailure: ResponseGithubOnFailure,\n    buttonText: \"Github\"\n  }), __jsx(\"div\", {\n    className: \"split-line\"\n  }, \"Or signin by username\"), __jsx(\"div\", {\n    className: \"signin-form\"\n  }, __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\"\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Username\",\n    className: \"username\",\n    onChange: handleChange('username')\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\"\n  }, __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"password\",\n    onChange: handleChange('password')\n  })), __jsx(\"button\", {\n    className: \"btn-submit\"\n  }, \"Sign in\"))), __jsx(\"div\", {\n    className: \"messages\"\n  }, messages))));\n};\n\nexport default SignInForm;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/SignInForm.tsx"],"names":["React","Fragment","useEffect","useState","FacebookLogin","GitHubLogin","axios","Form","Spinner","Router","useDispatch","useSelector","selectLoginState","selectShowPlannerState","selectArticlesState","setLogin","setLogout","setAccessToken","setEmail","setUsername","getArticles","SignInForm","disPatch","isLogin","showPlanner","articles","isLoading","setLoading","length","console","log","push","value","setValue","username","password","messages","handleChange","name","e","target","trim","passAccessToken","provider","access_token","res","post","responseFacebook","response","responseFromDjango","token","email","SetLogin","error","message","responseGoogle","undefined","localStorage","setItem","ResponseGithubOnSuccess","responseFromGithub","code","ResponseGithubOnFailure","handleSubmit","preventDefault","renderProps","onClick"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react'\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n//import { GoogleLogin } from 'react-google-login';\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css'\nimport axios from 'axios';\nimport {Form, Spinner} from 'react-bootstrap';\nimport Router from 'next/router'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectLoginState,\n    selectShowPlannerState,\n    selectArticlesState\n} from './states/states';\n\nimport { \n    setLogin,\n    setLogout,\n    setAccessToken,\n    setEmail,\n    setUsername,\n    getArticles\n} from './actions/articlesAction';\n\n\nconst SignInForm = () => {\n    const disPatch = useDispatch();\n    const isLogin = useSelector(selectLoginState);\n    const showPlanner = useSelector(selectShowPlannerState);\n    const articles = useSelector(selectArticlesState);\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(()=> {\n        if (articles.length === 0) {\n            console.log('fetch articles')\n            disPatch(getArticles());\n        }\n    }, [])\n\n    useEffect(()=> {\n        if (isLogin) {\n            Router.push(`/`)\n        }\n    }, [isLogin])\n\n    const [value, setValue] = useState({\n        username:'',\n        password:'',\n        messages:''\n    })\n\n    const {username, password, messages} = value;\n\n    const handleChange = name => e => {\n      setValue({...value, [name]: e.target.value.trim()})\n    }\n\n    const passAccessToken = async (provider, access_token) => {\n        console.log(access_token)\n        console.log(provider)\n        const res = await axios.post('/api/social-auth', {\n            provider: provider,\n            access_token: access_token\n        });\n        return res;\n    }\n\n    const responseFacebook = async response => {\n        try {\n            setLoading(true);\n            console.log(response[\"accessToken\"])\n            console.log(response)\n            const responseFromDjango = await passAccessToken('facebook', response[\"accessToken\"]);\n            console.log(responseFromDjango);\n            const token = responseFromDjango[\"data\"][\"token\"];\n            const username = responseFromDjango[\"data\"][\"username\"];\n            const email = response[\"email\"];\n            SetLogin(token, email, username);\n            setLoading(false);\n        } catch (error) {\n            //res.data = error;\n            setValue({...value, ['messages']: error.message})\n            console.log(error);\n            disPatch(setLogout());\n        }\n    }\n\n    const responseGoogle = (response) => {\n        console.log(response);\n    }\n\n    const SetLogin = (token, email, username) => {\n        if (email !== null && email !== undefined && email.length >0 ) {\n            disPatch(setEmail(email));\n            //local storage\n            localStorage.setItem(\"email\", email);\n        }\n        if (username !== null && username !== undefined && username.length >0 ) {\n            disPatch(setUsername(username));\n            //local storage\n            localStorage.setItem(\"username\", username);\n        }\n\n        disPatch(setLogin());\n        disPatch(setAccessToken(token));\n        //local storage\n        localStorage.setItem(\"login\", \"true\");\n    }\n\n    const ResponseGithubOnSuccess = async response => {\n        try {\n            setLoading(true);\n            const responseFromGithub = await axios.post('/api/get-github-access-token', {\n                code: response['code']\n            });\n            console.log(response);\n            \n            const responseFromDjango = await passAccessToken('github', responseFromGithub['data']);\n            console.log(responseFromDjango);\n            const token = responseFromDjango[\"data\"][\"token\"];\n            const email = responseFromDjango[\"data\"][\"email\"];\n            const username = responseFromDjango[\"data\"][\"username\"];\n            SetLogin(token, email, username);\n            setLoading(false);\n        } catch (error) {\n            //res.data = error;\n            setValue({...value, ['messages']: error.message})\n            console.log(error);\n            disPatch(setLogout());\n        }\n    }\n\n    const ResponseGithubOnFailure = response => console.error(response);  \n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        console.log(username)\n        console.log(password)\n        try {\n            setLoading(true);\n            const res = await axios.post('/api/token-auth/', {\n                username: username,\n                password: password\n            });\n            console.log(res[\"data\"][\"user\"][\"profile\"])\n            const token = res[\"data\"][\"token\"];\n            const email = res[\"data\"][\"user\"][\"profile\"][\"email\"];\n            SetLogin(token, email, username);\n            setLoading(false);\n        } catch (error) {\n            //res.data = error;\n            setValue({...value, ['messages']: error.message})\n            //handleChange('messages')(error.text)\n            //console.log(value);\n            //disPatch(setLogout());\n        }\n    }\n\n    return (\n        <Fragment>\n        <div className={`${showPlanner === true ? 'signinform-move-left signinform' : 'signinform'}`} >\n                {isLoading === true ? (\n                    <div className=\"signinform-grid-box\">\n                        <div className=\"signinform-spinner\">\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                        </div>\n                    </div>\n                ):(\n                    <div className=\"signinform-grid-box\">\n                        <div className=\"title\">Welcome back!</div>\n                        <FacebookLogin\n                            cssClass=\"fb-btn\"\n                            appId=\"240314257268798\"\n                            autoLoad={false}\n                            fields=\"name,email,picture\"\n                            callback={responseFacebook}\n                            render={renderProps => (\n                                <button onClick={renderProps.onClick} className=\"fb-btn\">Facebook</button>\n                            )}/>\n                        <GitHubLogin \n                            className=\"github-btn\"\n                            clientId=\"51b1a8ee5b7cad1e6a85\"\n                            redirectUri=\"http://localhost:3000/signin\" \n                            onSuccess={ResponseGithubOnSuccess}\n                            onFailure={ResponseGithubOnFailure}\n                            buttonText=\"Github\"/>\n                        <div className=\"split-line\">Or signin by username</div>\n                        <div className=\"signin-form\">\n                        <Form onSubmit = {handleSubmit}>\n                            <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control type=\"text\" placeholder=\"Enter Username\" className=\"username\" onChange={handleChange('username')} />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Control type=\"password\" placeholder=\"Password\" className=\"password\" onChange={handleChange('password')}/>\n                        </Form.Group>\n                        <button className=\"btn-submit\">\n                            Sign in\n                        </button>\n                    </Form>\n                </div>\n                <div className=\"messages\">{messages}</div>\n            </div>\n                )}\n        </div>\n        </Fragment>    \n    )\n}\n\nexport default SignInForm\n"]},"metadata":{},"sourceType":"module"}