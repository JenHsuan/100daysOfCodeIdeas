{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios'; //Types\n\nimport { GET_ARTICLES, GET_FILTERED_ARTICLES, CLEAR_FILTER } from '../types'; //Actions\n\n/*\nexport interface FetchTasksAction extends Action<'GET_ARTICLES'> {\n    payload: ArticleType[];\n}\n*/\nexport var getArticles = function getArticles() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/api/articles?category=1');\n\n            case 2:\n              res = _context.sent;\n              console.log(res.data);\n              _context.next = 6;\n              return dispatch({\n                type: GET_ARTICLES,\n                payload: res.data\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getFilteredArticles = function getFilteredArticles(text) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_FILTERED_ARTICLES,\n      payload: text\n    });\n  };\n};\nexport var clearFilter = function clearFilter() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n}; //Selector functions\n\nexport var selectArticlesState = function selectArticlesState(rootState) {\n  return rootState.articlesReducer.articles;\n};\nexport var selectFilteredArticlesState = function selectFilteredArticlesState(rootState) {\n  return rootState.articlesReducer.filteredArticles;\n}; //Initial state\n\nvar initialState = {\n  articles: [],\n  filteredArticles: []\n}; //Reducer\n\nvar articlesReducer = function articlesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type);\n\n  switch (action.type) {\n    case GET_ARTICLES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        articles: action.payload\n      });\n\n    case GET_FILTERED_ARTICLES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filteredArticles: state.articles.filter(function (article) {\n          var regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return article.title.match(regex) || article.subtitle.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filtered: []\n      });\n\n    default:\n      console.log(123);\n      return state;\n  }\n};\n\nexport default articlesReducer;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/reducers/articlesReducer.ts"],"names":["axios","GET_ARTICLES","GET_FILTERED_ARTICLES","CLEAR_FILTER","getArticles","dispatch","get","res","console","log","data","type","payload","getFilteredArticles","text","clearFilter","selectArticlesState","rootState","articlesReducer","articles","selectFilteredArticlesState","filteredArticles","initialState","state","action","filter","article","regex","RegExp","title","match","subtitle","filtered"],"mappings":";;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,YAAT,EAAuBC,qBAAvB,EAA8CC,YAA9C,QAA+E,UAA/E,C,CAEA;;AAgBA;;;;;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA,wEAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPL,KAAK,CAACM,GAAN,CAAU,0BAAV,CADO;;AAAA;AACnBC,cAAAA,GADmB;AAEzBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAFyB;AAAA,qBAGnBL,QAAQ,CAAC;AACXM,gBAAAA,IAAI,EAAEV,YADK;AAEXW,gBAAAA,OAAO,EAAEL,GAAG,CAACG;AAFF,eAAD,CAHW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAQP,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,IAAI;AAAA,SAAI,UAAAT,QAAQ,EAAI;AACnDA,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAET,qBADD;AAELU,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAGH,GAJsC;AAAA,CAAhC;AAMP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAAV,QAAQ,EAAI;AACzCA,IAAAA,QAAQ,CAAC;AAACM,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACH,GAF0B;AAAA,CAApB,C,CAIP;;AACA,OAAO,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD;AAAA,SAA0BA,SAAS,CAACC,eAAV,CAA0BC,QAApD;AAAA,CAA5B;AACP,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACH,SAAD;AAAA,SAA0BA,SAAS,CAACC,eAAV,CAA0BG,gBAApD;AAAA,CAApC,C,CAEP;;AACA,IAAMC,YAAY,GAAG;AACjBH,EAAAA,QAAQ,EAAE,EADO;AAEjBE,EAAAA,gBAAgB,EAAE;AAFD,CAArB,C,CAKA;;AAMA,IAAMH,eAAe,GAAG,SAAlBA,eAAkB,GAAoH;AAAA,MAAnHK,KAAmH,uEAA5FD,YAA4F;AAAA,MAA9EE,MAA8E;AACxIhB,EAAAA,OAAO,CAACC,GAAR,CAAYe,MAAM,CAACb,IAAnB;;AACA,UAAOa,MAAM,CAACb,IAAd;AACI,SAAKV,YAAL;AACI,6CACOsB,KADP;AAEIJ,QAAAA,QAAQ,EAAEK,MAAM,CAACZ;AAFrB;;AAIJ,SAAKV,qBAAL;AACI,6CACOqB,KADP;AAEIF,QAAAA,gBAAgB,EAAEE,KAAK,CAACJ,QAAN,CAAeM,MAAf,CAAsB,UAAAC,OAAO,EAAI;AAC/C,cAAMC,KAAK,GAAG,IAAIC,MAAJ,WAAcJ,MAAM,CAACZ,OAArB,GAAgC,IAAhC,CAAd;AACA,iBAAOc,OAAO,CAACG,KAAR,CAAcC,KAAd,CAAoBH,KAApB,KAA8BD,OAAO,CAACK,QAAR,CAAiBD,KAAjB,CAAuBH,KAAvB,CAArC;AACH,SAHiB;AAFtB;;AAOJ,SAAKxB,YAAL;AACI,6CACOoB,KADP;AAEIS,QAAAA,QAAQ,EAAE;AAFd;;AAIJ;AACIxB,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,aAAOc,KAAP;AArBR;AAuBH,CAzBD;;AA2BA,eAAeL,eAAf","sourcesContent":["import { Action } from 'redux';\nimport { RootState} from '../store/store'\nimport axios from 'axios';\n//Types\nimport { GET_ARTICLES, GET_FILTERED_ARTICLES, CLEAR_FILTER, ArticleType } from '../types'\n\n//Actions\n\nexport interface GetArticlesAction {\n    readonly type: typeof GET_ARTICLES\n    readonly payload: Array<ArticleType>\n}\n\nexport interface GetFilteredArticlesAction {\n    readonly type: typeof GET_FILTERED_ARTICLES\n    readonly payload: string\n}\n\nexport interface ClearFilterAction {\n    readonly type: typeof CLEAR_FILTER\n}\n\n/*\nexport interface FetchTasksAction extends Action<'GET_ARTICLES'> {\n    payload: ArticleType[];\n}\n*/\n\nexport const getArticles = () => async dispatch => {\n        const res = await axios.get('/api/articles?category=1');\n        console.log(res.data)\n        await dispatch({\n            type: GET_ARTICLES, \n            payload: res.data})\n}\n\nexport const getFilteredArticles = text => dispatch => {\n    dispatch({\n        type: GET_FILTERED_ARTICLES, \n        payload: text})\n}\n\nexport const clearFilter = () => dispatch => {\n    dispatch({type: CLEAR_FILTER})\n}\n\n//Selector functions\nexport const selectArticlesState = (rootState: RootState) => rootState.articlesReducer.articles;\nexport const selectFilteredArticlesState = (rootState: RootState) => rootState.articlesReducer.filteredArticles;\n\n//Initial state\nconst initialState = {\n    articles: [],\n    filteredArticles: []\n}\n\n//Reducer\ninterface ArticlesState {\n    articles: Array<ArticleType>;\n    filteredArticles: Array<ArticleType>;\n}\n\nconst articlesReducer = (state: ArticlesState = initialState, action: GetArticlesAction | GetFilteredArticlesAction | ClearFilterAction) => {\n    console.log(action.type)\n    switch(action.type) {\n        case GET_ARTICLES:\n            return {\n                ...state,\n                articles: action.payload\n            }\n        case GET_FILTERED_ARTICLES:\n            return {\n                ...state,\n                filteredArticles: state.articles.filter(article => {\n                    const regex = new RegExp(`${action.payload}`, 'gi');\n                    return article.title.match(regex) || article.subtitle.match(regex);\n                })\n            }\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: []\n            }\n        default:\n            console.log(123)\n            return state; \n    }\n};\n\nexport default articlesReducer;"]},"metadata":{},"sourceType":"module"}