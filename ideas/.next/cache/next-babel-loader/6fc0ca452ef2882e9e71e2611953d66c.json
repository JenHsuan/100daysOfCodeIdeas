{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, Fragment, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport { selectArticlesState, selectPartialArticlesState, selectFilteredArticlesState, selectIsLoadingState } from './reducers/articlesReducer';\nimport { getArticles, setPartialArticles } from './actions/articlesAction';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Spinner } from 'react-bootstrap';\nimport Article from './Article';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer';\n\nconst ArticleList = () => {\n  const {\n    0: perPage,\n    1: setPerPage\n  } = useState(10);\n  const {\n    0: pageCount,\n    1: setPageCount\n  } = useState(0);\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(0);\n  const disPatch = useDispatch();\n  const articles = useSelector(selectArticlesState);\n  const filteredArticles = useSelector(selectFilteredArticlesState);\n  const partialArticles = useSelector(selectPartialArticlesState);\n  const isLoading = useSelector(selectIsLoadingState);\n  useEffect(() => {\n    disPatch(getArticles());\n  }, []);\n  useEffect(() => {\n    //console.log(articles)\n    const partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perPage).map(article => {\n      return __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n        key: article.id,\n        timeout: 500,\n        classNames: \"item\"\n      }, __jsx(Article, {\n        article: article\n      })));\n    }) : filteredArticles.slice(offset, offset + perPage).map(article => {\n      return __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n        key: article.id,\n        timeout: 500,\n        classNames: \"item\"\n      }, __jsx(Article, {\n        article: article\n      })));\n    });\n    console.log(partialData);\n    setPageCount(filteredArticles.length === 0 ? Math.ceil(articles.length / perPage) : Math.ceil(filteredArticles.length / perPage));\n    disPatch(setPartialArticles(partialData));\n  }, [articles]);\n  useEffect(() => {\n    console.log(filteredArticles);\n  }, [filteredArticles]);\n\n  const setPartialData = () => {\n    const partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perPage).map(article => {\n      return __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n        key: article.id,\n        timeout: 500,\n        classNames: \"item\"\n      }, __jsx(Article, {\n        article: article\n      })));\n    }) : filteredArticles.slice(offset, offset + perPage).map(article => {\n      return __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n        key: article.id,\n        timeout: 500,\n        classNames: \"item\"\n      }, __jsx(Article, {\n        article: article\n      })));\n    });\n    setPageCount(filteredArticles.length === 0 ? Math.ceil(articles.length / perPage) : Math.ceil(filteredArticles.length / perPage));\n    disPatch(setPartialArticles(partialData));\n  };\n\n  const handlePageSlected = e => {\n    setOffset(e.selected * perPage);\n    setPartialData();\n  };\n\n  return __jsx(\"div\", {\n    className: \"articles-hide-siderbar\"\n  }, __jsx(\"div\", {\n    className: \"articles-row row\"\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"articles-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\"))) : __jsx(Fragment, null, partialArticles)), isLoading === false && __jsx(ReactPaginate, {\n    previousLabel: \"prev\",\n    nextLabel: \"next\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: handlePageSlected,\n    containerClassName: \"pagination\",\n    subContainerClassName: \"pages pagination\",\n    activeClassName: \"active\"\n  }), isLoading === false && __jsx(Footer, null));\n};\n\nArticleList.getInitialProps = async () => {\n  let news;\n\n  try {\n    const disPatch = useDispatch();\n  } catch (err) {\n    news = [];\n  }\n\n  return {\n    news\n  };\n};\n\nexport default ArticleList;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/ArticleList.tsx"],"names":["React","useEffect","Fragment","useState","useDispatch","useSelector","ReactPaginate","selectArticlesState","selectPartialArticlesState","selectFilteredArticlesState","selectIsLoadingState","getArticles","setPartialArticles","CSSTransition","TransitionGroup","Spinner","Article","Footer","ArticleList","perPage","setPerPage","pageCount","setPageCount","offset","setOffset","disPatch","articles","filteredArticles","partialArticles","isLoading","partialData","length","slice","map","article","id","console","log","Math","ceil","setPartialData","handlePageSlected","e","selected","getInitialProps","news","err"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment, useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport {\n    selectArticlesState,\n    selectPartialArticlesState,\n    selectFilteredArticlesState,\n    selectIsLoadingState\n} from './reducers/articlesReducer';\n\nimport { \n    getArticles,\n    setPartialArticles\n} from './actions/articlesAction';\n\nimport {\n    CSSTransition,\n    TransitionGroup,\n} from 'react-transition-group';\n\nimport {Spinner} from 'react-bootstrap';\nimport Article from './Article'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer';\n\nconst ArticleList = () => {\n    const [perPage, setPerPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n    const disPatch = useDispatch();\n    const articles = useSelector(selectArticlesState);\n    const filteredArticles = useSelector(selectFilteredArticlesState);\n    const partialArticles = useSelector(selectPartialArticlesState);\n    const isLoading = useSelector(selectIsLoadingState);\n    \n    useEffect(()=> {\n        disPatch(getArticles());\n    \n    }, [])\n\n    useEffect(()=> {\n        //console.log(articles)\n        const partialData = filteredArticles.length === 0 ? \n        articles.slice(offset, offset + perPage).map(article => {\n            return (<TransitionGroup>\n             <CSSTransition key={article.id} timeout={500} classNames=\"item\">\n                 <Article article = {article}/>\n             </CSSTransition>\n         </TransitionGroup>)\n         }) : filteredArticles.slice(offset, offset + perPage).map(article => {\n             return (<TransitionGroup>\n             <CSSTransition key={article.id} timeout={500} classNames=\"item\">\n                 <Article article = {article}/>\n             </CSSTransition>\n         </TransitionGroup>)\n         });\n        console.log(partialData)\n        setPageCount(filteredArticles.length === 0 ? Math.ceil(articles.length/perPage) : Math.ceil(filteredArticles.length/perPage));\n        \n        disPatch(setPartialArticles(partialData));\n    }, [articles])\n\n    useEffect(()=> {\n        console.log(filteredArticles)\n    }, [filteredArticles])\n\n    const setPartialData = () =>  {\n        const partialData = filteredArticles.length === 0 ? \n        articles.slice(offset, offset + perPage).map(article => {\n           return (<TransitionGroup>\n            <CSSTransition key={article.id} timeout={500} classNames=\"item\">\n                <Article article = {article}/>\n            </CSSTransition>\n        </TransitionGroup>)\n        }) : filteredArticles.slice(offset, offset + perPage).map(article => {\n            return (<TransitionGroup>\n            <CSSTransition key={article.id} timeout={500} classNames=\"item\">\n                <Article article = {article}/>\n            </CSSTransition>\n        </TransitionGroup>)\n        });\n        setPageCount(filteredArticles.length === 0 ? Math.ceil(articles.length/perPage) : Math.ceil(filteredArticles.length/perPage));\n        disPatch(setPartialArticles(partialData));\n    }\n\n    const handlePageSlected = e => {\n        setOffset(e.selected * perPage);\n        setPartialData();\n    }\n\n    return (\n        <div className=\"articles-hide-siderbar\">\n            <div className=\"articles-row row\">\n                {isLoading === true ? (<div className='articles-spinner'>{\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                }</div>) : (\n                <Fragment>{\n                    partialArticles\n                }</Fragment>)}\n            </div>\n            {isLoading === false && (\n                <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={handlePageSlected}\n                containerClassName={\"pagination\"}\n                subContainerClassName={\"pages pagination\"}\n                activeClassName={\"active\"}/>\n            )}\n            {isLoading === false && <Footer/>}\n        </div>\n    )\n}\n\nArticleList.getInitialProps = async () => {\n    let news;\n    try {\n        const disPatch = useDispatch();    \n    } catch (err) {\n      news = [];\n    }\n  \n    return {\n        news\n    }\n  }\nexport default ArticleList;\n"]},"metadata":{},"sourceType":"module"}