{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, Fragment, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport { selectArticlesState, selectPartialArticlesState, selectFilteredArticlesState, selectIsLoadingState } from './reducers/articlesReducer';\nimport { getArticles, setPartialArticles } from './actions/articlesAction';\nimport { Spinner } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer';\n\nconst ArticleList = () => {\n  const {\n    0: perPage,\n    1: setPerPage\n  } = useState(10);\n  const {\n    0: pageCount,\n    1: setPageCount\n  } = useState(0);\n  const disPatch = useDispatch();\n  const articles = useSelector(selectArticlesState);\n  const filteredArticles = useSelector(selectFilteredArticlesState);\n  const partialArticles = useSelector(selectPartialArticlesState);\n  const isLoading = useSelector(selectIsLoadingState);\n  useEffect(() => {\n    disPatch(getArticles());\n  }, []);\n  useEffect(() => {\n    //console.log(articles)\n    const partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perPage) : filteredArticles.slice(offset, offset + perPage);\n    disPatch(setPartialArticles(partialData));\n  }, [articles]);\n  useEffect(() => {\n    console.log(filteredArticles);\n  }, [filteredArticles]);\n\n  const setPartialData = offset => {\n    const partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perPage) : filteredArticles.slice(offset, offset + perPage);\n    setPageCount(filteredArticles.length === 0 ? Math.ceil(articles.length / perPage) : Math.ceil(filteredArticles.length / perPage));\n    disPatch(setPartialArticles(partialData));\n  };\n\n  const handlePageSlected = e => {\n    var offset = e.selected * perPage;\n    setPartialData(offset);\n  };\n\n  return __jsx(\"div\", {\n    className: \"articles-hide-siderbar\"\n  }, __jsx(\"div\", {\n    className: \"articles-row row\"\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"articles-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\"))) : __jsx(Fragment, null, partialArticles)), isLoading === false && __jsx(ReactPaginate, {\n    previousLabel: \"prev\",\n    nextLabel: \"next\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: handlePageSlected,\n    containerClassName: \"pagination\",\n    subContainerClassName: \"pages pagination\",\n    activeClassName: \"active\"\n  }), isLoading === false && __jsx(Footer, null));\n};\n\nArticleList.getInitialProps = async () => {\n  let news;\n\n  try {\n    const disPatch = useDispatch();\n  } catch (err) {\n    news = [];\n  }\n\n  return {\n    news\n  };\n};\n\nexport default ArticleList;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/ArticleList.tsx"],"names":["React","useEffect","Fragment","useState","useDispatch","useSelector","ReactPaginate","selectArticlesState","selectPartialArticlesState","selectFilteredArticlesState","selectIsLoadingState","getArticles","setPartialArticles","Spinner","Footer","ArticleList","perPage","setPerPage","pageCount","setPageCount","disPatch","articles","filteredArticles","partialArticles","isLoading","partialData","length","slice","offset","console","log","setPartialData","Math","ceil","handlePageSlected","e","selected","getInitialProps","news","err"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment, useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport {\n    selectArticlesState,\n    selectPartialArticlesState,\n    selectFilteredArticlesState,\n    selectIsLoadingState\n} from './reducers/articlesReducer';\n\nimport { \n    getArticles,\n    setPartialArticles\n} from './actions/articlesAction';\n\nimport {\n    CSSTransition,\n    TransitionGroup,\n} from 'react-transition-group';\n\nimport {Spinner} from 'react-bootstrap';\nimport Article from './Article'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer';\n\nconst ArticleList = () => {\n    const [perPage, setPerPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const disPatch = useDispatch();\n    const articles = useSelector(selectArticlesState);\n    const filteredArticles = useSelector(selectFilteredArticlesState);\n    const partialArticles = useSelector(selectPartialArticlesState);\n    const isLoading = useSelector(selectIsLoadingState);\n    \n    useEffect(()=> {\n        disPatch(getArticles());\n    \n    }, [])\n\n    useEffect(()=> {\n        //console.log(articles)\n        const partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perPage) : filteredArticles.slice(offset, offset + perPage);\n        disPatch(setPartialArticles(partialData));\n    }, [articles])\n\n    useEffect(()=> {\n        console.log(filteredArticles)\n    }, [filteredArticles])\n\n    const setPartialData = offset =>  {\n        const partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perPage) : filteredArticles.slice(offset, offset + perPage);\n        setPageCount(filteredArticles.length === 0 ? Math.ceil(articles.length/perPage) : Math.ceil(filteredArticles.length/perPage));\n        disPatch(setPartialArticles(partialData));\n    }\n\n    const handlePageSlected = e => {\n        var offset = e.selected * perPage;\n        setPartialData(offset);\n    }\n\n    return (\n        <div className=\"articles-hide-siderbar\">\n            <div className=\"articles-row row\">\n                {isLoading === true ? (<div className='articles-spinner'>{\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                }</div>) : (\n                <Fragment>{\n                    partialArticles\n                }</Fragment>)}\n            </div>\n            {isLoading === false && (\n                <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={handlePageSlected}\n                containerClassName={\"pagination\"}\n                subContainerClassName={\"pages pagination\"}\n                activeClassName={\"active\"}/>\n            )}\n            {isLoading === false && <Footer/>}\n        </div>\n    )\n}\n\nArticleList.getInitialProps = async () => {\n    let news;\n    try {\n        const disPatch = useDispatch();    \n    } catch (err) {\n      news = [];\n    }\n  \n    return {\n        news\n    }\n  }\nexport default ArticleList;\n"]},"metadata":{},"sourceType":"module"}