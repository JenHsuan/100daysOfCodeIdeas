{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'; //import { GoogleLogin } from 'react-google-login';\n\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css';\nimport axios from 'axios';\nimport { Form, Spinner } from 'react-bootstrap';\nimport { selectShowPlannerState, selectErrorMessageState, selectLoadingState, selectUserIdState, selectLoginState } from './states/states';\nimport FormWrapper from '../components/FormWrapper';\nimport PropTypes from 'prop-types';\nimport { setErrorMessage, setLoading, setUserId, setBookmarks } from './actions/articlesAction';\n\nconst SignInForm = ({\n  responseFacebook,\n  ResponseGithubOnSuccess,\n  ResponseGithubOnFailure,\n  SetLogin\n}) => {\n  const disPatch = useDispatch();\n  const showPlanner = useSelector(selectShowPlannerState);\n  const errorMessage = useSelector(selectErrorMessageState);\n  const isLoading = useSelector(selectLoadingState);\n  const userId = useSelector(selectUserIdState);\n  const login = useSelector(selectLoginState);\n  const {\n    0: redirectUri,\n    1: setRedirectUri\n  } = useState('');\n  useEffect(() => {\n    setRedirectUri(window.location.href);\n  }, []);\n  const {\n    0: value,\n    1: setValue\n  } = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    username,\n    password\n  } = value;\n\n  const handleChange = name => e => {\n    setValue(_objectSpread(_objectSpread({}, value), {}, {\n      [name]: e.target.value.trim()\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(username);\n    console.log(password);\n\n    try {\n      disPatch(setLoading(true));\n      const res = await axios.post('/api/token-auth/', {\n        username: username,\n        password: password\n      });\n      console.log(res);\n      console.log(res[\"data\"][\"user\"][\"profile\"]);\n      const token = res[\"data\"][\"token\"];\n      const email = res[\"data\"][\"user\"][\"profile\"][\"email\"];\n      const id = res[\"data\"][\"user\"][\"id\"];\n      SetLogin(token, email, username, \"normal\");\n      disPatch(setUserId(id));\n      disPatch(setLoading(false));\n    } catch (error) {\n      disPatch(setLoading(false));\n      disPatch(setErrorMessage(error.message));\n    }\n  };\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const res = await axios.get(`api/profile/?reader=${userId}`);\n\n        if (res['error'] === undefined) {\n          console.log(res);\n          const bookmarksList = res['data']['bookmarks'].split(',');\n          console.log(bookmarksList.filter(bookmark => bookmark !== ''));\n          disPatch(setBookmarks(bookmarksList.filter(bookmark => bookmark !== '')));\n          localStorage.setItem(\"bookmarks\", res['data']['bookmarks'].trim());\n          const finishedArticlesList = res['data']['finishedArticles'].split(',');\n          disPatch(setBookmarks(finishedArticlesList.filter(finishedArticle => finishedArticle !== '')));\n          localStorage.setItem(\"finishedArticles\", res['data']['finishedArticles'].trim());\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (login) {\n      fetchProfile();\n    }\n  }, [userId, login]);\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: `${showPlanner === true ? 'signinform-move-left signinform' : 'signinform'}`\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"signinform-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\")))) : __jsx(\"div\", {\n    className: \"signinform-grid-box\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Welcome back!\"), __jsx(FacebookLogin, {\n    cssClass: \"fb-btn\",\n    appId: \"240314257268798\",\n    autoLoad: false,\n    fields: \"name,email,picture\",\n    callback: responseFacebook,\n    render: renderProps => __jsx(\"button\", {\n      onClick: renderProps.onClick,\n      className: \"fb-btn\"\n    }, \"Facebook\")\n  }), __jsx(GitHubLogin, {\n    className: \"github-btn\",\n    clientId: \"51b1a8ee5b7cad1e6a85\",\n    redirectUri: redirectUri,\n    onSuccess: ResponseGithubOnSuccess,\n    onFailure: ResponseGithubOnFailure,\n    buttonText: \"Github\"\n  }), __jsx(\"div\", {\n    className: \"split-line\"\n  }, \"Or signin by username\"), __jsx(\"div\", {\n    className: \"signin-form\"\n  }, __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\"\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Username\",\n    className: \"username\",\n    onChange: handleChange('username')\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\"\n  }, __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"password\",\n    onChange: handleChange('password')\n  })), __jsx(\"button\", {\n    className: \"btn-submit\"\n  }, \"Sign in\"))), __jsx(\"div\", {\n    className: \"messages\"\n  }, errorMessage))));\n};\n\nSignInForm.propTypes = {\n  responseFacebook: PropTypes.func.isRequired,\n  ResponseGithubOnSuccess: PropTypes.func.isRequired,\n  ResponseGithubOnFailure: PropTypes.func.isRequired,\n  SetLogin: PropTypes.func.isRequired\n};\nexport default FormWrapper(SignInForm);","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/SignInForm.tsx"],"names":["React","Fragment","useState","useEffect","useDispatch","useSelector","FacebookLogin","GitHubLogin","axios","Form","Spinner","selectShowPlannerState","selectErrorMessageState","selectLoadingState","selectUserIdState","selectLoginState","FormWrapper","PropTypes","setErrorMessage","setLoading","setUserId","setBookmarks","SignInForm","responseFacebook","ResponseGithubOnSuccess","ResponseGithubOnFailure","SetLogin","disPatch","showPlanner","errorMessage","isLoading","userId","login","redirectUri","setRedirectUri","window","location","href","value","setValue","username","password","handleChange","name","e","target","trim","handleSubmit","preventDefault","console","log","res","post","token","email","id","error","message","fetchProfile","get","undefined","bookmarksList","split","filter","bookmark","localStorage","setItem","finishedArticlesList","finishedArticle","renderProps","onClick","propTypes","func","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,uDAA1B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAO,yBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,OAAd,QAA4B,iBAA5B;AACA,SACIC,sBADJ,EAEIC,uBAFJ,EAGIC,kBAHJ,EAIIC,iBAJJ,EAKIC,gBALJ,QAMO,iBANP;AAQA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,eADJ,EAEIC,UAFJ,EAGIC,SAHJ,EAIIC,YAJJ,QAOO,0BAPP;;AASA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,gBAAD;AAChBC,EAAAA,uBADgB;AAEhBC,EAAAA,uBAFgB;AAGhBC,EAAAA;AAHgB,CAAD,KAGD;AAEd,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAMwB,WAAW,GAAGvB,WAAW,CAACM,sBAAD,CAA/B;AACA,QAAMkB,YAAY,GAAGxB,WAAW,CAACO,uBAAD,CAAhC;AACA,QAAMkB,SAAS,GAAGzB,WAAW,CAACQ,kBAAD,CAA7B;AACA,QAAMkB,MAAM,GAAG1B,WAAW,CAACS,iBAAD,CAA1B;AACA,QAAMkB,KAAK,GAAG3B,WAAW,CAACU,gBAAD,CAAzB;AACA,QAAM;AAAA,OAACkB,WAAD;AAAA,OAAcC;AAAd,MAAgChC,QAAQ,CAAC,EAAD,CAA9C;AAGAC,EAAAA,SAAS,CAAC,MAAK;AACX+B,IAAAA,cAAc,CAACC,MAAM,CAACC,QAAP,CAAgBC,IAAjB,CAAd;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBrC,QAAQ,CAAC;AAC/BsC,IAAAA,QAAQ,EAAC,EADsB;AAE/BC,IAAAA,QAAQ,EAAC;AAFsB,GAAD,CAAlC;AAKA,QAAM;AAACD,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBH,KAA7B;;AAEA,QAAMI,YAAY,GAAGC,IAAI,IAAIC,CAAC,IAAI;AAChCL,IAAAA,QAAQ,iCAAKD,KAAL;AAAY,OAACK,IAAD,GAAQC,CAAC,CAACC,MAAF,CAASP,KAAT,CAAeQ,IAAf;AAApB,OAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAMH,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;;AACA,QAAI;AACAd,MAAAA,QAAQ,CAACR,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMgC,GAAG,GAAG,MAAM3C,KAAK,CAAC4C,IAAN,CAAW,kBAAX,EAA+B;AAC7CZ,QAAAA,QAAQ,EAAEA,QADmC;AAE7CC,QAAAA,QAAQ,EAAEA;AAFmC,OAA/B,CAAlB;AAIAQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAAC,MAAD,CAAH,CAAY,MAAZ,EAAoB,SAApB,CAAZ;AACA,YAAME,KAAK,GAAGF,GAAG,CAAC,MAAD,CAAH,CAAY,OAAZ,CAAd;AACA,YAAMG,KAAK,GAAGH,GAAG,CAAC,MAAD,CAAH,CAAY,MAAZ,EAAoB,SAApB,EAA+B,OAA/B,CAAd;AACA,YAAMI,EAAE,GAAGJ,GAAG,CAAC,MAAD,CAAH,CAAY,MAAZ,EAAoB,IAApB,CAAX;AACAzB,MAAAA,QAAQ,CAAC2B,KAAD,EAAQC,KAAR,EAAed,QAAf,EAAyB,QAAzB,CAAR;AACAb,MAAAA,QAAQ,CAACP,SAAS,CAACmC,EAAD,CAAV,CAAR;AACA5B,MAAAA,QAAQ,CAACR,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAdD,CAcE,OAAOqC,KAAP,EAAc;AACZ7B,MAAAA,QAAQ,CAACR,UAAU,CAAC,KAAD,CAAX,CAAR;AACAQ,MAAAA,QAAQ,CAACT,eAAe,CAACsC,KAAK,CAACC,OAAP,CAAhB,CAAR;AACH;AACJ,GAtBD;;AAwBAtD,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMuD,YAAY,GAAG,YAAY;AAC7B,UAAI;AACA,cAAMP,GAAG,GAAG,MAAM3C,KAAK,CAACmD,GAAN,CAAW,uBAAsB5B,MAAO,EAAxC,CAAlB;;AACA,YAAIoB,GAAG,CAAC,OAAD,CAAH,KAAiBS,SAArB,EAAgC;AAC5BX,UAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,gBAAMU,aAAa,GAAGV,GAAG,CAAC,MAAD,CAAH,CAAY,WAAZ,EAAyBW,KAAzB,CAA+B,GAA/B,CAAtB;AACAb,UAAAA,OAAO,CAACC,GAAR,CAAYW,aAAa,CAACE,MAAd,CAAqBC,QAAQ,IAAIA,QAAQ,KAAK,EAA9C,CAAZ;AACArC,UAAAA,QAAQ,CAACN,YAAY,CAACwC,aAAa,CAACE,MAAd,CAAqBC,QAAQ,IAAIA,QAAQ,KAAK,EAA9C,CAAD,CAAb,CAAR;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCf,GAAG,CAAC,MAAD,CAAH,CAAY,WAAZ,EAAyBL,IAAzB,EAAlC;AAEA,gBAAMqB,oBAAoB,GAAGhB,GAAG,CAAC,MAAD,CAAH,CAAY,kBAAZ,EAAgCW,KAAhC,CAAsC,GAAtC,CAA7B;AACAnC,UAAAA,QAAQ,CAACN,YAAY,CAAC8C,oBAAoB,CAACJ,MAArB,CAA4BK,eAAe,IAAIA,eAAe,KAAK,EAAnE,CAAD,CAAb,CAAR;AACAH,UAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCf,GAAG,CAAC,MAAD,CAAH,CAAY,kBAAZ,EAAgCL,IAAhC,EAAzC;AAEH;AACJ,OAdD,CAcE,OAAMU,KAAN,EAAa;AACXP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACJ,KAlBD;;AAoBA,QAAIxB,KAAJ,EAAW;AACP0B,MAAAA,YAAY;AACf;AACJ,GAxBQ,EAwBN,CAAC3B,MAAD,EAASC,KAAT,CAxBM,CAAT;AA0BA,SACI,MAAC,QAAD,QACA;AAAK,IAAA,SAAS,EAAG,GAAEJ,WAAW,KAAK,IAAhB,GAAuB,iCAAvB,GAA2D,YAAa;AAA3F,KACSE,SAAS,KAAK,IAAd,GACG;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC;AAAjC,KACI;AAAM,IAAA,SAAS,EAAC;AAAhB,kBADJ,CADJ,CADJ,CADH,GASG;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,qBADJ,EAEI,MAAC,aAAD;AACI,IAAA,QAAQ,EAAC,QADb;AAEI,IAAA,KAAK,EAAC,iBAFV;AAGI,IAAA,QAAQ,EAAE,KAHd;AAII,IAAA,MAAM,EAAC,oBAJX;AAKI,IAAA,QAAQ,EAAEP,gBALd;AAMI,IAAA,MAAM,EAAE8C,WAAW,IACf;AAAQ,MAAA,OAAO,EAAEA,WAAW,CAACC,OAA7B;AAAsC,MAAA,SAAS,EAAC;AAAhD;AAPR,IAFJ,EAWI,MAAC,WAAD;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,QAAQ,EAAC,sBAFb;AAGI,IAAA,WAAW,EAAErC,WAHjB;AAII,IAAA,SAAS,EAAET,uBAJf;AAKI,IAAA,SAAS,EAAEC,uBALf;AAMI,IAAA,UAAU,EAAC;AANf,IAXJ,EAkBI;AAAK,IAAA,SAAS,EAAC;AAAf,6BAlBJ,EAmBI;AAAK,IAAA,SAAS,EAAC;AAAf,KACA,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAIsB;AAAlB,KACI,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC;AAAtB,KACA,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,gBAAtC;AAAuD,IAAA,SAAS,EAAC,UAAjE;AAA4E,IAAA,QAAQ,EAAEL,YAAY,CAAC,UAAD;AAAlG,IADA,CADJ,EAIA,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC;AAAtB,KACI,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,WAAW,EAAC,UAA1C;AAAqD,IAAA,SAAS,EAAC,UAA/D;AAA0E,IAAA,QAAQ,EAAEA,YAAY,CAAC,UAAD;AAAhG,IADJ,CAJA,EAOA;AAAQ,IAAA,SAAS,EAAC;AAAlB,eAPA,CADA,CAnBJ,EAgCJ;AAAK,IAAA,SAAS,EAAC;AAAf,KAA2Bb,YAA3B,CAhCI,CAVZ,CADA,CADJ;AAkDH,CAjID;;AAmIAP,UAAU,CAACiD,SAAX,GAAuB;AACnBhD,EAAAA,gBAAgB,EAAEN,SAAS,CAACuD,IAAV,CAAeC,UADd;AAEnBjD,EAAAA,uBAAuB,EAAEP,SAAS,CAACuD,IAAV,CAAeC,UAFrB;AAGnBhD,EAAAA,uBAAuB,EAAER,SAAS,CAACuD,IAAV,CAAeC,UAHrB;AAInB/C,EAAAA,QAAQ,EAAET,SAAS,CAACuD,IAAV,CAAeC;AAJN,CAAvB;AAMA,eAAezD,WAAW,CAACM,UAAD,CAA1B","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n//import { GoogleLogin } from 'react-google-login';\nimport GitHubLogin from 'react-github-login';\nimport '.././css/signinform.css'\nimport axios from 'axios';\nimport {Form, Spinner} from 'react-bootstrap';\nimport {\n    selectShowPlannerState,\n    selectErrorMessageState,\n    selectLoadingState,\n    selectUserIdState,\n    selectLoginState\n} from './states/states';\n\nimport FormWrapper from '../components/FormWrapper'\nimport PropTypes from 'prop-types'\nimport { \n    setErrorMessage,\n    setLoading,\n    setUserId,\n    setBookmarks,\n    setFinishedArticles,\n    setPlanner\n} from './actions/articlesAction';\n\nconst SignInForm = ({responseFacebook,\n    ResponseGithubOnSuccess,\n    ResponseGithubOnFailure,\n    SetLogin}) => {\n    \n    const disPatch = useDispatch();\n    const showPlanner = useSelector(selectShowPlannerState);\n    const errorMessage = useSelector(selectErrorMessageState);\n    const isLoading = useSelector(selectLoadingState);\n    const userId = useSelector(selectUserIdState);\n    const login = useSelector(selectLoginState);\n    const [redirectUri, setRedirectUri] = useState('')\n    \n\n    useEffect(()=> {\n        setRedirectUri(window.location.href)\n    }, [])\n    \n    const [value, setValue] = useState({\n        username:'',\n        password:''\n    })\n\n    const {username, password} = value;\n\n    const handleChange = name => e => {\n      setValue({...value, [name]: e.target.value.trim()})\n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        console.log(username)\n        console.log(password)\n        try {\n            disPatch(setLoading(true));\n            const res = await axios.post('/api/token-auth/', {\n                username: username,\n                password: password\n            });\n            console.log(res)\n            console.log(res[\"data\"][\"user\"][\"profile\"])\n            const token = res[\"data\"][\"token\"];\n            const email = res[\"data\"][\"user\"][\"profile\"][\"email\"];\n            const id = res[\"data\"][\"user\"][\"id\"];\n            SetLogin(token, email, username, \"normal\");\n            disPatch(setUserId(id))\n            disPatch(setLoading(false));\n        } catch (error) {\n            disPatch(setLoading(false));\n            disPatch(setErrorMessage(error.message))\n        }\n    }\n\n    useEffect(()=> {\n        const fetchProfile = async () => {\n            try {\n                const res = await axios.get(`api/profile/?reader=${userId}`);\n                if (res['error'] === undefined) {\n                    console.log(res)\n                    const bookmarksList = res['data']['bookmarks'].split(',');\n                    console.log(bookmarksList.filter(bookmark => bookmark !== ''))\n                    disPatch(setBookmarks(bookmarksList.filter(bookmark => bookmark !== '')))\n                    localStorage.setItem(\"bookmarks\", res['data']['bookmarks'].trim());\n                    \n                    const finishedArticlesList = res['data']['finishedArticles'].split(',');\n                    disPatch(setBookmarks(finishedArticlesList.filter(finishedArticle => finishedArticle !== '')))\n                    localStorage.setItem(\"finishedArticles\", res['data']['finishedArticles'].trim());\n                \n                }\n            } catch(error) {\n                console.log(error)\n            }\n        };\n        \n        if (login) {\n            fetchProfile();\n        }\n    }, [userId, login])\n\n    return (\n        <Fragment>\n        <div className={`${showPlanner === true ? 'signinform-move-left signinform' : 'signinform'}`} >\n                {isLoading === true ? (\n                    <div className=\"signinform-grid-box\">\n                        <div className=\"signinform-spinner\">\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                        </div>\n                    </div>\n                ):(\n                    <div className=\"signinform-grid-box\">\n                        <div className=\"title\">Welcome back!</div>\n                        <FacebookLogin\n                            cssClass=\"fb-btn\"\n                            appId=\"240314257268798\"\n                            autoLoad={false}\n                            fields=\"name,email,picture\"\n                            callback={responseFacebook}\n                            render={renderProps => (\n                                <button onClick={renderProps.onClick} className=\"fb-btn\">Facebook</button>\n                            )}/>\n                        <GitHubLogin \n                            className=\"github-btn\"\n                            clientId=\"51b1a8ee5b7cad1e6a85\"\n                            redirectUri={redirectUri}\n                            onSuccess={ResponseGithubOnSuccess}\n                            onFailure={ResponseGithubOnFailure}\n                            buttonText=\"Github\"/>\n                        <div className=\"split-line\">Or signin by username</div>\n                        <div className=\"signin-form\">\n                        <Form onSubmit = {handleSubmit}>\n                            <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control type=\"text\" placeholder=\"Enter Username\" className=\"username\" onChange={handleChange('username')} />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Control type=\"password\" placeholder=\"Password\" className=\"password\" onChange={handleChange('password')}/>\n                        </Form.Group>\n                        <button className=\"btn-submit\">\n                            Sign in\n                        </button>\n                    </Form>\n                </div>\n                <div className=\"messages\">{errorMessage}</div>\n            </div>\n                )}\n        </div>\n        </Fragment>    \n    )\n}\n\nSignInForm.propTypes = {\n    responseFacebook: PropTypes.func.isRequired,\n    ResponseGithubOnSuccess: PropTypes.func.isRequired,\n    ResponseGithubOnFailure: PropTypes.func.isRequired,\n    SetLogin: PropTypes.func.isRequired\n}\nexport default FormWrapper(SignInForm)\n"]},"metadata":{},"sourceType":"module"}