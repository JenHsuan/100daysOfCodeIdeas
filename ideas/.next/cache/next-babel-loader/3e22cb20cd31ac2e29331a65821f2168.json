{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectArticlesState, selectFilteredArticlesState, selectIsLoadingState } from './reducers/articlesReducer';\nimport { getArticles } from './actions/articlesAction';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Spinner } from 'react-bootstrap';\nimport Article from './Article';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar ArticleList = function ArticleList() {\n  _s();\n\n  var disPatch = useDispatch();\n  var articles = useSelector(selectArticlesState);\n  var filteredArticles = useSelector(selectFilteredArticlesState);\n  var isLoading = useSelector(selectIsLoadingState);\n  useEffect(function () {\n    disPatch(getArticles());\n  }, []);\n  useEffect(function () {//console.log(articles)\n  }, [articles]);\n  useEffect(function () {\n    console.log(filteredArticles);\n  }, [filteredArticles]);\n  return __jsx(\"div\", {\n    className: \"articles\"\n  }, __jsx(\"div\", {\n    className: \"container articles\",\n    id: \"menu-container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"articles-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\"))) : __jsx(Fragment, null, filteredArticles.length !== 0 ? filteredArticles.map(function (filteredArticle) {\n    return __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n      key: filteredArticle.id,\n      timeout: 500,\n      classNames: \"item\"\n    }, __jsx(Article, {\n      article: filteredArticle\n    })));\n  }) : articles.map(function (article) {\n    return __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n      key: article.id,\n      timeout: 500,\n      classNames: \"item\"\n    }, __jsx(Article, {\n      article: article\n    })));\n  })))));\n};\n\n_s(ArticleList, \"52+lQgAchP1382qffweZk9Uyu8U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ArticleList;\nArticleList.getInitialProps = /*#__PURE__*/_asyncToGenerator(_s2( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var news, disPatch;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _s2();\n\n          try {\n            disPatch = useDispatch();\n          } catch (err) {\n            news = [];\n          }\n\n          return _context.abrupt(\"return\", {\n            news: news\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}), \"6vQdo3ew2bItI8rZXVwRbIDkI60=\", false, function () {\n  return [useDispatch];\n}));\nexport default ArticleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleList\");","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/ArticleList.tsx"],"names":["React","useEffect","Fragment","useDispatch","useSelector","selectArticlesState","selectFilteredArticlesState","selectIsLoadingState","getArticles","CSSTransition","TransitionGroup","Spinner","Article","ArticleList","disPatch","articles","filteredArticles","isLoading","console","log","length","map","filteredArticle","id","article","getInitialProps","err","news"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,mBADJ,EAEIC,2BAFJ,EAGIC,oBAHJ,QAIO,4BAJP;AAMA,SACIC,WADJ,QAEO,0BAFP;AAIA,SACIC,aADJ,EAEIC,eAFJ,QAGO,wBAHP;AAKA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,sCAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACtB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,QAAQ,GAAGX,WAAW,CAACC,mBAAD,CAA5B;AACA,MAAMW,gBAAgB,GAAGZ,WAAW,CAACE,2BAAD,CAApC;AACA,MAAMW,SAAS,GAAGb,WAAW,CAACG,oBAAD,CAA7B;AAEAN,EAAAA,SAAS,CAAC,YAAK;AACXa,IAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAP,EAAAA,SAAS,CAAC,YAAK,CACX;AACH,GAFQ,EAEN,CAACc,QAAD,CAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,YAAK;AACXiB,IAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AACH,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,EAAE,EAAC;AAAvC,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKC,SAAS,KAAK,IAAd,GAAsB;AAAK,IAAA,SAAS,EAAC;AAAf,KACnB,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC;AAAjC,KACI;AAAM,IAAA,SAAS,EAAC;AAAhB,kBADJ,CADmB,CAAtB,GAKD,MAAC,QAAD,QACID,gBAAgB,CAACI,MAAjB,KAA4B,CAA5B,GAAgCJ,gBAAgB,CAACK,GAAjB,CAAqB,UAAAC,eAAe;AAAA,WAC/D,MAAC,eAAD,QACG,MAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,eAAe,CAACC,EAApC;AAAwC,MAAA,OAAO,EAAE,GAAjD;AAAsD,MAAA,UAAU,EAAC;AAAjE,OACI,MAAC,OAAD;AAAU,MAAA,OAAO,EAAID;AAArB,MADJ,CADH,CAD+D;AAAA,GAApC,CAAhC,GAMGP,QAAQ,CAACM,GAAT,CAAa,UAAAG,OAAO;AAAA,WAClB,MAAC,eAAD,QACG,MAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,OAAO,CAACD,EAA5B;AAAgC,MAAA,OAAO,EAAE,GAAzC;AAA8C,MAAA,UAAU,EAAC;AAAzD,OACI,MAAC,OAAD;AAAS,MAAA,OAAO,EAAIC;AAApB,MADJ,CADH,CADkB;AAAA,GAApB,CAPP,CANJ,CADJ,CADA,CADJ;AA2BH,CA7CD;;GAAMX,W;UACeV,W,EACAC,W,EACQA,W,EACPA,W;;;KAJhBS,W;AA+CNA,WAAW,CAACY,eAAZ,6EAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAE1B,cAAI;AACMX,YAAAA,QADN,GACiBX,WAAW,EAD5B;AAEH,WAFD,CAEE,OAAOuB,GAAP,EAAY;AACZC,YAAAA,IAAI,GAAG,EAAP;AACD;;AANyB,2CAQnB;AACHA,YAAAA,IAAI,EAAJA;AADG,WARmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;AAAA,UAGyBxB,WAHzB;AAAA;AAYA,eAAeU,WAAf","sourcesContent":["import React, {useEffect, Fragment} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectArticlesState,\n    selectFilteredArticlesState,\n    selectIsLoadingState\n} from './reducers/articlesReducer';\n\nimport { \n    getArticles\n} from './actions/articlesAction';\n\nimport {\n    CSSTransition,\n    TransitionGroup,\n} from 'react-transition-group';\n\nimport {Spinner} from 'react-bootstrap';\nimport Article from './Article'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst ArticleList = () => {\n    const disPatch = useDispatch();\n    const articles = useSelector(selectArticlesState);\n    const filteredArticles = useSelector(selectFilteredArticlesState);\n    const isLoading = useSelector(selectIsLoadingState);\n    \n    useEffect(()=> {\n        disPatch(getArticles());\n    }, [])\n\n    useEffect(()=> {\n        //console.log(articles)\n    }, [articles])\n\n    useEffect(()=> {\n        console.log(filteredArticles)\n    }, [filteredArticles])\n\n    return (\n        <div className=\"articles\">\n        <div className=\"container articles\" id=\"menu-container\">\n            <div className=\"row\">\n                {isLoading === true ? (<div className='articles-spinner'>{\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                }</div>) : (\n                <Fragment>{\n                    filteredArticles.length !== 0 ? filteredArticles.map(filteredArticle=>\n                        (<TransitionGroup>\n                            <CSSTransition key={filteredArticle.id} timeout={500} classNames=\"item\">\n                                <Article  article = {filteredArticle}/>\n                            </CSSTransition>\n                        </TransitionGroup>)\n                    ): articles.map(article=>\n                        (<TransitionGroup>\n                            <CSSTransition key={article.id} timeout={500} classNames=\"item\">\n                                <Article article = {article}/>\n                            </CSSTransition>\n                        </TransitionGroup>))\n                }</Fragment>)}\n            </div>\n        </div>\n        </div>\n    )\n}\n\nArticleList.getInitialProps = async () => {\n    let news;\n    try {\n        const disPatch = useDispatch();    \n    } catch (err) {\n      news = [];\n    }\n  \n    return {\n        news\n    }\n  }\nexport default ArticleList;\n"]},"metadata":{},"sourceType":"module"}