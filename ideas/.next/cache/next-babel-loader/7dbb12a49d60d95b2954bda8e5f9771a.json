{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport { selectArticlesState, selectPartialArticlesState, selectFilteredArticlesState, selectIsLoadingState, selectOffsetState, selectPageCountState, selectPerpageState } from './reducers/articlesReducer';\nimport { getArticles, setPartialArticles, setOffset } from './actions/articlesAction';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Spinner } from 'react-bootstrap';\nimport Article from './Article';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer';\n\nconst ArticleList = () => {\n  const disPatch = useDispatch();\n  const articles = useSelector(selectArticlesState);\n  const filteredArticles = useSelector(selectFilteredArticlesState);\n  const partialArticles = useSelector(selectPartialArticlesState);\n  const isLoading = useSelector(selectIsLoadingState);\n  const perpage = useSelector(selectPerpageState);\n  const pageCount = useSelector(selectPageCountState);\n  const offset = useSelector(selectOffsetState);\n  useEffect(() => {\n    disPatch(getArticles());\n  }, []);\n  useEffect(() => {\n    //console.log(articles)\n    const partialData = articles.slice(offset, offset + perpage);\n    disPatch(setPartialArticles(partialData));\n  }, [articles]);\n  useEffect(() => {\n    console.log(filteredArticles);\n  }, [filteredArticles]);\n\n  const setPartialData = () => {\n    const partialData = filteredArticles.length === 0 ? articles.slice(offset, offset + perpage).map(article => __jsx(Article, {\n      article: article\n    })) : filteredArticles.slice(offset, offset + perpage).map(article => __jsx(Article, {\n      article: article\n    }));\n    disPatch(setPartialArticles(partialData));\n  };\n\n  const handlePageSlected = e => {\n    disPatch(setOffset(e.selected * perpage));\n    var count = filteredArticles.length === 0 ? Math.ceil(articles.length / perPage) : Math.ceil(filteredArticles.length / perPage);\n    disPatch(setPageCount(count));\n    setPartialData();\n  };\n\n  return __jsx(\"div\", {\n    className: \"articles-hide-siderbar\"\n  }, __jsx(\"div\", {\n    className: \"articles-row row\"\n  }, isLoading === true ? __jsx(\"div\", {\n    className: \"articles-spinner\"\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\"))) : __jsx(Fragment, null, partialArticles.map(article => __jsx(TransitionGroup, null, __jsx(CSSTransition, {\n    key: article.id,\n    timeout: 500,\n    classNames: \"item\"\n  }, __jsx(Article, {\n    article: article\n  })))))), isLoading === false && __jsx(ReactPaginate, {\n    previousLabel: \"prev\",\n    nextLabel: \"next\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: handlePageSlected,\n    containerClassName: \"pagination\",\n    subContainerClassName: \"pages pagination\",\n    activeClassName: \"active\"\n  }), isLoading === false && __jsx(Footer, null));\n};\n\nArticleList.getInitialProps = async () => {\n  let news;\n\n  try {\n    const disPatch = useDispatch();\n  } catch (err) {\n    news = [];\n  }\n\n  return {\n    news\n  };\n};\n\nexport default ArticleList;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/ArticleList.tsx"],"names":["React","useEffect","Fragment","useDispatch","useSelector","ReactPaginate","selectArticlesState","selectPartialArticlesState","selectFilteredArticlesState","selectIsLoadingState","selectOffsetState","selectPageCountState","selectPerpageState","getArticles","setPartialArticles","setOffset","CSSTransition","TransitionGroup","Spinner","Article","Footer","ArticleList","disPatch","articles","filteredArticles","partialArticles","isLoading","perpage","pageCount","offset","partialData","slice","console","log","setPartialData","length","map","article","handlePageSlected","e","selected","count","Math","ceil","perPage","setPageCount","id","getInitialProps","news","err"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment, useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport {\n    selectArticlesState,\n    selectPartialArticlesState,\n    selectFilteredArticlesState,\n    selectIsLoadingState,\n    selectOffsetState,\n    selectPageCountState,\n    selectPerpageState\n} from './reducers/articlesReducer';\n\nimport { \n    getArticles,\n    setPartialArticles,\n    setOffset,\n    SetPageCount\n} from './actions/articlesAction';\n\nimport {\n    CSSTransition,\n    TransitionGroup,\n} from 'react-transition-group';\n\nimport {Spinner} from 'react-bootstrap';\nimport Article from './Article'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer';\n\nconst ArticleList = () => {\n    const disPatch = useDispatch();\n    const articles = useSelector(selectArticlesState);\n    const filteredArticles = useSelector(selectFilteredArticlesState);\n    const partialArticles = useSelector(selectPartialArticlesState);\n    const isLoading = useSelector(selectIsLoadingState);\n    const perpage = useSelector(selectPerpageState);\n    const pageCount = useSelector(selectPageCountState);\n    const offset = useSelector(selectOffsetState);\n    \n    useEffect(()=> {\n        disPatch(getArticles());\n    \n    }, [])\n\n    useEffect(()=> {\n        //console.log(articles)\n        const partialData = articles.slice(offset, offset + perpage)\n        disPatch(setPartialArticles(partialData));\n    }, [articles])\n\n    useEffect(()=> {\n        console.log(filteredArticles)\n    }, [filteredArticles])\n\n    const setPartialData = () =>  {\n        const partialData = filteredArticles.length === 0 ? \n        articles.slice(offset, offset + perpage).map(article => <\n            Article article = {article}/>\n         ) : filteredArticles.slice(offset, offset + perpage).map(article => \n             <Article article = {article}/>\n         );\n        disPatch(setPartialArticles(partialData));\n    }\n\n    const handlePageSlected = e => {\n        disPatch(setOffset(e.selected * perpage)); \n        var count = filteredArticles.length === 0 ? \n        Math.ceil(articles.length / perPage) : Math.ceil(filteredArticles.length / perPage);\n        disPatch(setPageCount(count));\n        setPartialData();\n    }\n\n    return (\n        <div className=\"articles-hide-siderbar\">\n            <div className=\"articles-row row\">\n                {isLoading === true ? (<div className='articles-spinner'>{\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                }</div>) : (\n                <Fragment>{\n                    partialArticles.map(article=>\n                        (<TransitionGroup>\n                            <CSSTransition key={article.id} timeout={500} classNames=\"item\">\n                                <Article article = {article}/>\n                            </CSSTransition>\n                        </TransitionGroup>))\n                }</Fragment>)}\n            </div>\n            {isLoading === false && (\n                <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={handlePageSlected}\n                containerClassName={\"pagination\"}\n                subContainerClassName={\"pages pagination\"}\n                activeClassName={\"active\"}/>\n            )}\n            {isLoading === false && <Footer/>}\n        </div>\n    )\n}\n\nArticleList.getInitialProps = async () => {\n    let news;\n    try {\n        const disPatch = useDispatch();    \n    } catch (err) {\n      news = [];\n    }\n  \n    return {\n        news\n    }\n  }\nexport default ArticleList;\n"]},"metadata":{},"sourceType":"module"}