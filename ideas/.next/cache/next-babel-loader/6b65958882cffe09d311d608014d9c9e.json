{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, createRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredArticlesState, selectFilterTextState } from './states/states';\nimport { getFilteredArticles, clearFilter } from './actions/articlesAction';\nimport Router, { useRouter } from 'next/router';\n\nvar ArticleSearchBar = function ArticleSearchBar() {\n  _s();\n\n  var text = createRef();\n  var router = useRouter();\n  var disPatch = useDispatch();\n  var filteredArticles = useSelector(selectFilteredArticlesState);\n  var filterText = useSelector(selectFilterTextState);\n  useEffect(function () {\n    if (filterText.length !== 0) {\n      text.current.value = filterText;\n    }\n  }, []);\n\n  var onChange = function onChange(e) {\n    console.log(e.target.value);\n\n    if (text.current.value !== '') {\n      disPatch(getFilteredArticles(e.target.value));\n\n      if (router.pathname !== '/') {\n        Router.push(\"/\");\n      }\n    } else {\n      disPatch(clearFilter());\n    }\n  };\n\n  return __jsx(\"input\", {\n    className: \"article-searchbar\",\n    ref: text,\n    type: \"text\",\n    placeholder: \"ex, ReactJS, next.js, Golang...\",\n    onChange: onChange\n  });\n};\n\n_s(ArticleSearchBar, \"hCsHIQ+7ZUX44eni7MaiBjzg6q4=\", false, function () {\n  return [useRouter, useDispatch, useSelector, useSelector];\n});\n\n_c = ArticleSearchBar;\nexport default ArticleSearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleSearchBar\");","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/ArticleSearchBar.tsx"],"names":["React","useEffect","createRef","useDispatch","useSelector","selectFilteredArticlesState","selectFilterTextState","getFilteredArticles","clearFilter","Router","useRouter","ArticleSearchBar","text","router","disPatch","filteredArticles","filterText","length","current","value","onChange","e","console","log","target","pathname","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,2BADJ,EAEIC,qBAFJ,QAGO,iBAHP;AAIA,SACIC,mBADJ,EAEIC,WAFJ,QAEuB,0BAFvB;AAGA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC3B,MAAMC,IAAI,GAAGV,SAAS,EAAtB;AACA,MAAMW,MAAM,GAAGH,SAAS,EAAxB;AACA,MAAMI,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,gBAAgB,GAAGX,WAAW,CAACC,2BAAD,CAApC;AACA,MAAMW,UAAU,GAAGZ,WAAW,CAACE,qBAAD,CAA9B;AAGAL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIe,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AACzBL,MAAAA,IAAI,CAACM,OAAL,CAAaC,KAAb,GAAqBH,UAArB;AACH;AACJ,GAJQ,EAIP,EAJO,CAAT;;AAOA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC,EAAI;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASL,KAArB;;AACA,QAAIP,IAAI,CAACM,OAAL,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC3BL,MAAAA,QAAQ,CAACP,mBAAmB,CAACc,CAAC,CAACG,MAAF,CAASL,KAAV,CAApB,CAAR;;AACA,UAAIN,MAAM,CAACY,QAAP,KAAoB,GAAxB,EAA6B;AACzBhB,QAAAA,MAAM,CAACiB,IAAP;AACH;AACJ,KALD,MAKO;AACHZ,MAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACH;AACJ,GAVD;;AAYA,SACI;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAqC,IAAA,GAAG,EAAEI,IAA1C;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,WAAW,EAAC,iCAAxE;AAA0G,IAAA,QAAQ,EAAEQ;AAApH,IADJ;AAGH,CA9BD;;GAAMT,gB;UAEaD,S,EACEP,W,EACQC,W,EACNA,W;;;KALjBO,gB;AAgCN,eAAeA,gBAAf","sourcesContent":["import React, {useEffect, createRef} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { \n    selectFilteredArticlesState,\n    selectFilterTextState\n} from './states/states';\nimport {\n    getFilteredArticles,\n    clearFilter } from './actions/articlesAction';\nimport Router, { useRouter } from 'next/router'\n\nconst ArticleSearchBar = () => {\n    const text = createRef<HTMLInputElement>()\n    const router = useRouter()\n    const disPatch = useDispatch();\n    const filteredArticles = useSelector(selectFilteredArticlesState);\n    const filterText = useSelector(selectFilterTextState)\n    \n    \n    useEffect(() => {\n        if (filterText.length !== 0) {\n            text.current.value = filterText;\n        }\n    },[]);\n    \n\n    const onChange = e => {\n        console.log(e.target.value)\n        if (text.current.value !== '') {\n            disPatch(getFilteredArticles(e.target.value));\n            if (router.pathname !== '/') {\n                Router.push(`/`)\n            }\n        } else {\n            disPatch(clearFilter());\n        }\n    }\n\n    return (    \n        <input className=\"article-searchbar\" ref={text} type=\"text\" placeholder=\"ex, ReactJS, next.js, Golang...\" onChange={onChange}/>\n    )\n}\n\nexport default ArticleSearchBar\n"]},"metadata":{},"sourceType":"module"}