{"ast":null,"code":"import { useDispatch, useSelector } from 'react-redux';\nconst disPatch = useDispatch();\nexport const refreshToken = async () => {\n  try {\n    const res = await axios.get('api/renew-token/');\n  } catch (error) {\n    console.log(error);\n    SetLogout();\n    SetLogoutForLocalSorage();\n  }\n};\nexport const SetLogout = () => {\n  disPatch(setLogout());\n  disPatch(setUsername(''));\n  disPatch(setUserId(-1));\n  disPatch(setEmail(''));\n  disPatch(setFinishedArticles([]));\n  disPatch(setAccessToken(''));\n  disPatch(setProvider(''));\n  disPatch(setBookmarks([]));\n};\nexport const SetLogoutForLocalSorage = () => {\n  localStorage.removeItem('login');\n  localStorage.removeItem('username');\n  localStorage.removeItem('email');\n  localStorage.removeItem('finishedArticles');\n  localStorage.removeItem('bookmarks');\n  localStorage.removeItem('token');\n  localStorage.removeItem('provider');\n};","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/account.js"],"names":["useDispatch","useSelector","disPatch","refreshToken","res","axios","get","error","console","log","SetLogout","SetLogoutForLocalSorage","setLogout","setUsername","setUserId","setEmail","setFinishedArticles","setAccessToken","setProvider","setBookmarks","localStorage","removeItem"],"mappings":"AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEA,OAAO,MAAMG,YAAY,GAAG,YAAY;AACpC,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,kBAAV,CAAlB;AACH,GAFD,CAEE,OAAMC,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,IAAAA,SAAS;AACTC,IAAAA,uBAAuB;AAC1B;AACJ,CARM;AAUP,OAAO,MAAMD,SAAS,GAAG,MAAM;AAC3BR,EAAAA,QAAQ,CAACU,SAAS,EAAV,CAAR;AACAV,EAAAA,QAAQ,CAACW,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAX,EAAAA,QAAQ,CAACY,SAAS,CAAC,CAAC,CAAF,CAAV,CAAR;AACAZ,EAAAA,QAAQ,CAACa,QAAQ,CAAC,EAAD,CAAT,CAAR;AACAb,EAAAA,QAAQ,CAACc,mBAAmB,CAAC,EAAD,CAApB,CAAR;AACAd,EAAAA,QAAQ,CAACe,cAAc,CAAC,EAAD,CAAf,CAAR;AACAf,EAAAA,QAAQ,CAACgB,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAhB,EAAAA,QAAQ,CAACiB,YAAY,CAAC,EAAD,CAAb,CAAR;AACH,CATM;AAWP,OAAO,MAAMR,uBAAuB,GAAG,MAAM;AACzCS,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,kBAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACH,CARM","sourcesContent":["\nimport { useDispatch, useSelector } from 'react-redux';\nconst disPatch = useDispatch();\n    \nexport const refreshToken = async () => {\n    try {\n        const res = await axios.get('api/renew-token/');\n    } catch(error) {\n        console.log(error)\n        SetLogout();\n        SetLogoutForLocalSorage();\n    }\n};\n\nexport const SetLogout = () => {\n    disPatch(setLogout());\n    disPatch(setUsername(''));\n    disPatch(setUserId(-1));\n    disPatch(setEmail(''));\n    disPatch(setFinishedArticles([]));\n    disPatch(setAccessToken(''));\n    disPatch(setProvider(''));\n    disPatch(setBookmarks([]));\n}\n\nexport const SetLogoutForLocalSorage = () => {\n    localStorage.removeItem('login');\n    localStorage.removeItem('username');\n    localStorage.removeItem('email');\n    localStorage.removeItem('finishedArticles');\n    localStorage.removeItem('bookmarks');\n    localStorage.removeItem('token');\n    localStorage.removeItem('provider');\n}\n"]},"metadata":{},"sourceType":"module"}