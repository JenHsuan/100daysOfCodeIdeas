{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nvar initialState = {};\nvar middleware = [thunk];\nvar store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/store/store.ts"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA,IAAMI,KAAK,GAAGP,WAAW,CACrBI,WADqB,EAErBC,YAFqB,EAGrBH,mBAAmB,CAACD,eAAe,MAAf,SAAmBK,UAAnB,CAAD,CAHE,CAAzB;AAQA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}