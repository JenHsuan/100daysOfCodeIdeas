{"ast":null,"code":"import { createStore } from 'redux';\nimport rootReducer from '../reducers';\nvar store = createStore(rootReducer);\nexport default store;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/store/store.ts"],"names":["createStore","rootReducer","store"],"mappings":"AAAA,SAASA,WAAT,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,IAAMC,KAAK,GAAGF,WAAW,CACrBC,WADqB,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n    rootReducer, \n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}