{"ast":null,"code":"import axios from 'axios'; //Types\n\nimport { GET_ARTICLES, GET_FILTERED_ARTICLES, SET_PARTIAL_ARTICLES, CLEAR_FILTER, SET_CATEGORY, CLEAR_CATEGORY, RESET_LOADING, SET_PLANNER, SET_PAPE_COUNT, SET_OFFSET, SET_LOADING, SET_LOGIN, SET_LOGOUT, SET_ACCESS_TOKEN } from '../types'; //Actions\n\nexport const getArticles = () => async dispatch => {\n  const res = await axios.get('/api/articles');\n  await dispatch({\n    type: GET_ARTICLES,\n    payload: res.data\n  });\n};\nexport const getFilteredArticles = text => dispatch => {\n  dispatch({\n    type: GET_FILTERED_ARTICLES,\n    payload: text\n  });\n};\nexport const setPartialArticles = articles => dispatch => {\n  dispatch({\n    type: SET_PARTIAL_ARTICLES,\n    payload: articles\n  });\n};\nexport const setLoading = isLoading => dispatch => {\n  dispatch({\n    type: SET_LOADING,\n    payload: isLoading\n  });\n};\nexport const setOffset = offset => dispatch => {\n  dispatch({\n    type: SET_OFFSET,\n    payload: offset\n  });\n};\nexport const setPageCount = pageCount => dispatch => {\n  dispatch({\n    type: SET_PAPE_COUNT,\n    payload: pageCount\n  });\n};\nexport const clearFilter = () => dispatch => {\n  dispatch({\n    type: CLEAR_FILTER\n  });\n};\nexport const setLogin = () => dispatch => {\n  dispatch({\n    type: SET_LOGIN\n  });\n};\nexport const setLogout = () => dispatch => {\n  dispatch({\n    type: SET_LOGOUT\n  });\n};\nexport const setAccessToken = token => dispatch => {\n  dispatch({\n    type: SET_ACCESS_TOKEN,\n    payload: token\n  });\n};\nexport const setCategory = category => dispatch => {\n  dispatch({\n    type: SET_CATEGORY,\n    payload: category\n  });\n};\nexport const clearCategory = () => dispatch => {\n  dispatch({\n    type: CLEAR_CATEGORY\n  });\n};\nexport const resetLoading = () => dispatch => {\n  dispatch({\n    type: RESET_LOADING\n  });\n};\nexport const setPlanner = showPlanner => dispatch => {\n  dispatch({\n    type: SET_PLANNER,\n    payload: showPlanner\n  });\n};","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/actions/articlesAction.ts"],"names":["axios","GET_ARTICLES","GET_FILTERED_ARTICLES","SET_PARTIAL_ARTICLES","CLEAR_FILTER","SET_CATEGORY","CLEAR_CATEGORY","RESET_LOADING","SET_PLANNER","SET_PAPE_COUNT","SET_OFFSET","SET_LOADING","SET_LOGIN","SET_LOGOUT","SET_ACCESS_TOKEN","getArticles","dispatch","res","get","type","payload","data","getFilteredArticles","text","setPartialArticles","articles","setLoading","isLoading","setOffset","offset","setPageCount","pageCount","clearFilter","setLogin","setLogout","setAccessToken","token","setCategory","category","clearCategory","resetLoading","setPlanner","showPlanner"],"mappings":"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","sourcesContent":["import axios from 'axios';\n//Types\nimport { \n    GET_ARTICLES,\n    GET_FILTERED_ARTICLES,\n    SET_PARTIAL_ARTICLES,\n    CLEAR_FILTER,\n    SET_CATEGORY,\n    CLEAR_CATEGORY,\n    RESET_LOADING,\n    SET_PLANNER,\n    SET_PERPAGE,\n    SET_PAPE_COUNT,\n    SET_OFFSET,\n    SET_LOADING,\n    SET_LOGIN,\n    SET_LOGOUT,\n    SET_ACCESS_TOKEN,\n    ArticleType \n} from '../types'\n\n//Actions\nexport interface GetArticlesAction {\n    readonly type: typeof GET_ARTICLES\n    readonly payload: Array<ArticleType>\n}\n\nexport interface GetFilteredArticlesAction {\n    readonly type: typeof GET_FILTERED_ARTICLES\n    readonly payload: string\n}\n\nexport interface SetPartialArticlesAction {\n    readonly type: typeof SET_PARTIAL_ARTICLES\n    readonly payload: string\n}\n\nexport interface SetPerpageAction {\n    readonly type: typeof SET_PERPAGE\n    readonly payload: number\n}\n\nexport interface SetPageCountAction {\n    readonly type: typeof SET_PAPE_COUNT\n    readonly payload: number\n}\n\nexport interface SetOffsetAction {\n    readonly type: typeof SET_OFFSET\n    readonly payload: number\n}\n\nexport interface SetLoadingAction {\n    readonly type: typeof SET_LOADING\n    readonly payload: boolean\n}\n\nexport interface ClearFilterAction {\n    readonly type: typeof CLEAR_FILTER\n}\n\nexport interface SetLoginAction {\n    readonly type: typeof SET_LOGIN\n}\n\nexport interface SetLogoutAction {\n    readonly type: typeof SET_LOGOUT\n}\n\nexport interface SetAccessTokenAction {\n    readonly type: typeof SET_ACCESS_TOKEN\n    readonly payload: string\n}\n\nexport interface SetCategoryAction {\n    readonly type: typeof SET_CATEGORY\n    readonly payload: string\n}\n\nexport interface ClearCategoryAction {\n    readonly type: typeof CLEAR_CATEGORY\n}\n\nexport interface ResetLoadingAction {\n    readonly type: typeof RESET_LOADING\n}\n\nexport interface SetPlannerAction {\n    readonly type: typeof SET_PLANNER\n    readonly payload: boolean\n}\n\nexport const getArticles = () => async dispatch => {\n        const res = await axios.get('/api/articles');\n        await dispatch({\n            type: GET_ARTICLES, \n            payload: res.data})\n}\n\nexport const getFilteredArticles = text => dispatch => {\n    dispatch({\n        type: GET_FILTERED_ARTICLES, \n        payload: text})\n}\n\nexport const setPartialArticles = articles => dispatch => {\n    dispatch({\n        type: SET_PARTIAL_ARTICLES, \n        payload: articles})\n}\n\nexport const setLoading = isLoading => dispatch => {\n    dispatch({\n        type: SET_LOADING, \n        payload: isLoading})\n}\n\nexport const setOffset = offset => dispatch => {\n    dispatch({\n        type: SET_OFFSET, \n        payload: offset})\n}\n\nexport const setPageCount = pageCount => dispatch => {\n    dispatch({\n        type: SET_PAPE_COUNT, \n        payload: pageCount})\n}\n\nexport const clearFilter = () => dispatch => {\n    dispatch({type: CLEAR_FILTER})\n}\n\nexport const setLogin = () => dispatch => {\n    dispatch({type: SET_LOGIN})\n}\n\nexport const setLogout = () => dispatch => {\n    dispatch({type: SET_LOGOUT})\n}\n\nexport const setAccessToken = token => dispatch => {\n    dispatch({\n        type: SET_ACCESS_TOKEN, \n        payload: token})\n}\n\nexport const setCategory = category => dispatch => {\n    dispatch({\n        type: SET_CATEGORY, \n        payload: category})\n}\n\nexport const clearCategory = () => dispatch => {\n    dispatch({type: CLEAR_CATEGORY})\n}\n\nexport const resetLoading = () => dispatch => {\n    dispatch({type: RESET_LOADING})\n}\n\nexport const setPlanner = showPlanner => dispatch => {\n    dispatch({\n        type: SET_PLANNER, \n        payload: showPlanner})\n}\n\n\n"]},"metadata":{},"sourceType":"module"}