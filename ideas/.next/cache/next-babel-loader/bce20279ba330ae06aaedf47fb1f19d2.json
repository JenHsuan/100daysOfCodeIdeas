{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoginState, selectArticlesState } from './states/states';\nimport axios from 'axios';\nimport { setLogin, setLogout, setLoading, setAccessToken, setEmail, setUsername, setErrorMessage, getArticles, setPlanner, setProvider } from './actions/articlesAction';\nimport { useMediaPredicate } from \"react-media-hook\";\n\nconst FormWrapper = WrappedComponent => () => {\n  const disPatch = useDispatch();\n  const isLogin = useSelector(selectLoginState);\n  const articles = useSelector(selectArticlesState);\n  const provider = useSelector(selectProviderState);\n  const userId = useSelector(selectUserIdState);\n  const email = useSelector(selectEmailState);\n  const token = useSelector(selectAccessTokenState); //const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (articles.length === 0) {\n      console.log('fetch articles');\n      disPatch(getArticles());\n    }\n\n    if (smallerThan600) {\n      disPatch(setPlanner(false));\n    }\n  }, []);\n  useEffect(() => {\n    if (isLogin) {\n      Router.push(`/`);\n    }\n  }, [isLogin]);\n\n  const passAccessToken = async (provider, access_token) => {\n    console.log(access_token);\n    console.log(provider);\n    const res = await axios.post('/api/social-auth', {\n      provider: provider,\n      access_token: access_token\n    });\n    return res;\n  };\n\n  const responseFacebook = async (response, setMessage) => {\n    try {\n      disPatch(setLoading(true));\n      console.log(response[\"accessToken\"]);\n      console.log(response);\n      const responseFromDjango = await passAccessToken('facebook', response[\"accessToken\"]);\n      console.log(responseFromDjango);\n      const token = responseFromDjango[\"data\"][\"token\"];\n      const username = responseFromDjango[\"data\"][\"username\"];\n      const provider = responseFromDjango[\"data\"][\"provider\"];\n      const email = response[\"email\"];\n      SetLogin(token, email, username, provider);\n      disPatch(setLoading(false));\n    } catch (error) {\n      //res.data = error;\n      //setMessage(error.message)\n      //setValue({...value, ['messages']: error.message})\n      disPatch(setLoading(false));\n      disPatch(setErrorMessage(error.message));\n      console.log(error);\n      disPatch(setLogout());\n    }\n  };\n\n  const SetLogin = (token, email, username, provider) => {\n    if (email !== null && email !== undefined && email.length > 0) {\n      disPatch(setEmail(email)); //local storage\n\n      localStorage.setItem(\"email\", email);\n    }\n\n    if (username !== null && username !== undefined && username.length > 0) {\n      disPatch(setUsername(username)); //local storage\n\n      localStorage.setItem(\"username\", username);\n    }\n\n    if (provider !== null && provider !== undefined && provider.length > 0) {\n      disPatch(setProvider(provider)); //local storage\n\n      localStorage.setItem(\"provider\", provider);\n    }\n\n    disPatch(setLogin());\n    disPatch(setAccessToken(token)); //local storage\n\n    localStorage.setItem(\"login\", \"true\");\n  };\n\n  const ResponseGithubOnSuccess = async (response, setMessage) => {\n    try {\n      disPatch(setLoading(true));\n      const responseFromGithub = await axios.post('/api/get-github-access-token', {\n        code: response['code']\n      });\n      console.log(response);\n      const responseFromDjango = await passAccessToken('github', responseFromGithub['data']);\n      console.log(responseFromDjango);\n      const token = responseFromDjango[\"data\"][\"token\"];\n      const email = responseFromDjango[\"data\"][\"email\"];\n      const provider = responseFromDjango[\"data\"][\"provider\"];\n      const username = responseFromDjango[\"data\"][\"username\"];\n      SetLogin(token, email, username, provider);\n      disPatch(setLoading(false));\n    } catch (error) {\n      //res.data = error;\n      //setValue({...value, ['messages']: error.message})\n      disPatch(setLoading(false));\n      disPatch(setErrorMessage(error.message));\n      console.log(error);\n      disPatch(setLogout());\n    }\n  };\n\n  const ResponseGithubOnFailure = response => console.error(response);\n\n  return __jsx(WrappedComponent, {\n    passAccessToken: passAccessToken,\n    responseFacebook: responseFacebook,\n    ResponseGithubOnSuccess: ResponseGithubOnSuccess,\n    ResponseGithubOnFailure: ResponseGithubOnFailure,\n    SetLogin: SetLogin\n  });\n};\n\nexport default FormWrapper;","map":{"version":3,"sources":["/Users/seanhsieh/github/100daysOfCodeIdeas/ideas/src/components/FormWrapper.jsx"],"names":["React","useEffect","Router","useDispatch","useSelector","selectLoginState","selectArticlesState","axios","setLogin","setLogout","setLoading","setAccessToken","setEmail","setUsername","setErrorMessage","getArticles","setPlanner","setProvider","useMediaPredicate","FormWrapper","WrappedComponent","disPatch","isLogin","articles","provider","selectProviderState","userId","selectUserIdState","email","selectEmailState","token","selectAccessTokenState","length","console","log","smallerThan600","push","passAccessToken","access_token","res","post","responseFacebook","response","setMessage","responseFromDjango","username","SetLogin","error","message","undefined","localStorage","setItem","ResponseGithubOnSuccess","responseFromGithub","code","ResponseGithubOnFailure"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport Router from 'next/router'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectLoginState,\n    selectArticlesState\n} from './states/states';\n\nimport axios from 'axios';\nimport { \n    setLogin,\n    setLogout,\n    setLoading,\n    setAccessToken,\n    setEmail,\n    setUsername,\n    setErrorMessage,\n    getArticles,\n    setPlanner,\n    setProvider\n} from './actions/articlesAction';\nimport { useMediaPredicate } from \"react-media-hook\";\n\nconst FormWrapper = (WrappedComponent) => ()=> {\n    const disPatch = useDispatch();\n    const isLogin = useSelector(selectLoginState);\n    const articles = useSelector(selectArticlesState);\n    const provider = useSelector(selectProviderState);\n    const userId = useSelector(selectUserIdState);\n    const email = useSelector(selectEmailState);\n    const token = useSelector(selectAccessTokenState)\n    //const [isLoading, setLoading] = useState(false);\n\n    useEffect(()=> {\n        if (articles.length === 0) {\n            console.log('fetch articles')\n            disPatch(getArticles());\n        }\n        if (smallerThan600) {\n            disPatch(setPlanner(false));\n        }\n    }, [])\n\n    useEffect(()=> {\n        if (isLogin) {\n            Router.push(`/`)\n        }\n    }, [isLogin])\n\n    const passAccessToken = async (provider, access_token) => {\n        console.log(access_token)\n        console.log(provider)\n        const res = await axios.post('/api/social-auth', {\n            provider: provider,\n            access_token: access_token\n        });\n        return res;\n    }\n\n    const responseFacebook = async (response, setMessage) => {\n        try {\n            disPatch(setLoading(true));\n            console.log(response[\"accessToken\"])\n            console.log(response)\n            const responseFromDjango = await passAccessToken('facebook', response[\"accessToken\"]);\n            console.log(responseFromDjango);\n            const token = responseFromDjango[\"data\"][\"token\"];\n            const username = responseFromDjango[\"data\"][\"username\"];\n            const provider = responseFromDjango[\"data\"][\"provider\"];\n            const email = response[\"email\"];\n            SetLogin(token, email, username, provider);\n            disPatch(setLoading(false));\n        } catch (error) {\n            //res.data = error;\n            //setMessage(error.message)\n            //setValue({...value, ['messages']: error.message})\n            disPatch(setLoading(false));\n            disPatch(setErrorMessage(error.message))\n            console.log(error);\n            disPatch(setLogout());\n        }\n    }\n\n    const SetLogin = (token, email, username, provider) => {\n        if (email !== null && email !== undefined && email.length >0 ) {\n            disPatch(setEmail(email));\n            //local storage\n            localStorage.setItem(\"email\", email);\n        }\n        if (username !== null && username !== undefined && username.length >0 ) {\n            disPatch(setUsername(username));\n            //local storage\n            localStorage.setItem(\"username\", username);\n        }\n\n        if (provider !== null && provider !== undefined && provider.length >0 ) {\n            disPatch(setProvider(provider));\n            //local storage\n            localStorage.setItem(\"provider\", provider);\n        }\n\n        disPatch(setLogin());\n        disPatch(setAccessToken(token));\n        //local storage\n        localStorage.setItem(\"login\", \"true\");\n    }\n\n    const ResponseGithubOnSuccess = async (response, setMessage) => {\n        try {\n            disPatch(setLoading(true));\n            const responseFromGithub = await axios.post('/api/get-github-access-token', {\n                code: response['code']\n            });\n            console.log(response);\n            \n            const responseFromDjango = await passAccessToken('github', responseFromGithub['data']);\n            console.log(responseFromDjango);\n            const token = responseFromDjango[\"data\"][\"token\"];\n            const email = responseFromDjango[\"data\"][\"email\"];\n            const provider = responseFromDjango[\"data\"][\"provider\"];\n            const username = responseFromDjango[\"data\"][\"username\"];\n            SetLogin(token, email, username, provider);\n            disPatch(setLoading(false));\n        } catch (error) {\n            //res.data = error;\n            //setValue({...value, ['messages']: error.message})\n            disPatch(setLoading(false));\n            disPatch(setErrorMessage(error.message))\n            console.log(error);\n            disPatch(setLogout());\n        }\n    }\n\n    const ResponseGithubOnFailure = response => console.error(response);  \n\n    return (\n        <WrappedComponent passAccessToken = {passAccessToken}\n            responseFacebook = {responseFacebook}\n            ResponseGithubOnSuccess = {ResponseGithubOnSuccess}\n            ResponseGithubOnFailure = {ResponseGithubOnFailure}\n            SetLogin = {SetLogin}/>\n    )\n}\n\nexport default FormWrapper\n"]},"metadata":{},"sourceType":"module"}